
STM32_Curtain_Controller.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000053b4  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000006e4  08005554  08005554  00015554  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005c38  08005c38  000200ac  2**0
                  CONTENTS
  4 .ARM          00000000  08005c38  08005c38  000200ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  08005c38  08005c38  000200ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005c38  08005c38  00015c38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08005c3c  08005c3c  00015c3c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000ac  20000000  08005c40  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00001640  200000ac  08005cec  000200ac  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200016ec  08005cec  000216ec  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000200ac  2**0
                  CONTENTS, READONLY
 12 .comment      000000be  00000000  00000000  000200dc  2**0
                  CONTENTS, READONLY
 13 .debug_info   00037a81  00000000  00000000  0002019a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000032f3  00000000  00000000  00057c1b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000cc0  00000000  00000000  0005af10  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000179  00000000  00000000  0005bbd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00010070  00000000  00000000  0005bd49  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000cbbd  00000000  00000000  0006bdb9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0004b4ed  00000000  00000000  00078976  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000034e0  00000000  00000000  000c3e64  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005e  00000000  00000000  000c7344  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 000008f8  00000000  00000000  000c73a2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200000ac 	.word	0x200000ac
 80001bc:	00000000 	.word	0x00000000
 80001c0:	0800553c 	.word	0x0800553c

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200000b0 	.word	0x200000b0
 80001dc:	0800553c 	.word	0x0800553c

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <DeviceManager_DeviceInit>:
static void DeviceManager_SetUpdatePending(void);
static void DeviceManager_ClearUpdatePending(void);



void DeviceManager_DeviceInit(deviceManagingHandler handler, DEVICE_TYPE_e type){
 8000280:	b580      	push	{r7, lr}
 8000282:	b084      	sub	sp, #16
 8000284:	af02      	add	r7, sp, #8
 8000286:	6078      	str	r0, [r7, #4]
 8000288:	460b      	mov	r3, r1
 800028a:	70fb      	strb	r3, [r7, #3]
	s_device.type = type;
 800028c:	4a12      	ldr	r2, [pc, #72]	; (80002d8 <DeviceManager_DeviceInit+0x58>)
 800028e:	78fb      	ldrb	r3, [r7, #3]
 8000290:	7053      	strb	r3, [r2, #1]
	s_device.level = 0;
 8000292:	4b11      	ldr	r3, [pc, #68]	; (80002d8 <DeviceManager_DeviceInit+0x58>)
 8000294:	2200      	movs	r2, #0
 8000296:	709a      	strb	r2, [r3, #2]
	s_device.state = OFFLINE;
 8000298:	4b0f      	ldr	r3, [pc, #60]	; (80002d8 <DeviceManager_DeviceInit+0x58>)
 800029a:	2201      	movs	r2, #1
 800029c:	701a      	strb	r2, [r3, #0]
	s_device.lastTime = 0;
 800029e:	4b0e      	ldr	r3, [pc, #56]	; (80002d8 <DeviceManager_DeviceInit+0x58>)
 80002a0:	2200      	movs	r2, #0
 80002a2:	605a      	str	r2, [r3, #4]
	s_device.updatePending = false;
 80002a4:	4b0c      	ldr	r3, [pc, #48]	; (80002d8 <DeviceManager_DeviceInit+0x58>)
 80002a6:	2200      	movs	r2, #0
 80002a8:	721a      	strb	r2, [r3, #8]
	s_deviceHandler = handler;
 80002aa:	4a0c      	ldr	r2, [pc, #48]	; (80002dc <DeviceManager_DeviceInit+0x5c>)
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	6013      	str	r3, [r2, #0]

	//call the handler to display device state 
	s_deviceHandler();
 80002b0:	4b0a      	ldr	r3, [pc, #40]	; (80002dc <DeviceManager_DeviceInit+0x5c>)
 80002b2:	681b      	ldr	r3, [r3, #0]
 80002b4:	4798      	blx	r3

	//timer with 1 minute cycle to check for update
	s_idUpdateTimer = TimerStart("DeviceManager_Update",
 80002b6:	2300      	movs	r3, #0
 80002b8:	9300      	str	r3, [sp, #0]
 80002ba:	4b09      	ldr	r3, [pc, #36]	; (80002e0 <DeviceManager_DeviceInit+0x60>)
 80002bc:	22ff      	movs	r2, #255	; 0xff
 80002be:	f64e 2160 	movw	r1, #60000	; 0xea60
 80002c2:	4808      	ldr	r0, [pc, #32]	; (80002e4 <DeviceManager_DeviceInit+0x64>)
 80002c4:	f002 f826 	bl	8002314 <TimerStart>
 80002c8:	4603      	mov	r3, r0
 80002ca:	461a      	mov	r2, r3
 80002cc:	4b06      	ldr	r3, [pc, #24]	; (80002e8 <DeviceManager_DeviceInit+0x68>)
 80002ce:	701a      	strb	r2, [r3, #0]
								  1000 * 60,
								  TIMER_REPEAT_FOREVER,
								  DeviceManager_Update,
								  NULL);
}
 80002d0:	bf00      	nop
 80002d2:	3708      	adds	r7, #8
 80002d4:	46bd      	mov	sp, r7
 80002d6:	bd80      	pop	{r7, pc}
 80002d8:	200000c8 	.word	0x200000c8
 80002dc:	200000d4 	.word	0x200000d4
 80002e0:	080003a9 	.word	0x080003a9
 80002e4:	08005554 	.word	0x08005554
 80002e8:	20000000 	.word	0x20000000

080002ec <DeviceManager_GetDevice>:
DEVICE_s DeviceManager_GetDevice(void){
 80002ec:	b480      	push	{r7}
 80002ee:	b083      	sub	sp, #12
 80002f0:	af00      	add	r7, sp, #0
 80002f2:	6078      	str	r0, [r7, #4]
	return s_device;
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	4a05      	ldr	r2, [pc, #20]	; (800030c <DeviceManager_GetDevice+0x20>)
 80002f8:	ca07      	ldmia	r2, {r0, r1, r2}
 80002fa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
}
 80002fe:	6878      	ldr	r0, [r7, #4]
 8000300:	370c      	adds	r7, #12
 8000302:	46bd      	mov	sp, r7
 8000304:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000308:	4770      	bx	lr
 800030a:	bf00      	nop
 800030c:	200000c8 	.word	0x200000c8

08000310 <DeviceManager_SetDeviceOnline>:
void DeviceManager_SetDeviceOnline(void){
 8000310:	b580      	push	{r7, lr}
 8000312:	af00      	add	r7, sp, #0
	s_device.state = ONLINE;
 8000314:	4b05      	ldr	r3, [pc, #20]	; (800032c <DeviceManager_SetDeviceOnline+0x1c>)
 8000316:	2200      	movs	r2, #0
 8000318:	701a      	strb	r2, [r3, #0]
	if(s_deviceHandler != NULL){
 800031a:	4b05      	ldr	r3, [pc, #20]	; (8000330 <DeviceManager_SetDeviceOnline+0x20>)
 800031c:	681b      	ldr	r3, [r3, #0]
 800031e:	2b00      	cmp	r3, #0
 8000320:	d002      	beq.n	8000328 <DeviceManager_SetDeviceOnline+0x18>
		s_deviceHandler();
 8000322:	4b03      	ldr	r3, [pc, #12]	; (8000330 <DeviceManager_SetDeviceOnline+0x20>)
 8000324:	681b      	ldr	r3, [r3, #0]
 8000326:	4798      	blx	r3
	}
}
 8000328:	bf00      	nop
 800032a:	bd80      	pop	{r7, pc}
 800032c:	200000c8 	.word	0x200000c8
 8000330:	200000d4 	.word	0x200000d4

08000334 <DeviceManager_SetDeviceOffline>:
void DeviceManager_SetDeviceOffline(void){
 8000334:	b580      	push	{r7, lr}
 8000336:	af00      	add	r7, sp, #0
	s_device.state = OFFLINE;
 8000338:	4b05      	ldr	r3, [pc, #20]	; (8000350 <DeviceManager_SetDeviceOffline+0x1c>)
 800033a:	2201      	movs	r2, #1
 800033c:	701a      	strb	r2, [r3, #0]
	if(s_deviceHandler != NULL){
 800033e:	4b05      	ldr	r3, [pc, #20]	; (8000354 <DeviceManager_SetDeviceOffline+0x20>)
 8000340:	681b      	ldr	r3, [r3, #0]
 8000342:	2b00      	cmp	r3, #0
 8000344:	d002      	beq.n	800034c <DeviceManager_SetDeviceOffline+0x18>
		s_deviceHandler();
 8000346:	4b03      	ldr	r3, [pc, #12]	; (8000354 <DeviceManager_SetDeviceOffline+0x20>)
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	4798      	blx	r3
	}
}
 800034c:	bf00      	nop
 800034e:	bd80      	pop	{r7, pc}
 8000350:	200000c8 	.word	0x200000c8
 8000354:	200000d4 	.word	0x200000d4

08000358 <DeviceManager_SetDeviceLevel>:
void DeviceManager_SetDeviceLevel(uint8_t level){
 8000358:	b580      	push	{r7, lr}
 800035a:	b082      	sub	sp, #8
 800035c:	af00      	add	r7, sp, #0
 800035e:	4603      	mov	r3, r0
 8000360:	71fb      	strb	r3, [r7, #7]
	s_device.level = level;
 8000362:	4a07      	ldr	r2, [pc, #28]	; (8000380 <DeviceManager_SetDeviceLevel+0x28>)
 8000364:	79fb      	ldrb	r3, [r7, #7]
 8000366:	7093      	strb	r3, [r2, #2]
	if(s_deviceHandler != NULL){
 8000368:	4b06      	ldr	r3, [pc, #24]	; (8000384 <DeviceManager_SetDeviceLevel+0x2c>)
 800036a:	681b      	ldr	r3, [r3, #0]
 800036c:	2b00      	cmp	r3, #0
 800036e:	d002      	beq.n	8000376 <DeviceManager_SetDeviceLevel+0x1e>
		s_deviceHandler();
 8000370:	4b04      	ldr	r3, [pc, #16]	; (8000384 <DeviceManager_SetDeviceLevel+0x2c>)
 8000372:	681b      	ldr	r3, [r3, #0]
 8000374:	4798      	blx	r3
	}
}
 8000376:	bf00      	nop
 8000378:	3708      	adds	r7, #8
 800037a:	46bd      	mov	sp, r7
 800037c:	bd80      	pop	{r7, pc}
 800037e:	bf00      	nop
 8000380:	200000c8 	.word	0x200000c8
 8000384:	200000d4 	.word	0x200000d4

08000388 <DeviceManager_UpdateLastTime>:
void DeviceManager_UpdateLastTime(uint32_t time){
 8000388:	b580      	push	{r7, lr}
 800038a:	b082      	sub	sp, #8
 800038c:	af00      	add	r7, sp, #0
 800038e:	6078      	str	r0, [r7, #4]
	s_device.lastTime = time;
 8000390:	4a04      	ldr	r2, [pc, #16]	; (80003a4 <DeviceManager_UpdateLastTime+0x1c>)
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	6053      	str	r3, [r2, #4]

	//clear any pending update
	DeviceManager_ClearUpdatePending();
 8000396:	f000 f867 	bl	8000468 <DeviceManager_ClearUpdatePending>
}
 800039a:	bf00      	nop
 800039c:	3708      	adds	r7, #8
 800039e:	46bd      	mov	sp, r7
 80003a0:	bd80      	pop	{r7, pc}
 80003a2:	bf00      	nop
 80003a4:	200000c8 	.word	0x200000c8

080003a8 <DeviceManager_Update>:
void DeviceManager_Update(void){
 80003a8:	b580      	push	{r7, lr}
 80003aa:	b086      	sub	sp, #24
 80003ac:	af00      	add	r7, sp, #0
	//has been 15 minutes passed
	uint32_t currentTime = GetMilSecTick();
 80003ae:	f002 f863 	bl	8002478 <GetMilSecTick>
 80003b2:	6178      	str	r0, [r7, #20]
	if(DeviceManager_IsUpdatePending() == false && Timer_CalcTimeDiff(s_device.lastTime, currentTime) >= DEVICE_AUTO_UPDATE_INTERVAL){
 80003b4:	f000 f840 	bl	8000438 <DeviceManager_IsUpdatePending>
 80003b8:	4603      	mov	r3, r0
 80003ba:	f083 0301 	eor.w	r3, r3, #1
 80003be:	b2db      	uxtb	r3, r3
 80003c0:	2b00      	cmp	r3, #0
 80003c2:	d013      	beq.n	80003ec <DeviceManager_Update+0x44>
 80003c4:	4b18      	ldr	r3, [pc, #96]	; (8000428 <DeviceManager_Update+0x80>)
 80003c6:	685b      	ldr	r3, [r3, #4]
 80003c8:	6979      	ldr	r1, [r7, #20]
 80003ca:	4618      	mov	r0, r3
 80003cc:	f000 fdcc 	bl	8000f68 <Timer_CalcTimeDiff>
 80003d0:	4603      	mov	r3, r0
 80003d2:	4a16      	ldr	r2, [pc, #88]	; (800042c <DeviceManager_Update+0x84>)
 80003d4:	4293      	cmp	r3, r2
 80003d6:	d909      	bls.n	80003ec <DeviceManager_Update+0x44>
		//send update frame to device
		USART_FRAME frame = USART_GenerateDeviceReport();
 80003d8:	1d3b      	adds	r3, r7, #4
 80003da:	4618      	mov	r0, r3
 80003dc:	f000 fb7b 	bl	8000ad6 <USART_GenerateDeviceReport>
		USART_SendFrame(frame);
 80003e0:	1d3b      	adds	r3, r7, #4
 80003e2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80003e4:	f000 fa6d 	bl	80008c2 <USART_SendFrame>
		DeviceManager_SetUpdatePending();
 80003e8:	f000 f832 	bl	8000450 <DeviceManager_SetUpdatePending>
	}

	//wait for update (1 minute after send update frame)
	if(DeviceManager_IsUpdatePending() &&
 80003ec:	f000 f824 	bl	8000438 <DeviceManager_IsUpdatePending>
 80003f0:	4603      	mov	r3, r0
 80003f2:	2b00      	cmp	r3, #0
 80003f4:	d014      	beq.n	8000420 <DeviceManager_Update+0x78>
			Timer_CalcTimeDiff(s_device.lastTime, currentTime) >= DEVICE_AUTO_UPDATE_INTERVAL + DEVICE_UPDATE_PENDING_WAIT_INTERVAL){
 80003f6:	4b0c      	ldr	r3, [pc, #48]	; (8000428 <DeviceManager_Update+0x80>)
 80003f8:	685b      	ldr	r3, [r3, #4]
 80003fa:	6979      	ldr	r1, [r7, #20]
 80003fc:	4618      	mov	r0, r3
 80003fe:	f000 fdb3 	bl	8000f68 <Timer_CalcTimeDiff>
 8000402:	4603      	mov	r3, r0
	if(DeviceManager_IsUpdatePending() &&
 8000404:	4a0a      	ldr	r2, [pc, #40]	; (8000430 <DeviceManager_Update+0x88>)
 8000406:	4293      	cmp	r3, r2
 8000408:	d90a      	bls.n	8000420 <DeviceManager_Update+0x78>
		//set device as offline
		DeviceManager_SetDeviceOffline();
 800040a:	f7ff ff93 	bl	8000334 <DeviceManager_SetDeviceOffline>
		DeviceManager_ClearUpdatePending();
 800040e:	f000 f82b 	bl	8000468 <DeviceManager_ClearUpdatePending>

		//call app layer to handler connection state changed
		if(s_deviceHandler != NULL){
 8000412:	4b08      	ldr	r3, [pc, #32]	; (8000434 <DeviceManager_Update+0x8c>)
 8000414:	681b      	ldr	r3, [r3, #0]
 8000416:	2b00      	cmp	r3, #0
 8000418:	d002      	beq.n	8000420 <DeviceManager_Update+0x78>
			s_deviceHandler();
 800041a:	4b06      	ldr	r3, [pc, #24]	; (8000434 <DeviceManager_Update+0x8c>)
 800041c:	681b      	ldr	r3, [r3, #0]
 800041e:	4798      	blx	r3
		}
	}
}
 8000420:	bf00      	nop
 8000422:	3718      	adds	r7, #24
 8000424:	46bd      	mov	sp, r7
 8000426:	bd80      	pop	{r7, pc}
 8000428:	200000c8 	.word	0x200000c8
 800042c:	000dbb9f 	.word	0x000dbb9f
 8000430:	000ea5ff 	.word	0x000ea5ff
 8000434:	200000d4 	.word	0x200000d4

08000438 <DeviceManager_IsUpdatePending>:



static bool DeviceManager_IsUpdatePending(void){
 8000438:	b480      	push	{r7}
 800043a:	af00      	add	r7, sp, #0
	return s_device.updatePending;
 800043c:	4b03      	ldr	r3, [pc, #12]	; (800044c <DeviceManager_IsUpdatePending+0x14>)
 800043e:	7a1b      	ldrb	r3, [r3, #8]
}
 8000440:	4618      	mov	r0, r3
 8000442:	46bd      	mov	sp, r7
 8000444:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000448:	4770      	bx	lr
 800044a:	bf00      	nop
 800044c:	200000c8 	.word	0x200000c8

08000450 <DeviceManager_SetUpdatePending>:
static void DeviceManager_SetUpdatePending(void){
 8000450:	b480      	push	{r7}
 8000452:	af00      	add	r7, sp, #0
	s_device.updatePending = true;
 8000454:	4b03      	ldr	r3, [pc, #12]	; (8000464 <DeviceManager_SetUpdatePending+0x14>)
 8000456:	2201      	movs	r2, #1
 8000458:	721a      	strb	r2, [r3, #8]
}
 800045a:	bf00      	nop
 800045c:	46bd      	mov	sp, r7
 800045e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000462:	4770      	bx	lr
 8000464:	200000c8 	.word	0x200000c8

08000468 <DeviceManager_ClearUpdatePending>:
static void DeviceManager_ClearUpdatePending(void){
 8000468:	b480      	push	{r7}
 800046a:	af00      	add	r7, sp, #0
	s_device.updatePending = false;
 800046c:	4b03      	ldr	r3, [pc, #12]	; (800047c <DeviceManager_ClearUpdatePending+0x14>)
 800046e:	2200      	movs	r2, #0
 8000470:	721a      	strb	r2, [r3, #8]
}
 8000472:	bf00      	nop
 8000474:	46bd      	mov	sp, r7
 8000476:	f85d 7b04 	ldr.w	r7, [sp], #4
 800047a:	4770      	bx	lr
 800047c:	200000c8 	.word	0x200000c8

08000480 <LCD_Init>:
static char s_drawString[40] = {0};
static char s_curtainString[40] = {0};
static char s_emptyString[40] = {0};


void LCD_Init(void){
 8000480:	b580      	push	{r7, lr}
 8000482:	b082      	sub	sp, #8
 8000484:	af02      	add	r7, sp, #8
	Ucglib4WireSWSPI_begin(&s_ucg, UCG_FONT_MODE_SOLID);
 8000486:	2100      	movs	r1, #0
 8000488:	4815      	ldr	r0, [pc, #84]	; (80004e0 <LCD_Init+0x60>)
 800048a:	f002 fa57 	bl	800293c <Ucglib4WireSWSPI_begin>
	ucg_ClearScreen(&s_ucg);
 800048e:	4814      	ldr	r0, [pc, #80]	; (80004e0 <LCD_Init+0x60>)
 8000490:	f002 fa9b 	bl	80029ca <ucg_ClearScreen>
	ucg_SetFont(&s_ucg, ucg_font_ncenR08_hr);
 8000494:	4913      	ldr	r1, [pc, #76]	; (80004e4 <LCD_Init+0x64>)
 8000496:	4812      	ldr	r0, [pc, #72]	; (80004e0 <LCD_Init+0x60>)
 8000498:	f003 fbb0 	bl	8003bfc <ucg_SetFont>
	ucg_SetColor(&s_ucg, 0, 255, 255, 255);
 800049c:	23ff      	movs	r3, #255	; 0xff
 800049e:	9300      	str	r3, [sp, #0]
 80004a0:	23ff      	movs	r3, #255	; 0xff
 80004a2:	22ff      	movs	r2, #255	; 0xff
 80004a4:	2100      	movs	r1, #0
 80004a6:	480e      	ldr	r0, [pc, #56]	; (80004e0 <LCD_Init+0x60>)
 80004a8:	f003 fc87 	bl	8003dba <ucg_SetColor>
	ucg_SetColor(&s_ucg, 1, 0, 0, 0);
 80004ac:	2300      	movs	r3, #0
 80004ae:	9300      	str	r3, [sp, #0]
 80004b0:	2300      	movs	r3, #0
 80004b2:	2200      	movs	r2, #0
 80004b4:	2101      	movs	r1, #1
 80004b6:	480a      	ldr	r0, [pc, #40]	; (80004e0 <LCD_Init+0x60>)
 80004b8:	f003 fc7f 	bl	8003dba <ucg_SetColor>
	ucg_SetRotate270(&s_ucg);
 80004bc:	4808      	ldr	r0, [pc, #32]	; (80004e0 <LCD_Init+0x60>)
 80004be:	f003 fd69 	bl	8003f94 <ucg_SetRotate270>

	sprintf(s_drawString, "------------------------------");//30 ki tu
 80004c2:	4909      	ldr	r1, [pc, #36]	; (80004e8 <LCD_Init+0x68>)
 80004c4:	4809      	ldr	r0, [pc, #36]	; (80004ec <LCD_Init+0x6c>)
 80004c6:	f004 fc49 	bl	8004d5c <siprintf>
	sprintf(s_curtainString, "---");
 80004ca:	4909      	ldr	r1, [pc, #36]	; (80004f0 <LCD_Init+0x70>)
 80004cc:	4809      	ldr	r0, [pc, #36]	; (80004f4 <LCD_Init+0x74>)
 80004ce:	f004 fc45 	bl	8004d5c <siprintf>
	sprintf(s_emptyString, "   ");
 80004d2:	4909      	ldr	r1, [pc, #36]	; (80004f8 <LCD_Init+0x78>)
 80004d4:	4809      	ldr	r0, [pc, #36]	; (80004fc <LCD_Init+0x7c>)
 80004d6:	f004 fc41 	bl	8004d5c <siprintf>
}
 80004da:	bf00      	nop
 80004dc:	46bd      	mov	sp, r7
 80004de:	bd80      	pop	{r7, pc}
 80004e0:	200000d8 	.word	0x200000d8
 80004e4:	08005708 	.word	0x08005708
 80004e8:	0800556c 	.word	0x0800556c
 80004ec:	200001dc 	.word	0x200001dc
 80004f0:	0800558c 	.word	0x0800558c
 80004f4:	20000204 	.word	0x20000204
 80004f8:	08005590 	.word	0x08005590
 80004fc:	2000022c 	.word	0x2000022c

08000500 <LCD_DisplayState>:
void LCD_DisplayState(CONNECTION_STATE_e state){
 8000500:	b580      	push	{r7, lr}
 8000502:	b084      	sub	sp, #16
 8000504:	af02      	add	r7, sp, #8
 8000506:	4603      	mov	r3, r0
 8000508:	71fb      	strb	r3, [r7, #7]
	if(state == ONLINE){
 800050a:	79fb      	ldrb	r3, [r7, #7]
 800050c:	2b00      	cmp	r3, #0
 800050e:	d10c      	bne.n	800052a <LCD_DisplayState+0x2a>
		sprintf(s_connectionSrc, "Device state: Online        ");
 8000510:	490f      	ldr	r1, [pc, #60]	; (8000550 <LCD_DisplayState+0x50>)
 8000512:	4810      	ldr	r0, [pc, #64]	; (8000554 <LCD_DisplayState+0x54>)
 8000514:	f004 fc22 	bl	8004d5c <siprintf>
		ucg_DrawString(&s_ucg, 5, 12, 0, s_connectionSrc);
 8000518:	4b0e      	ldr	r3, [pc, #56]	; (8000554 <LCD_DisplayState+0x54>)
 800051a:	9300      	str	r3, [sp, #0]
 800051c:	2300      	movs	r3, #0
 800051e:	220c      	movs	r2, #12
 8000520:	2105      	movs	r1, #5
 8000522:	480d      	ldr	r0, [pc, #52]	; (8000558 <LCD_DisplayState+0x58>)
 8000524:	f003 faa6 	bl	8003a74 <ucg_DrawString>
	}
	else if(state == OFFLINE){
		sprintf(s_connectionSrc, "Device state: Offline       ");
		ucg_DrawString(&s_ucg, 5, 12, 0, s_connectionSrc);
	}
}
 8000528:	e00e      	b.n	8000548 <LCD_DisplayState+0x48>
	else if(state == OFFLINE){
 800052a:	79fb      	ldrb	r3, [r7, #7]
 800052c:	2b01      	cmp	r3, #1
 800052e:	d10b      	bne.n	8000548 <LCD_DisplayState+0x48>
		sprintf(s_connectionSrc, "Device state: Offline       ");
 8000530:	490a      	ldr	r1, [pc, #40]	; (800055c <LCD_DisplayState+0x5c>)
 8000532:	4808      	ldr	r0, [pc, #32]	; (8000554 <LCD_DisplayState+0x54>)
 8000534:	f004 fc12 	bl	8004d5c <siprintf>
		ucg_DrawString(&s_ucg, 5, 12, 0, s_connectionSrc);
 8000538:	4b06      	ldr	r3, [pc, #24]	; (8000554 <LCD_DisplayState+0x54>)
 800053a:	9300      	str	r3, [sp, #0]
 800053c:	2300      	movs	r3, #0
 800053e:	220c      	movs	r2, #12
 8000540:	2105      	movs	r1, #5
 8000542:	4805      	ldr	r0, [pc, #20]	; (8000558 <LCD_DisplayState+0x58>)
 8000544:	f003 fa96 	bl	8003a74 <ucg_DrawString>
}
 8000548:	bf00      	nop
 800054a:	3708      	adds	r7, #8
 800054c:	46bd      	mov	sp, r7
 800054e:	bd80      	pop	{r7, pc}
 8000550:	08005594 	.word	0x08005594
 8000554:	200001b4 	.word	0x200001b4
 8000558:	200000d8 	.word	0x200000d8
 800055c:	080055b4 	.word	0x080055b4

08000560 <LCD_DisplayLevel>:
void LCD_DisplayLevel(uint8_t level){
 8000560:	b580      	push	{r7, lr}
 8000562:	b086      	sub	sp, #24
 8000564:	af02      	add	r7, sp, #8
 8000566:	4603      	mov	r3, r0
 8000568:	71fb      	strb	r3, [r7, #7]
	//copy str to global source
	sprintf(s_levelSrc, "Curtain Level: %d%%    ", level);
 800056a:	79fb      	ldrb	r3, [r7, #7]
 800056c:	461a      	mov	r2, r3
 800056e:	4964      	ldr	r1, [pc, #400]	; (8000700 <LCD_DisplayLevel+0x1a0>)
 8000570:	4864      	ldr	r0, [pc, #400]	; (8000704 <LCD_DisplayLevel+0x1a4>)
 8000572:	f004 fbf3 	bl	8004d5c <siprintf>
	ucg_DrawString(&s_ucg, 5, 24, 0, s_levelSrc);
 8000576:	4b63      	ldr	r3, [pc, #396]	; (8000704 <LCD_DisplayLevel+0x1a4>)
 8000578:	9300      	str	r3, [sp, #0]
 800057a:	2300      	movs	r3, #0
 800057c:	2218      	movs	r2, #24
 800057e:	2105      	movs	r1, #5
 8000580:	4861      	ldr	r0, [pc, #388]	; (8000708 <LCD_DisplayLevel+0x1a8>)
 8000582:	f003 fa77 	bl	8003a74 <ucg_DrawString>
	//draw the curtain
	uint8_t levelCount = 8;
 8000586:	2308      	movs	r3, #8
 8000588:	73bb      	strb	r3, [r7, #14]
	//draw the top liner
	ucg_DrawString(&s_ucg, 5, 36, 0, s_drawString);
 800058a:	4b60      	ldr	r3, [pc, #384]	; (800070c <LCD_DisplayLevel+0x1ac>)
 800058c:	9300      	str	r3, [sp, #0]
 800058e:	2300      	movs	r3, #0
 8000590:	2224      	movs	r2, #36	; 0x24
 8000592:	2105      	movs	r1, #5
 8000594:	485c      	ldr	r0, [pc, #368]	; (8000708 <LCD_DisplayLevel+0x1a8>)
 8000596:	f003 fa6d 	bl	8003a74 <ucg_DrawString>
	for(uint8_t i = 0; i < level / 25; i++){
 800059a:	2300      	movs	r3, #0
 800059c:	73fb      	strb	r3, [r7, #15]
 800059e:	e0a0      	b.n	80006e2 <LCD_DisplayLevel+0x182>
		uint8_t leftX = 16 * i + 5;
 80005a0:	7bfb      	ldrb	r3, [r7, #15]
 80005a2:	011b      	lsls	r3, r3, #4
 80005a4:	b2db      	uxtb	r3, r3
 80005a6:	3305      	adds	r3, #5
 80005a8:	737b      	strb	r3, [r7, #13]
		uint8_t rightX = 16 * (levelCount - i - 1) + 5;
 80005aa:	7bba      	ldrb	r2, [r7, #14]
 80005ac:	7bfb      	ldrb	r3, [r7, #15]
 80005ae:	1ad3      	subs	r3, r2, r3
 80005b0:	3b01      	subs	r3, #1
 80005b2:	b2db      	uxtb	r3, r3
 80005b4:	011b      	lsls	r3, r3, #4
 80005b6:	b2db      	uxtb	r3, r3
 80005b8:	3305      	adds	r3, #5
 80005ba:	733b      	strb	r3, [r7, #12]
		//draw left
		ucg_DrawString(&s_ucg, leftX, 46, 0, s_curtainString);
 80005bc:	7b7b      	ldrb	r3, [r7, #13]
 80005be:	b219      	sxth	r1, r3
 80005c0:	4b53      	ldr	r3, [pc, #332]	; (8000710 <LCD_DisplayLevel+0x1b0>)
 80005c2:	9300      	str	r3, [sp, #0]
 80005c4:	2300      	movs	r3, #0
 80005c6:	222e      	movs	r2, #46	; 0x2e
 80005c8:	484f      	ldr	r0, [pc, #316]	; (8000708 <LCD_DisplayLevel+0x1a8>)
 80005ca:	f003 fa53 	bl	8003a74 <ucg_DrawString>
		ucg_DrawString(&s_ucg, leftX, 54, 0, s_curtainString);
 80005ce:	7b7b      	ldrb	r3, [r7, #13]
 80005d0:	b219      	sxth	r1, r3
 80005d2:	4b4f      	ldr	r3, [pc, #316]	; (8000710 <LCD_DisplayLevel+0x1b0>)
 80005d4:	9300      	str	r3, [sp, #0]
 80005d6:	2300      	movs	r3, #0
 80005d8:	2236      	movs	r2, #54	; 0x36
 80005da:	484b      	ldr	r0, [pc, #300]	; (8000708 <LCD_DisplayLevel+0x1a8>)
 80005dc:	f003 fa4a 	bl	8003a74 <ucg_DrawString>
		ucg_DrawString(&s_ucg, leftX, 62, 0, s_curtainString);
 80005e0:	7b7b      	ldrb	r3, [r7, #13]
 80005e2:	b219      	sxth	r1, r3
 80005e4:	4b4a      	ldr	r3, [pc, #296]	; (8000710 <LCD_DisplayLevel+0x1b0>)
 80005e6:	9300      	str	r3, [sp, #0]
 80005e8:	2300      	movs	r3, #0
 80005ea:	223e      	movs	r2, #62	; 0x3e
 80005ec:	4846      	ldr	r0, [pc, #280]	; (8000708 <LCD_DisplayLevel+0x1a8>)
 80005ee:	f003 fa41 	bl	8003a74 <ucg_DrawString>
		ucg_DrawString(&s_ucg, leftX, 70, 0, s_curtainString);
 80005f2:	7b7b      	ldrb	r3, [r7, #13]
 80005f4:	b219      	sxth	r1, r3
 80005f6:	4b46      	ldr	r3, [pc, #280]	; (8000710 <LCD_DisplayLevel+0x1b0>)
 80005f8:	9300      	str	r3, [sp, #0]
 80005fa:	2300      	movs	r3, #0
 80005fc:	2246      	movs	r2, #70	; 0x46
 80005fe:	4842      	ldr	r0, [pc, #264]	; (8000708 <LCD_DisplayLevel+0x1a8>)
 8000600:	f003 fa38 	bl	8003a74 <ucg_DrawString>
		ucg_DrawString(&s_ucg, leftX, 78, 0, s_curtainString);
 8000604:	7b7b      	ldrb	r3, [r7, #13]
 8000606:	b219      	sxth	r1, r3
 8000608:	4b41      	ldr	r3, [pc, #260]	; (8000710 <LCD_DisplayLevel+0x1b0>)
 800060a:	9300      	str	r3, [sp, #0]
 800060c:	2300      	movs	r3, #0
 800060e:	224e      	movs	r2, #78	; 0x4e
 8000610:	483d      	ldr	r0, [pc, #244]	; (8000708 <LCD_DisplayLevel+0x1a8>)
 8000612:	f003 fa2f 	bl	8003a74 <ucg_DrawString>
		ucg_DrawString(&s_ucg, leftX, 86, 0, s_curtainString);
 8000616:	7b7b      	ldrb	r3, [r7, #13]
 8000618:	b219      	sxth	r1, r3
 800061a:	4b3d      	ldr	r3, [pc, #244]	; (8000710 <LCD_DisplayLevel+0x1b0>)
 800061c:	9300      	str	r3, [sp, #0]
 800061e:	2300      	movs	r3, #0
 8000620:	2256      	movs	r2, #86	; 0x56
 8000622:	4839      	ldr	r0, [pc, #228]	; (8000708 <LCD_DisplayLevel+0x1a8>)
 8000624:	f003 fa26 	bl	8003a74 <ucg_DrawString>
		ucg_DrawString(&s_ucg, leftX, 94, 0, s_curtainString);
 8000628:	7b7b      	ldrb	r3, [r7, #13]
 800062a:	b219      	sxth	r1, r3
 800062c:	4b38      	ldr	r3, [pc, #224]	; (8000710 <LCD_DisplayLevel+0x1b0>)
 800062e:	9300      	str	r3, [sp, #0]
 8000630:	2300      	movs	r3, #0
 8000632:	225e      	movs	r2, #94	; 0x5e
 8000634:	4834      	ldr	r0, [pc, #208]	; (8000708 <LCD_DisplayLevel+0x1a8>)
 8000636:	f003 fa1d 	bl	8003a74 <ucg_DrawString>
		ucg_DrawString(&s_ucg, leftX, 102, 0, s_curtainString);
 800063a:	7b7b      	ldrb	r3, [r7, #13]
 800063c:	b219      	sxth	r1, r3
 800063e:	4b34      	ldr	r3, [pc, #208]	; (8000710 <LCD_DisplayLevel+0x1b0>)
 8000640:	9300      	str	r3, [sp, #0]
 8000642:	2300      	movs	r3, #0
 8000644:	2266      	movs	r2, #102	; 0x66
 8000646:	4830      	ldr	r0, [pc, #192]	; (8000708 <LCD_DisplayLevel+0x1a8>)
 8000648:	f003 fa14 	bl	8003a74 <ucg_DrawString>

		//draw right
		ucg_DrawString(&s_ucg, rightX, 46, 0, s_curtainString);
 800064c:	7b3b      	ldrb	r3, [r7, #12]
 800064e:	b219      	sxth	r1, r3
 8000650:	4b2f      	ldr	r3, [pc, #188]	; (8000710 <LCD_DisplayLevel+0x1b0>)
 8000652:	9300      	str	r3, [sp, #0]
 8000654:	2300      	movs	r3, #0
 8000656:	222e      	movs	r2, #46	; 0x2e
 8000658:	482b      	ldr	r0, [pc, #172]	; (8000708 <LCD_DisplayLevel+0x1a8>)
 800065a:	f003 fa0b 	bl	8003a74 <ucg_DrawString>
		ucg_DrawString(&s_ucg, rightX, 54, 0, s_curtainString);
 800065e:	7b3b      	ldrb	r3, [r7, #12]
 8000660:	b219      	sxth	r1, r3
 8000662:	4b2b      	ldr	r3, [pc, #172]	; (8000710 <LCD_DisplayLevel+0x1b0>)
 8000664:	9300      	str	r3, [sp, #0]
 8000666:	2300      	movs	r3, #0
 8000668:	2236      	movs	r2, #54	; 0x36
 800066a:	4827      	ldr	r0, [pc, #156]	; (8000708 <LCD_DisplayLevel+0x1a8>)
 800066c:	f003 fa02 	bl	8003a74 <ucg_DrawString>
		ucg_DrawString(&s_ucg, rightX, 62, 0, s_curtainString);
 8000670:	7b3b      	ldrb	r3, [r7, #12]
 8000672:	b219      	sxth	r1, r3
 8000674:	4b26      	ldr	r3, [pc, #152]	; (8000710 <LCD_DisplayLevel+0x1b0>)
 8000676:	9300      	str	r3, [sp, #0]
 8000678:	2300      	movs	r3, #0
 800067a:	223e      	movs	r2, #62	; 0x3e
 800067c:	4822      	ldr	r0, [pc, #136]	; (8000708 <LCD_DisplayLevel+0x1a8>)
 800067e:	f003 f9f9 	bl	8003a74 <ucg_DrawString>
		ucg_DrawString(&s_ucg, rightX, 70, 0, s_curtainString);
 8000682:	7b3b      	ldrb	r3, [r7, #12]
 8000684:	b219      	sxth	r1, r3
 8000686:	4b22      	ldr	r3, [pc, #136]	; (8000710 <LCD_DisplayLevel+0x1b0>)
 8000688:	9300      	str	r3, [sp, #0]
 800068a:	2300      	movs	r3, #0
 800068c:	2246      	movs	r2, #70	; 0x46
 800068e:	481e      	ldr	r0, [pc, #120]	; (8000708 <LCD_DisplayLevel+0x1a8>)
 8000690:	f003 f9f0 	bl	8003a74 <ucg_DrawString>
		ucg_DrawString(&s_ucg, rightX, 78, 0, s_curtainString);
 8000694:	7b3b      	ldrb	r3, [r7, #12]
 8000696:	b219      	sxth	r1, r3
 8000698:	4b1d      	ldr	r3, [pc, #116]	; (8000710 <LCD_DisplayLevel+0x1b0>)
 800069a:	9300      	str	r3, [sp, #0]
 800069c:	2300      	movs	r3, #0
 800069e:	224e      	movs	r2, #78	; 0x4e
 80006a0:	4819      	ldr	r0, [pc, #100]	; (8000708 <LCD_DisplayLevel+0x1a8>)
 80006a2:	f003 f9e7 	bl	8003a74 <ucg_DrawString>
		ucg_DrawString(&s_ucg, rightX, 86, 0, s_curtainString);
 80006a6:	7b3b      	ldrb	r3, [r7, #12]
 80006a8:	b219      	sxth	r1, r3
 80006aa:	4b19      	ldr	r3, [pc, #100]	; (8000710 <LCD_DisplayLevel+0x1b0>)
 80006ac:	9300      	str	r3, [sp, #0]
 80006ae:	2300      	movs	r3, #0
 80006b0:	2256      	movs	r2, #86	; 0x56
 80006b2:	4815      	ldr	r0, [pc, #84]	; (8000708 <LCD_DisplayLevel+0x1a8>)
 80006b4:	f003 f9de 	bl	8003a74 <ucg_DrawString>
		ucg_DrawString(&s_ucg, rightX, 94, 0, s_curtainString);
 80006b8:	7b3b      	ldrb	r3, [r7, #12]
 80006ba:	b219      	sxth	r1, r3
 80006bc:	4b14      	ldr	r3, [pc, #80]	; (8000710 <LCD_DisplayLevel+0x1b0>)
 80006be:	9300      	str	r3, [sp, #0]
 80006c0:	2300      	movs	r3, #0
 80006c2:	225e      	movs	r2, #94	; 0x5e
 80006c4:	4810      	ldr	r0, [pc, #64]	; (8000708 <LCD_DisplayLevel+0x1a8>)
 80006c6:	f003 f9d5 	bl	8003a74 <ucg_DrawString>
		ucg_DrawString(&s_ucg, rightX, 102, 0, s_curtainString);
 80006ca:	7b3b      	ldrb	r3, [r7, #12]
 80006cc:	b219      	sxth	r1, r3
 80006ce:	4b10      	ldr	r3, [pc, #64]	; (8000710 <LCD_DisplayLevel+0x1b0>)
 80006d0:	9300      	str	r3, [sp, #0]
 80006d2:	2300      	movs	r3, #0
 80006d4:	2266      	movs	r2, #102	; 0x66
 80006d6:	480c      	ldr	r0, [pc, #48]	; (8000708 <LCD_DisplayLevel+0x1a8>)
 80006d8:	f003 f9cc 	bl	8003a74 <ucg_DrawString>
	for(uint8_t i = 0; i < level / 25; i++){
 80006dc:	7bfb      	ldrb	r3, [r7, #15]
 80006de:	3301      	adds	r3, #1
 80006e0:	73fb      	strb	r3, [r7, #15]
 80006e2:	79fb      	ldrb	r3, [r7, #7]
 80006e4:	4a0b      	ldr	r2, [pc, #44]	; (8000714 <LCD_DisplayLevel+0x1b4>)
 80006e6:	fba2 2303 	umull	r2, r3, r2, r3
 80006ea:	08db      	lsrs	r3, r3, #3
 80006ec:	b2db      	uxtb	r3, r3
 80006ee:	7bfa      	ldrb	r2, [r7, #15]
 80006f0:	429a      	cmp	r2, r3
 80006f2:	f4ff af55 	bcc.w	80005a0 <LCD_DisplayLevel+0x40>
	}
}
 80006f6:	bf00      	nop
 80006f8:	bf00      	nop
 80006fa:	3710      	adds	r7, #16
 80006fc:	46bd      	mov	sp, r7
 80006fe:	bd80      	pop	{r7, pc}
 8000700:	080055d4 	.word	0x080055d4
 8000704:	2000018c 	.word	0x2000018c
 8000708:	200000d8 	.word	0x200000d8
 800070c:	200001dc 	.word	0x200001dc
 8000710:	20000204 	.word	0x20000204
 8000714:	51eb851f 	.word	0x51eb851f

08000718 <LCD_ClearScreen>:
void LCD_ClearScreen(void){
 8000718:	b580      	push	{r7, lr}
 800071a:	af00      	add	r7, sp, #0
	ucg_ClearScreen(&s_ucg);
 800071c:	4802      	ldr	r0, [pc, #8]	; (8000728 <LCD_ClearScreen+0x10>)
 800071e:	f002 f954 	bl	80029ca <ucg_ClearScreen>
}
 8000722:	bf00      	nop
 8000724:	bd80      	pop	{r7, pc}
 8000726:	bf00      	nop
 8000728:	200000d8 	.word	0x200000d8

0800072c <Queue_Init>:
 *      Author: Administrator
 */
#include "Queue.h"
#include <stdlib.h>

queue_p Queue_Init(uint8_t bufferSize){
 800072c:	b580      	push	{r7, lr}
 800072e:	b084      	sub	sp, #16
 8000730:	af00      	add	r7, sp, #0
 8000732:	4603      	mov	r3, r0
 8000734:	71fb      	strb	r3, [r7, #7]
	queue_p queue = (queue_p)malloc(1 * sizeof(queue_t));
 8000736:	2008      	movs	r0, #8
 8000738:	f004 fa5c 	bl	8004bf4 <malloc>
 800073c:	4603      	mov	r3, r0
 800073e:	60fb      	str	r3, [r7, #12]
	queue->buffer = (uint8_t*)malloc(bufferSize * sizeof(uint8_t));
 8000740:	79fb      	ldrb	r3, [r7, #7]
 8000742:	4618      	mov	r0, r3
 8000744:	f004 fa56 	bl	8004bf4 <malloc>
 8000748:	4603      	mov	r3, r0
 800074a:	461a      	mov	r2, r3
 800074c:	68fb      	ldr	r3, [r7, #12]
 800074e:	601a      	str	r2, [r3, #0]
	queue->bufferSize = bufferSize;
 8000750:	68fb      	ldr	r3, [r7, #12]
 8000752:	79fa      	ldrb	r2, [r7, #7]
 8000754:	711a      	strb	r2, [r3, #4]
	queue->frontPos = 0;
 8000756:	68fb      	ldr	r3, [r7, #12]
 8000758:	2200      	movs	r2, #0
 800075a:	715a      	strb	r2, [r3, #5]
	queue->backPos = 0;
 800075c:	68fb      	ldr	r3, [r7, #12]
 800075e:	2200      	movs	r2, #0
 8000760:	719a      	strb	r2, [r3, #6]
	return queue;
 8000762:	68fb      	ldr	r3, [r7, #12]
}
 8000764:	4618      	mov	r0, r3
 8000766:	3710      	adds	r7, #16
 8000768:	46bd      	mov	sp, r7
 800076a:	bd80      	pop	{r7, pc}

0800076c <Queue_IsEmpty>:
bool Queue_IsEmpty(queue_p queue){
 800076c:	b480      	push	{r7}
 800076e:	b083      	sub	sp, #12
 8000770:	af00      	add	r7, sp, #0
 8000772:	6078      	str	r0, [r7, #4]
	return queue->frontPos == queue->backPos;
 8000774:	687b      	ldr	r3, [r7, #4]
 8000776:	795a      	ldrb	r2, [r3, #5]
 8000778:	687b      	ldr	r3, [r7, #4]
 800077a:	799b      	ldrb	r3, [r3, #6]
 800077c:	429a      	cmp	r2, r3
 800077e:	bf0c      	ite	eq
 8000780:	2301      	moveq	r3, #1
 8000782:	2300      	movne	r3, #0
 8000784:	b2db      	uxtb	r3, r3
}
 8000786:	4618      	mov	r0, r3
 8000788:	370c      	adds	r7, #12
 800078a:	46bd      	mov	sp, r7
 800078c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000790:	4770      	bx	lr

08000792 <Queue_EnQueue>:
	else{
		return queue->frontPos - queue->backPos == queue->bufferSize;
	}
	return false;
}
void Queue_EnQueue(queue_p queue, uint8_t data){
 8000792:	b480      	push	{r7}
 8000794:	b083      	sub	sp, #12
 8000796:	af00      	add	r7, sp, #0
 8000798:	6078      	str	r0, [r7, #4]
 800079a:	460b      	mov	r3, r1
 800079c:	70fb      	strb	r3, [r7, #3]
	queue->buffer[queue->backPos++] = data;
 800079e:	687b      	ldr	r3, [r7, #4]
 80007a0:	681a      	ldr	r2, [r3, #0]
 80007a2:	687b      	ldr	r3, [r7, #4]
 80007a4:	799b      	ldrb	r3, [r3, #6]
 80007a6:	1c59      	adds	r1, r3, #1
 80007a8:	b2c8      	uxtb	r0, r1
 80007aa:	6879      	ldr	r1, [r7, #4]
 80007ac:	7188      	strb	r0, [r1, #6]
 80007ae:	4413      	add	r3, r2
 80007b0:	78fa      	ldrb	r2, [r7, #3]
 80007b2:	701a      	strb	r2, [r3, #0]
	if(queue->backPos >= queue->bufferSize){
 80007b4:	687b      	ldr	r3, [r7, #4]
 80007b6:	799a      	ldrb	r2, [r3, #6]
 80007b8:	687b      	ldr	r3, [r7, #4]
 80007ba:	791b      	ldrb	r3, [r3, #4]
 80007bc:	429a      	cmp	r2, r3
 80007be:	d302      	bcc.n	80007c6 <Queue_EnQueue+0x34>
		queue->backPos = 0;
 80007c0:	687b      	ldr	r3, [r7, #4]
 80007c2:	2200      	movs	r2, #0
 80007c4:	719a      	strb	r2, [r3, #6]
	}
}
 80007c6:	bf00      	nop
 80007c8:	370c      	adds	r7, #12
 80007ca:	46bd      	mov	sp, r7
 80007cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007d0:	4770      	bx	lr

080007d2 <Queue_DeQueue>:
bool Queue_DeQueue(queue_p queue, uint8_t *data){
 80007d2:	b580      	push	{r7, lr}
 80007d4:	b082      	sub	sp, #8
 80007d6:	af00      	add	r7, sp, #0
 80007d8:	6078      	str	r0, [r7, #4]
 80007da:	6039      	str	r1, [r7, #0]
	if(Queue_IsEmpty(queue)){
 80007dc:	6878      	ldr	r0, [r7, #4]
 80007de:	f7ff ffc5 	bl	800076c <Queue_IsEmpty>
 80007e2:	4603      	mov	r3, r0
 80007e4:	2b00      	cmp	r3, #0
 80007e6:	d001      	beq.n	80007ec <Queue_DeQueue+0x1a>
		return false;
 80007e8:	2300      	movs	r3, #0
 80007ea:	e01a      	b.n	8000822 <Queue_DeQueue+0x50>
	}

	if(data != NULL){
 80007ec:	683b      	ldr	r3, [r7, #0]
 80007ee:	2b00      	cmp	r3, #0
 80007f0:	d007      	beq.n	8000802 <Queue_DeQueue+0x30>
		*data = queue->buffer[queue->frontPos];
 80007f2:	687b      	ldr	r3, [r7, #4]
 80007f4:	681b      	ldr	r3, [r3, #0]
 80007f6:	687a      	ldr	r2, [r7, #4]
 80007f8:	7952      	ldrb	r2, [r2, #5]
 80007fa:	4413      	add	r3, r2
 80007fc:	781a      	ldrb	r2, [r3, #0]
 80007fe:	683b      	ldr	r3, [r7, #0]
 8000800:	701a      	strb	r2, [r3, #0]
	}
	queue->frontPos++;
 8000802:	687b      	ldr	r3, [r7, #4]
 8000804:	795b      	ldrb	r3, [r3, #5]
 8000806:	3301      	adds	r3, #1
 8000808:	b2da      	uxtb	r2, r3
 800080a:	687b      	ldr	r3, [r7, #4]
 800080c:	715a      	strb	r2, [r3, #5]

	if(queue->frontPos >= queue->bufferSize){
 800080e:	687b      	ldr	r3, [r7, #4]
 8000810:	795a      	ldrb	r2, [r3, #5]
 8000812:	687b      	ldr	r3, [r7, #4]
 8000814:	791b      	ldrb	r3, [r3, #4]
 8000816:	429a      	cmp	r2, r3
 8000818:	d302      	bcc.n	8000820 <Queue_DeQueue+0x4e>
		queue->frontPos = 0;
 800081a:	687b      	ldr	r3, [r7, #4]
 800081c:	2200      	movs	r2, #0
 800081e:	715a      	strb	r2, [r3, #5]
	}
	return true;
 8000820:	2301      	movs	r3, #1
}
 8000822:	4618      	mov	r0, r3
 8000824:	3708      	adds	r7, #8
 8000826:	46bd      	mov	sp, r7
 8000828:	bd80      	pop	{r7, pc}

0800082a <Queue_GetFront>:
bool Queue_GetFront(queue_p queue, uint8_t *data){
 800082a:	b580      	push	{r7, lr}
 800082c:	b082      	sub	sp, #8
 800082e:	af00      	add	r7, sp, #0
 8000830:	6078      	str	r0, [r7, #4]
 8000832:	6039      	str	r1, [r7, #0]
	if(Queue_IsEmpty(queue)){
 8000834:	6878      	ldr	r0, [r7, #4]
 8000836:	f7ff ff99 	bl	800076c <Queue_IsEmpty>
 800083a:	4603      	mov	r3, r0
 800083c:	2b00      	cmp	r3, #0
 800083e:	d001      	beq.n	8000844 <Queue_GetFront+0x1a>
		return false;
 8000840:	2300      	movs	r3, #0
 8000842:	e008      	b.n	8000856 <Queue_GetFront+0x2c>
	}
	*data = queue->buffer[queue->frontPos];
 8000844:	687b      	ldr	r3, [r7, #4]
 8000846:	681b      	ldr	r3, [r3, #0]
 8000848:	687a      	ldr	r2, [r7, #4]
 800084a:	7952      	ldrb	r2, [r2, #5]
 800084c:	4413      	add	r3, r2
 800084e:	781a      	ldrb	r2, [r3, #0]
 8000850:	683b      	ldr	r3, [r7, #0]
 8000852:	701a      	strb	r2, [r3, #0]
	return true;
 8000854:	2301      	movs	r3, #1
}
 8000856:	4618      	mov	r0, r3
 8000858:	3708      	adds	r7, #8
 800085a:	46bd      	mov	sp, r7
 800085c:	bd80      	pop	{r7, pc}
	...

08000860 <USART1_IRQHandler>:
static void USART1_Init(usartFrameCallback handler);
static void ProcessSerialReceiver(void);


void USART1_IRQHandler(void)
{
 8000860:	b580      	push	{r7, lr}
 8000862:	b082      	sub	sp, #8
 8000864:	af00      	add	r7, sp, #0
	if(USART_GetITStatus(USART1, USART_IT_RXNE)==SET){
 8000866:	f240 5125 	movw	r1, #1317	; 0x525
 800086a:	480d      	ldr	r0, [pc, #52]	; (80008a0 <USART1_IRQHandler+0x40>)
 800086c:	f001 f962 	bl	8001b34 <USART_GetITStatus>
 8000870:	4603      	mov	r3, r0
 8000872:	2b01      	cmp	r3, #1
 8000874:	d10b      	bne.n	800088e <USART1_IRQHandler+0x2e>
		uint8_t data = (uint8_t)(USART_ReceiveData(USART1) & 0xFF);
 8000876:	480a      	ldr	r0, [pc, #40]	; (80008a0 <USART1_IRQHandler+0x40>)
 8000878:	f001 f8e8 	bl	8001a4c <USART_ReceiveData>
 800087c:	4603      	mov	r3, r0
 800087e:	71fb      	strb	r3, [r7, #7]
		Queue_EnQueue(usartRxQueue, data);
 8000880:	4b08      	ldr	r3, [pc, #32]	; (80008a4 <USART1_IRQHandler+0x44>)
 8000882:	681b      	ldr	r3, [r3, #0]
 8000884:	79fa      	ldrb	r2, [r7, #7]
 8000886:	4611      	mov	r1, r2
 8000888:	4618      	mov	r0, r3
 800088a:	f7ff ff82 	bl	8000792 <Queue_EnQueue>
	}
	USART_ClearITPendingBit(USART1, USART_IT_RXNE);
 800088e:	f240 5125 	movw	r1, #1317	; 0x525
 8000892:	4803      	ldr	r0, [pc, #12]	; (80008a0 <USART1_IRQHandler+0x40>)
 8000894:	f001 f9a9 	bl	8001bea <USART_ClearITPendingBit>
}
 8000898:	bf00      	nop
 800089a:	3708      	adds	r7, #8
 800089c:	46bd      	mov	sp, r7
 800089e:	bd80      	pop	{r7, pc}
 80008a0:	40011000 	.word	0x40011000
 80008a4:	20000258 	.word	0x20000258

080008a8 <MyUSART_Init>:

void MyUSART_Init(usartFrameCallback handler){
 80008a8:	b580      	push	{r7, lr}
 80008aa:	b082      	sub	sp, #8
 80008ac:	af00      	add	r7, sp, #0
 80008ae:	6078      	str	r0, [r7, #4]
	USART6_Init();//Tx init
 80008b0:	f000 fb1c 	bl	8000eec <USART6_Init>
	USART1_Init(handler); //Rx init
 80008b4:	6878      	ldr	r0, [r7, #4]
 80008b6:	f000 fa9f 	bl	8000df8 <USART1_Init>
}
 80008ba:	bf00      	nop
 80008bc:	3708      	adds	r7, #8
 80008be:	46bd      	mov	sp, r7
 80008c0:	bd80      	pop	{r7, pc}

080008c2 <USART_SendFrame>:

void USART_SendFrame(USART_FRAME frame){
 80008c2:	b590      	push	{r4, r7, lr}
 80008c4:	b087      	sub	sp, #28
 80008c6:	af00      	add	r7, sp, #0
 80008c8:	463c      	mov	r4, r7
 80008ca:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	uint8_t startOfFrame = USART_FRAME_START_OF_FRAME;
 80008ce:	23b1      	movs	r3, #177	; 0xb1
 80008d0:	75bb      	strb	r3, [r7, #22]
	USART_SendByte(startOfFrame);
 80008d2:	7dbb      	ldrb	r3, [r7, #22]
 80008d4:	4618      	mov	r0, r3
 80008d6:	f000 f913 	bl	8000b00 <USART_SendByte>
	USART_SendByte(frame.length);
 80008da:	783b      	ldrb	r3, [r7, #0]
 80008dc:	4618      	mov	r0, r3
 80008de:	f000 f90f 	bl	8000b00 <USART_SendByte>
	uint8_t byte1 = (frame.nodeId >> 8) & 0xFF, byte2 = (frame.nodeId & 0xFF);
 80008e2:	887b      	ldrh	r3, [r7, #2]
 80008e4:	0a1b      	lsrs	r3, r3, #8
 80008e6:	b29b      	uxth	r3, r3
 80008e8:	757b      	strb	r3, [r7, #21]
 80008ea:	887b      	ldrh	r3, [r7, #2]
 80008ec:	753b      	strb	r3, [r7, #20]
	USART_SendByte(byte1);
 80008ee:	7d7b      	ldrb	r3, [r7, #21]
 80008f0:	4618      	mov	r0, r3
 80008f2:	f000 f905 	bl	8000b00 <USART_SendByte>
	USART_SendByte(byte2);
 80008f6:	7d3b      	ldrb	r3, [r7, #20]
 80008f8:	4618      	mov	r0, r3
 80008fa:	f000 f901 	bl	8000b00 <USART_SendByte>
	USART_SendByte(frame.endpoint);
 80008fe:	793b      	ldrb	r3, [r7, #4]
 8000900:	4618      	mov	r0, r3
 8000902:	f000 f8fd 	bl	8000b00 <USART_SendByte>
	USART_SendByte(frame.id);
 8000906:	797b      	ldrb	r3, [r7, #5]
 8000908:	4618      	mov	r0, r3
 800090a:	f000 f8f9 	bl	8000b00 <USART_SendByte>
	USART_SendByte(frame.type);
 800090e:	79bb      	ldrb	r3, [r7, #6]
 8000910:	4618      	mov	r0, r3
 8000912:	f000 f8f5 	bl	8000b00 <USART_SendByte>
	USART_SendByte(frame.payloadLength);
 8000916:	79fb      	ldrb	r3, [r7, #7]
 8000918:	4618      	mov	r0, r3
 800091a:	f000 f8f1 	bl	8000b00 <USART_SendByte>
	for(uint8_t i = 0; i < frame.payloadLength; i++){
 800091e:	2300      	movs	r3, #0
 8000920:	75fb      	strb	r3, [r7, #23]
 8000922:	e00a      	b.n	800093a <USART_SendFrame+0x78>
		USART_SendByte(frame.payload[i]);
 8000924:	7dfb      	ldrb	r3, [r7, #23]
 8000926:	3318      	adds	r3, #24
 8000928:	443b      	add	r3, r7
 800092a:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 800092e:	4618      	mov	r0, r3
 8000930:	f000 f8e6 	bl	8000b00 <USART_SendByte>
	for(uint8_t i = 0; i < frame.payloadLength; i++){
 8000934:	7dfb      	ldrb	r3, [r7, #23]
 8000936:	3301      	adds	r3, #1
 8000938:	75fb      	strb	r3, [r7, #23]
 800093a:	79fb      	ldrb	r3, [r7, #7]
 800093c:	7dfa      	ldrb	r2, [r7, #23]
 800093e:	429a      	cmp	r2, r3
 8000940:	d3f0      	bcc.n	8000924 <USART_SendFrame+0x62>
	}
	USART_SendByte(frame.sequence);
 8000942:	7b3b      	ldrb	r3, [r7, #12]
 8000944:	4618      	mov	r0, r3
 8000946:	f000 f8db 	bl	8000b00 <USART_SendByte>
	USART_SendByte(frame.cxor);
 800094a:	7b7b      	ldrb	r3, [r7, #13]
 800094c:	4618      	mov	r0, r3
 800094e:	f000 f8d7 	bl	8000b00 <USART_SendByte>
}
 8000952:	bf00      	nop
 8000954:	371c      	adds	r7, #28
 8000956:	46bd      	mov	sp, r7
 8000958:	bd90      	pop	{r4, r7, pc}
	...

0800095c <USART_GenerateFrame>:

USART_FRAME USART_GenerateFrame(uint16_t nodeId, uint8_t endpoint, uint8_t cmdId, uint8_t cmdType, uint8_t payloadLength, uint8_t *payload){
 800095c:	b590      	push	{r4, r7, lr}
 800095e:	b087      	sub	sp, #28
 8000960:	af00      	add	r7, sp, #0
 8000962:	6078      	str	r0, [r7, #4]
 8000964:	4608      	mov	r0, r1
 8000966:	4611      	mov	r1, r2
 8000968:	461a      	mov	r2, r3
 800096a:	4603      	mov	r3, r0
 800096c:	807b      	strh	r3, [r7, #2]
 800096e:	460b      	mov	r3, r1
 8000970:	707b      	strb	r3, [r7, #1]
 8000972:	4613      	mov	r3, r2
 8000974:	703b      	strb	r3, [r7, #0]
	static uint8_t sequence = 0;
	USART_FRAME retFrame = USART_FRAME_DEFAULT;
 8000976:	4b25      	ldr	r3, [pc, #148]	; (8000a0c <USART_GenerateFrame+0xb0>)
 8000978:	f107 0408 	add.w	r4, r7, #8
 800097c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800097e:	c407      	stmia	r4!, {r0, r1, r2}
 8000980:	8023      	strh	r3, [r4, #0]
	retFrame.length = payloadLength + 7;
 8000982:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8000986:	3307      	adds	r3, #7
 8000988:	b2db      	uxtb	r3, r3
 800098a:	723b      	strb	r3, [r7, #8]
	retFrame.nodeId = nodeId;
 800098c:	887b      	ldrh	r3, [r7, #2]
 800098e:	817b      	strh	r3, [r7, #10]
	retFrame.endpoint = endpoint;
 8000990:	787b      	ldrb	r3, [r7, #1]
 8000992:	733b      	strb	r3, [r7, #12]
	retFrame.id = cmdId;
 8000994:	783b      	ldrb	r3, [r7, #0]
 8000996:	737b      	strb	r3, [r7, #13]
	retFrame.type= cmdType;
 8000998:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800099c:	73bb      	strb	r3, [r7, #14]
	retFrame.payloadLength = payloadLength;
 800099e:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 80009a2:	73fb      	strb	r3, [r7, #15]
	if(payload != NULL){
 80009a4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80009a6:	2b00      	cmp	r3, #0
 80009a8:	d013      	beq.n	80009d2 <USART_GenerateFrame+0x76>
		for(uint8_t i = 0; i < payloadLength; i++){
 80009aa:	2300      	movs	r3, #0
 80009ac:	75fb      	strb	r3, [r7, #23]
 80009ae:	e00b      	b.n	80009c8 <USART_GenerateFrame+0x6c>
		  retFrame.payload[i] = payload[i];
 80009b0:	7dfb      	ldrb	r3, [r7, #23]
 80009b2:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80009b4:	441a      	add	r2, r3
 80009b6:	7dfb      	ldrb	r3, [r7, #23]
 80009b8:	7812      	ldrb	r2, [r2, #0]
 80009ba:	3318      	adds	r3, #24
 80009bc:	443b      	add	r3, r7
 80009be:	f803 2c08 	strb.w	r2, [r3, #-8]
		for(uint8_t i = 0; i < payloadLength; i++){
 80009c2:	7dfb      	ldrb	r3, [r7, #23]
 80009c4:	3301      	adds	r3, #1
 80009c6:	75fb      	strb	r3, [r7, #23]
 80009c8:	7dfa      	ldrb	r2, [r7, #23]
 80009ca:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 80009ce:	429a      	cmp	r2, r3
 80009d0:	d3ee      	bcc.n	80009b0 <USART_GenerateFrame+0x54>
		}
	}
	retFrame.sequence = sequence++;
 80009d2:	4b0f      	ldr	r3, [pc, #60]	; (8000a10 <USART_GenerateFrame+0xb4>)
 80009d4:	781b      	ldrb	r3, [r3, #0]
 80009d6:	1c5a      	adds	r2, r3, #1
 80009d8:	b2d1      	uxtb	r1, r2
 80009da:	4a0d      	ldr	r2, [pc, #52]	; (8000a10 <USART_GenerateFrame+0xb4>)
 80009dc:	7011      	strb	r1, [r2, #0]
 80009de:	753b      	strb	r3, [r7, #20]
	retFrame.cxor = CalcXor(retFrame);
 80009e0:	f107 0308 	add.w	r3, r7, #8
 80009e4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80009e6:	f000 f8ad 	bl	8000b44 <CalcXor>
 80009ea:	4603      	mov	r3, r0
 80009ec:	757b      	strb	r3, [r7, #21]
	return retFrame;
 80009ee:	687b      	ldr	r3, [r7, #4]
 80009f0:	461c      	mov	r4, r3
 80009f2:	f107 0308 	add.w	r3, r7, #8
 80009f6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80009f8:	6020      	str	r0, [r4, #0]
 80009fa:	6061      	str	r1, [r4, #4]
 80009fc:	60a2      	str	r2, [r4, #8]
 80009fe:	881b      	ldrh	r3, [r3, #0]
 8000a00:	81a3      	strh	r3, [r4, #12]
}
 8000a02:	6878      	ldr	r0, [r7, #4]
 8000a04:	371c      	adds	r7, #28
 8000a06:	46bd      	mov	sp, r7
 8000a08:	bd90      	pop	{r4, r7, pc}
 8000a0a:	bf00      	nop
 8000a0c:	080055ec 	.word	0x080055ec
 8000a10:	2000025c 	.word	0x2000025c

08000a14 <USART_GenerateDeviceConnected>:

USART_FRAME USART_GenerateDeviceConnected(void){
 8000a14:	b580      	push	{r7, lr}
 8000a16:	b086      	sub	sp, #24
 8000a18:	af04      	add	r7, sp, #16
 8000a1a:	6078      	str	r0, [r7, #4]
	return USART_GenerateFrame(NODE_ID_NOT_CARE,
 8000a1c:	6878      	ldr	r0, [r7, #4]
 8000a1e:	2300      	movs	r3, #0
 8000a20:	9302      	str	r3, [sp, #8]
 8000a22:	2300      	movs	r3, #0
 8000a24:	9301      	str	r3, [sp, #4]
 8000a26:	2302      	movs	r3, #2
 8000a28:	9300      	str	r3, [sp, #0]
 8000a2a:	2307      	movs	r3, #7
 8000a2c:	22fe      	movs	r2, #254	; 0xfe
 8000a2e:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000a32:	f7ff ff93 	bl	800095c <USART_GenerateFrame>
							   ENDPOINT_NOT_CARE,
							   USART_FRAME_CMD_ID_DEVICE_CONNECTED,
							   USART_FRAME_CMD_TYPE_RESPONSE,
							   0,
							   NULL);
}
 8000a36:	6878      	ldr	r0, [r7, #4]
 8000a38:	3708      	adds	r7, #8
 8000a3a:	46bd      	mov	sp, r7
 8000a3c:	bd80      	pop	{r7, pc}

08000a3e <USART_GenerateLevelControl>:
							   USART_FRAME_CMD_ID_DEVICE_DISCONNECTED,
							   USART_FRAME_CMD_TYPE_RESPONSE,
							   0,
							   NULL);
}
USART_FRAME USART_GenerateLevelControl(LEVEL_CONTROL_CMD_e levelCmd, uint8_t level){
 8000a3e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000a42:	b08b      	sub	sp, #44	; 0x2c
 8000a44:	af04      	add	r7, sp, #16
 8000a46:	6078      	str	r0, [r7, #4]
 8000a48:	460b      	mov	r3, r1
 8000a4a:	70fb      	strb	r3, [r7, #3]
 8000a4c:	4613      	mov	r3, r2
 8000a4e:	70bb      	strb	r3, [r7, #2]
 8000a50:	466b      	mov	r3, sp
 8000a52:	461e      	mov	r6, r3
	const uint8_t payloadLength = 2;
 8000a54:	2302      	movs	r3, #2
 8000a56:	75fb      	strb	r3, [r7, #23]
	uint8_t payload[payloadLength];
 8000a58:	7dfb      	ldrb	r3, [r7, #23]
 8000a5a:	3b01      	subs	r3, #1
 8000a5c:	613b      	str	r3, [r7, #16]
 8000a5e:	7dfb      	ldrb	r3, [r7, #23]
 8000a60:	2200      	movs	r2, #0
 8000a62:	4698      	mov	r8, r3
 8000a64:	4691      	mov	r9, r2
 8000a66:	f04f 0200 	mov.w	r2, #0
 8000a6a:	f04f 0300 	mov.w	r3, #0
 8000a6e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8000a72:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8000a76:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8000a7a:	7dfb      	ldrb	r3, [r7, #23]
 8000a7c:	2200      	movs	r2, #0
 8000a7e:	461c      	mov	r4, r3
 8000a80:	4615      	mov	r5, r2
 8000a82:	f04f 0200 	mov.w	r2, #0
 8000a86:	f04f 0300 	mov.w	r3, #0
 8000a8a:	00eb      	lsls	r3, r5, #3
 8000a8c:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8000a90:	00e2      	lsls	r2, r4, #3
 8000a92:	7dfb      	ldrb	r3, [r7, #23]
 8000a94:	3307      	adds	r3, #7
 8000a96:	08db      	lsrs	r3, r3, #3
 8000a98:	00db      	lsls	r3, r3, #3
 8000a9a:	ebad 0d03 	sub.w	sp, sp, r3
 8000a9e:	ab04      	add	r3, sp, #16
 8000aa0:	3300      	adds	r3, #0
 8000aa2:	60fb      	str	r3, [r7, #12]
	payload[0] = (uint8_t)levelCmd;
 8000aa4:	68fb      	ldr	r3, [r7, #12]
 8000aa6:	78fa      	ldrb	r2, [r7, #3]
 8000aa8:	701a      	strb	r2, [r3, #0]
	payload[1] = level;
 8000aaa:	68fb      	ldr	r3, [r7, #12]
 8000aac:	78ba      	ldrb	r2, [r7, #2]
 8000aae:	705a      	strb	r2, [r3, #1]
	return USART_GenerateFrame(NODE_ID_NOT_CARE,
 8000ab0:	6878      	ldr	r0, [r7, #4]
 8000ab2:	68fb      	ldr	r3, [r7, #12]
 8000ab4:	9302      	str	r3, [sp, #8]
 8000ab6:	7dfb      	ldrb	r3, [r7, #23]
 8000ab8:	9301      	str	r3, [sp, #4]
 8000aba:	2300      	movs	r3, #0
 8000abc:	9300      	str	r3, [sp, #0]
 8000abe:	2309      	movs	r3, #9
 8000ac0:	22fe      	movs	r2, #254	; 0xfe
 8000ac2:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000ac6:	f7ff ff49 	bl	800095c <USART_GenerateFrame>
 8000aca:	46b5      	mov	sp, r6
							   ENDPOINT_NOT_CARE,
							   USART_FRAME_CMD_ID_LEVEL_CONTROL,
							   USART_FRAME_CMD_TYPE_SET,
							   payloadLength,
							   payload);
}
 8000acc:	6878      	ldr	r0, [r7, #4]
 8000ace:	371c      	adds	r7, #28
 8000ad0:	46bd      	mov	sp, r7
 8000ad2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08000ad6 <USART_GenerateDeviceReport>:
USART_FRAME USART_GenerateDeviceReport(void){
 8000ad6:	b580      	push	{r7, lr}
 8000ad8:	b086      	sub	sp, #24
 8000ada:	af04      	add	r7, sp, #16
 8000adc:	6078      	str	r0, [r7, #4]
	return USART_GenerateFrame(NODE_ID_NOT_CARE,
 8000ade:	6878      	ldr	r0, [r7, #4]
 8000ae0:	2300      	movs	r3, #0
 8000ae2:	9302      	str	r3, [sp, #8]
 8000ae4:	2300      	movs	r3, #0
 8000ae6:	9301      	str	r3, [sp, #4]
 8000ae8:	2301      	movs	r3, #1
 8000aea:	9300      	str	r3, [sp, #0]
 8000aec:	2304      	movs	r3, #4
 8000aee:	22fe      	movs	r2, #254	; 0xfe
 8000af0:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000af4:	f7ff ff32 	bl	800095c <USART_GenerateFrame>
							   ENDPOINT_NOT_CARE,
							   USART_FRAME_CMD_ID_DEVICE_REPORT,
							   USART_FRAME_CMD_TYPE_GET,
							   0,
							   NULL);
}
 8000af8:	6878      	ldr	r0, [r7, #4]
 8000afa:	3708      	adds	r7, #8
 8000afc:	46bd      	mov	sp, r7
 8000afe:	bd80      	pop	{r7, pc}

08000b00 <USART_SendByte>:



static void USART_SendByte(uint8_t byte){
 8000b00:	b580      	push	{r7, lr}
 8000b02:	b082      	sub	sp, #8
 8000b04:	af00      	add	r7, sp, #0
 8000b06:	4603      	mov	r3, r0
 8000b08:	71fb      	strb	r3, [r7, #7]
	while(USART_GetFlagStatus(USART6, USART_FLAG_TXE) == RESET);
 8000b0a:	bf00      	nop
 8000b0c:	2180      	movs	r1, #128	; 0x80
 8000b0e:	480c      	ldr	r0, [pc, #48]	; (8000b40 <USART_SendByte+0x40>)
 8000b10:	f000 fff4 	bl	8001afc <USART_GetFlagStatus>
 8000b14:	4603      	mov	r3, r0
 8000b16:	2b00      	cmp	r3, #0
 8000b18:	d0f8      	beq.n	8000b0c <USART_SendByte+0xc>
	USART_SendData(USART6, byte);
 8000b1a:	79fb      	ldrb	r3, [r7, #7]
 8000b1c:	b29b      	uxth	r3, r3
 8000b1e:	4619      	mov	r1, r3
 8000b20:	4807      	ldr	r0, [pc, #28]	; (8000b40 <USART_SendByte+0x40>)
 8000b22:	f000 ff81 	bl	8001a28 <USART_SendData>
	while(USART_GetFlagStatus(USART6, USART_FLAG_TC) == RESET);
 8000b26:	bf00      	nop
 8000b28:	2140      	movs	r1, #64	; 0x40
 8000b2a:	4805      	ldr	r0, [pc, #20]	; (8000b40 <USART_SendByte+0x40>)
 8000b2c:	f000 ffe6 	bl	8001afc <USART_GetFlagStatus>
 8000b30:	4603      	mov	r3, r0
 8000b32:	2b00      	cmp	r3, #0
 8000b34:	d0f8      	beq.n	8000b28 <USART_SendByte+0x28>
}
 8000b36:	bf00      	nop
 8000b38:	bf00      	nop
 8000b3a:	3708      	adds	r7, #8
 8000b3c:	46bd      	mov	sp, r7
 8000b3e:	bd80      	pop	{r7, pc}
 8000b40:	40011400 	.word	0x40011400

08000b44 <CalcXor>:
static uint8_t CalcXor(USART_FRAME frame){
 8000b44:	b490      	push	{r4, r7}
 8000b46:	b086      	sub	sp, #24
 8000b48:	af00      	add	r7, sp, #0
 8000b4a:	463c      	mov	r4, r7
 8000b4c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	uint8_t crc = USART_FRAME_CHECKXOR_INIT_VALUE;
 8000b50:	23ff      	movs	r3, #255	; 0xff
 8000b52:	75fb      	strb	r3, [r7, #23]
	uint8_t byte1 = 0, byte2 = 0;
 8000b54:	2300      	movs	r3, #0
 8000b56:	757b      	strb	r3, [r7, #21]
 8000b58:	2300      	movs	r3, #0
 8000b5a:	753b      	strb	r3, [r7, #20]
	byte1 = (frame.nodeId >> 8) & 0xFF;
 8000b5c:	887b      	ldrh	r3, [r7, #2]
 8000b5e:	0a1b      	lsrs	r3, r3, #8
 8000b60:	b29b      	uxth	r3, r3
 8000b62:	757b      	strb	r3, [r7, #21]
	byte2 = frame.nodeId & 0xFF;
 8000b64:	887b      	ldrh	r3, [r7, #2]
 8000b66:	753b      	strb	r3, [r7, #20]
//	crc ^= (uint8_t)frame.nodeId;
	crc ^= byte1;
 8000b68:	7dfa      	ldrb	r2, [r7, #23]
 8000b6a:	7d7b      	ldrb	r3, [r7, #21]
 8000b6c:	4053      	eors	r3, r2
 8000b6e:	75fb      	strb	r3, [r7, #23]
	crc ^= byte2;
 8000b70:	7dfa      	ldrb	r2, [r7, #23]
 8000b72:	7d3b      	ldrb	r3, [r7, #20]
 8000b74:	4053      	eors	r3, r2
 8000b76:	75fb      	strb	r3, [r7, #23]
	crc ^= frame.endpoint;
 8000b78:	793a      	ldrb	r2, [r7, #4]
 8000b7a:	7dfb      	ldrb	r3, [r7, #23]
 8000b7c:	4053      	eors	r3, r2
 8000b7e:	75fb      	strb	r3, [r7, #23]
	crc ^= frame.id;
 8000b80:	797a      	ldrb	r2, [r7, #5]
 8000b82:	7dfb      	ldrb	r3, [r7, #23]
 8000b84:	4053      	eors	r3, r2
 8000b86:	75fb      	strb	r3, [r7, #23]
	crc ^= frame.type;
 8000b88:	79ba      	ldrb	r2, [r7, #6]
 8000b8a:	7dfb      	ldrb	r3, [r7, #23]
 8000b8c:	4053      	eors	r3, r2
 8000b8e:	75fb      	strb	r3, [r7, #23]
	crc ^= frame.payloadLength;
 8000b90:	79fa      	ldrb	r2, [r7, #7]
 8000b92:	7dfb      	ldrb	r3, [r7, #23]
 8000b94:	4053      	eors	r3, r2
 8000b96:	75fb      	strb	r3, [r7, #23]
	for(uint8_t i = 0; i < frame.payloadLength; i++){
 8000b98:	2300      	movs	r3, #0
 8000b9a:	75bb      	strb	r3, [r7, #22]
 8000b9c:	e00a      	b.n	8000bb4 <CalcXor+0x70>
		crc ^= frame.payload[i];
 8000b9e:	7dbb      	ldrb	r3, [r7, #22]
 8000ba0:	3318      	adds	r3, #24
 8000ba2:	443b      	add	r3, r7
 8000ba4:	f813 2c10 	ldrb.w	r2, [r3, #-16]
 8000ba8:	7dfb      	ldrb	r3, [r7, #23]
 8000baa:	4053      	eors	r3, r2
 8000bac:	75fb      	strb	r3, [r7, #23]
	for(uint8_t i = 0; i < frame.payloadLength; i++){
 8000bae:	7dbb      	ldrb	r3, [r7, #22]
 8000bb0:	3301      	adds	r3, #1
 8000bb2:	75bb      	strb	r3, [r7, #22]
 8000bb4:	79fb      	ldrb	r3, [r7, #7]
 8000bb6:	7dba      	ldrb	r2, [r7, #22]
 8000bb8:	429a      	cmp	r2, r3
 8000bba:	d3f0      	bcc.n	8000b9e <CalcXor+0x5a>
	}
	crc ^= frame.sequence;
 8000bbc:	7b3a      	ldrb	r2, [r7, #12]
 8000bbe:	7dfb      	ldrb	r3, [r7, #23]
 8000bc0:	4053      	eors	r3, r2
 8000bc2:	75fb      	strb	r3, [r7, #23]
	return crc;
 8000bc4:	7dfb      	ldrb	r3, [r7, #23]
}
 8000bc6:	4618      	mov	r0, r3
 8000bc8:	3718      	adds	r7, #24
 8000bca:	46bd      	mov	sp, r7
 8000bcc:	bc90      	pop	{r4, r7}
 8000bce:	4770      	bx	lr

08000bd0 <CheckXor>:
static bool CheckXor(USART_FRAME frame){
 8000bd0:	b590      	push	{r4, r7, lr}
 8000bd2:	b085      	sub	sp, #20
 8000bd4:	af00      	add	r7, sp, #0
 8000bd6:	463c      	mov	r4, r7
 8000bd8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	return CalcXor(frame) == frame.cxor;
 8000bdc:	463b      	mov	r3, r7
 8000bde:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000be0:	f7ff ffb0 	bl	8000b44 <CalcXor>
 8000be4:	4603      	mov	r3, r0
 8000be6:	461a      	mov	r2, r3
 8000be8:	7b7b      	ldrb	r3, [r7, #13]
 8000bea:	429a      	cmp	r2, r3
 8000bec:	bf0c      	ite	eq
 8000bee:	2301      	moveq	r3, #1
 8000bf0:	2300      	movne	r3, #0
 8000bf2:	b2db      	uxtb	r3, r3
}
 8000bf4:	4618      	mov	r0, r3
 8000bf6:	3714      	adds	r7, #20
 8000bf8:	46bd      	mov	sp, r7
 8000bfa:	bd90      	pop	{r4, r7, pc}

08000bfc <PollRxBuffer>:
static USART_FRAME PollRxBuffer(USART_TypeDef* USARTx){
 8000bfc:	b590      	push	{r4, r7, lr}
 8000bfe:	b089      	sub	sp, #36	; 0x24
 8000c00:	af00      	add	r7, sp, #0
 8000c02:	6078      	str	r0, [r7, #4]
 8000c04:	6039      	str	r1, [r7, #0]
	USART_FRAME retFrame = USART_FRAME_DEFAULT;
 8000c06:	4b67      	ldr	r3, [pc, #412]	; (8000da4 <PollRxBuffer+0x1a8>)
 8000c08:	f107 0410 	add.w	r4, r7, #16
 8000c0c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000c0e:	c407      	stmia	r4!, {r0, r1, r2}
 8000c10:	8023      	strh	r3, [r4, #0]
	if(USARTx == USART2){
 8000c12:	683b      	ldr	r3, [r7, #0]
 8000c14:	4a64      	ldr	r2, [pc, #400]	; (8000da8 <PollRxBuffer+0x1ac>)
 8000c16:	4293      	cmp	r3, r2
 8000c18:	f040 80b5 	bne.w	8000d86 <PollRxBuffer+0x18a>
		uint8_t data = 0;
 8000c1c:	2300      	movs	r3, #0
 8000c1e:	73fb      	strb	r3, [r7, #15]
		if(Queue_GetFront(usartRxQueue, &data) && data == 0xB1){
 8000c20:	4b62      	ldr	r3, [pc, #392]	; (8000dac <PollRxBuffer+0x1b0>)
 8000c22:	681b      	ldr	r3, [r3, #0]
 8000c24:	f107 020f 	add.w	r2, r7, #15
 8000c28:	4611      	mov	r1, r2
 8000c2a:	4618      	mov	r0, r3
 8000c2c:	f7ff fdfd 	bl	800082a <Queue_GetFront>
 8000c30:	4603      	mov	r3, r0
 8000c32:	2b00      	cmp	r3, #0
 8000c34:	f000 80a1 	beq.w	8000d7a <PollRxBuffer+0x17e>
 8000c38:	7bfb      	ldrb	r3, [r7, #15]
 8000c3a:	2bb1      	cmp	r3, #177	; 0xb1
 8000c3c:	f040 809d 	bne.w	8000d7a <PollRxBuffer+0x17e>
			//dequeue the start byte
			Queue_DeQueue(usartRxQueue, NULL);
 8000c40:	4b5a      	ldr	r3, [pc, #360]	; (8000dac <PollRxBuffer+0x1b0>)
 8000c42:	681b      	ldr	r3, [r3, #0]
 8000c44:	2100      	movs	r1, #0
 8000c46:	4618      	mov	r0, r3
 8000c48:	f7ff fdc3 	bl	80007d2 <Queue_DeQueue>
			Queue_DeQueue(usartRxQueue, &retFrame.length);
 8000c4c:	4b57      	ldr	r3, [pc, #348]	; (8000dac <PollRxBuffer+0x1b0>)
 8000c4e:	681b      	ldr	r3, [r3, #0]
 8000c50:	f107 0210 	add.w	r2, r7, #16
 8000c54:	4611      	mov	r1, r2
 8000c56:	4618      	mov	r0, r3
 8000c58:	f7ff fdbb 	bl	80007d2 <Queue_DeQueue>
			uint8_t byte1 = 0, byte2 = 0;
 8000c5c:	2300      	movs	r3, #0
 8000c5e:	73bb      	strb	r3, [r7, #14]
 8000c60:	2300      	movs	r3, #0
 8000c62:	737b      	strb	r3, [r7, #13]
			Queue_DeQueue(usartRxQueue, &byte1);
 8000c64:	4b51      	ldr	r3, [pc, #324]	; (8000dac <PollRxBuffer+0x1b0>)
 8000c66:	681b      	ldr	r3, [r3, #0]
 8000c68:	f107 020e 	add.w	r2, r7, #14
 8000c6c:	4611      	mov	r1, r2
 8000c6e:	4618      	mov	r0, r3
 8000c70:	f7ff fdaf 	bl	80007d2 <Queue_DeQueue>
			Queue_DeQueue(usartRxQueue, &byte2);
 8000c74:	4b4d      	ldr	r3, [pc, #308]	; (8000dac <PollRxBuffer+0x1b0>)
 8000c76:	681b      	ldr	r3, [r3, #0]
 8000c78:	f107 020d 	add.w	r2, r7, #13
 8000c7c:	4611      	mov	r1, r2
 8000c7e:	4618      	mov	r0, r3
 8000c80:	f7ff fda7 	bl	80007d2 <Queue_DeQueue>
			retFrame.nodeId = (uint16_t)((byte1 << 8) | byte2);
 8000c84:	7bbb      	ldrb	r3, [r7, #14]
 8000c86:	021b      	lsls	r3, r3, #8
 8000c88:	b21a      	sxth	r2, r3
 8000c8a:	7b7b      	ldrb	r3, [r7, #13]
 8000c8c:	b21b      	sxth	r3, r3
 8000c8e:	4313      	orrs	r3, r2
 8000c90:	b21b      	sxth	r3, r3
 8000c92:	b29b      	uxth	r3, r3
 8000c94:	827b      	strh	r3, [r7, #18]
			Queue_DeQueue(usartRxQueue, &retFrame.endpoint);
 8000c96:	4b45      	ldr	r3, [pc, #276]	; (8000dac <PollRxBuffer+0x1b0>)
 8000c98:	681a      	ldr	r2, [r3, #0]
 8000c9a:	f107 0310 	add.w	r3, r7, #16
 8000c9e:	3304      	adds	r3, #4
 8000ca0:	4619      	mov	r1, r3
 8000ca2:	4610      	mov	r0, r2
 8000ca4:	f7ff fd95 	bl	80007d2 <Queue_DeQueue>
			Queue_DeQueue(usartRxQueue, &retFrame.id);
 8000ca8:	4b40      	ldr	r3, [pc, #256]	; (8000dac <PollRxBuffer+0x1b0>)
 8000caa:	681a      	ldr	r2, [r3, #0]
 8000cac:	f107 0310 	add.w	r3, r7, #16
 8000cb0:	3305      	adds	r3, #5
 8000cb2:	4619      	mov	r1, r3
 8000cb4:	4610      	mov	r0, r2
 8000cb6:	f7ff fd8c 	bl	80007d2 <Queue_DeQueue>
			Queue_DeQueue(usartRxQueue, &retFrame.type);
 8000cba:	4b3c      	ldr	r3, [pc, #240]	; (8000dac <PollRxBuffer+0x1b0>)
 8000cbc:	681a      	ldr	r2, [r3, #0]
 8000cbe:	f107 0310 	add.w	r3, r7, #16
 8000cc2:	3306      	adds	r3, #6
 8000cc4:	4619      	mov	r1, r3
 8000cc6:	4610      	mov	r0, r2
 8000cc8:	f7ff fd83 	bl	80007d2 <Queue_DeQueue>
			Queue_DeQueue(usartRxQueue, &retFrame.payloadLength);
 8000ccc:	4b37      	ldr	r3, [pc, #220]	; (8000dac <PollRxBuffer+0x1b0>)
 8000cce:	681a      	ldr	r2, [r3, #0]
 8000cd0:	f107 0310 	add.w	r3, r7, #16
 8000cd4:	3307      	adds	r3, #7
 8000cd6:	4619      	mov	r1, r3
 8000cd8:	4610      	mov	r0, r2
 8000cda:	f7ff fd7a 	bl	80007d2 <Queue_DeQueue>
			for(uint8_t i = 0; i < retFrame.payloadLength; i++){
 8000cde:	2300      	movs	r3, #0
 8000ce0:	77fb      	strb	r3, [r7, #31]
 8000ce2:	e00c      	b.n	8000cfe <PollRxBuffer+0x102>
				Queue_DeQueue(usartRxQueue, &retFrame.payload[i]);
 8000ce4:	4b31      	ldr	r3, [pc, #196]	; (8000dac <PollRxBuffer+0x1b0>)
 8000ce6:	6818      	ldr	r0, [r3, #0]
 8000ce8:	7ffb      	ldrb	r3, [r7, #31]
 8000cea:	f107 0210 	add.w	r2, r7, #16
 8000cee:	3308      	adds	r3, #8
 8000cf0:	4413      	add	r3, r2
 8000cf2:	4619      	mov	r1, r3
 8000cf4:	f7ff fd6d 	bl	80007d2 <Queue_DeQueue>
			for(uint8_t i = 0; i < retFrame.payloadLength; i++){
 8000cf8:	7ffb      	ldrb	r3, [r7, #31]
 8000cfa:	3301      	adds	r3, #1
 8000cfc:	77fb      	strb	r3, [r7, #31]
 8000cfe:	7dfb      	ldrb	r3, [r7, #23]
 8000d00:	7ffa      	ldrb	r2, [r7, #31]
 8000d02:	429a      	cmp	r2, r3
 8000d04:	d3ee      	bcc.n	8000ce4 <PollRxBuffer+0xe8>
			}
			Queue_DeQueue(usartRxQueue, &retFrame.sequence);
 8000d06:	4b29      	ldr	r3, [pc, #164]	; (8000dac <PollRxBuffer+0x1b0>)
 8000d08:	681a      	ldr	r2, [r3, #0]
 8000d0a:	f107 0310 	add.w	r3, r7, #16
 8000d0e:	330c      	adds	r3, #12
 8000d10:	4619      	mov	r1, r3
 8000d12:	4610      	mov	r0, r2
 8000d14:	f7ff fd5d 	bl	80007d2 <Queue_DeQueue>
			Queue_DeQueue(usartRxQueue, &retFrame.cxor);
 8000d18:	4b24      	ldr	r3, [pc, #144]	; (8000dac <PollRxBuffer+0x1b0>)
 8000d1a:	681a      	ldr	r2, [r3, #0]
 8000d1c:	f107 0310 	add.w	r3, r7, #16
 8000d20:	330d      	adds	r3, #13
 8000d22:	4619      	mov	r1, r3
 8000d24:	4610      	mov	r0, r2
 8000d26:	f7ff fd54 	bl	80007d2 <Queue_DeQueue>
			if(CheckXor(retFrame)) {
 8000d2a:	f107 0310 	add.w	r3, r7, #16
 8000d2e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000d30:	f7ff ff4e 	bl	8000bd0 <CheckXor>
 8000d34:	4603      	mov	r3, r0
 8000d36:	2b00      	cmp	r3, #0
 8000d38:	d00a      	beq.n	8000d50 <PollRxBuffer+0x154>
				return retFrame;
 8000d3a:	687b      	ldr	r3, [r7, #4]
 8000d3c:	461c      	mov	r4, r3
 8000d3e:	f107 0310 	add.w	r3, r7, #16
 8000d42:	cb07      	ldmia	r3!, {r0, r1, r2}
 8000d44:	6020      	str	r0, [r4, #0]
 8000d46:	6061      	str	r1, [r4, #4]
 8000d48:	60a2      	str	r2, [r4, #8]
 8000d4a:	881b      	ldrh	r3, [r3, #0]
 8000d4c:	81a3      	strh	r3, [r4, #12]
 8000d4e:	e024      	b.n	8000d9a <PollRxBuffer+0x19e>
			}
			else{ //checkxor fail, reset the length
				usartRxQueue->frontPos = 0;
 8000d50:	4b16      	ldr	r3, [pc, #88]	; (8000dac <PollRxBuffer+0x1b0>)
 8000d52:	681b      	ldr	r3, [r3, #0]
 8000d54:	2200      	movs	r2, #0
 8000d56:	715a      	strb	r2, [r3, #5]
				usartRxQueue->backPos = 0;
 8000d58:	4b14      	ldr	r3, [pc, #80]	; (8000dac <PollRxBuffer+0x1b0>)
 8000d5a:	681b      	ldr	r3, [r3, #0]
 8000d5c:	2200      	movs	r2, #0
 8000d5e:	719a      	strb	r2, [r3, #6]
				retFrame.length = 0;
 8000d60:	2300      	movs	r3, #0
 8000d62:	743b      	strb	r3, [r7, #16]
				return retFrame;
 8000d64:	687b      	ldr	r3, [r7, #4]
 8000d66:	461c      	mov	r4, r3
 8000d68:	f107 0310 	add.w	r3, r7, #16
 8000d6c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8000d6e:	6020      	str	r0, [r4, #0]
 8000d70:	6061      	str	r1, [r4, #4]
 8000d72:	60a2      	str	r2, [r4, #8]
 8000d74:	881b      	ldrh	r3, [r3, #0]
 8000d76:	81a3      	strh	r3, [r4, #12]
 8000d78:	e00f      	b.n	8000d9a <PollRxBuffer+0x19e>
			}

		}
		else{
			Queue_DeQueue(usartRxQueue, NULL);
 8000d7a:	4b0c      	ldr	r3, [pc, #48]	; (8000dac <PollRxBuffer+0x1b0>)
 8000d7c:	681b      	ldr	r3, [r3, #0]
 8000d7e:	2100      	movs	r1, #0
 8000d80:	4618      	mov	r0, r3
 8000d82:	f7ff fd26 	bl	80007d2 <Queue_DeQueue>
		}
	}
	else{

	}
	return retFrame;
 8000d86:	687b      	ldr	r3, [r7, #4]
 8000d88:	461c      	mov	r4, r3
 8000d8a:	f107 0310 	add.w	r3, r7, #16
 8000d8e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8000d90:	6020      	str	r0, [r4, #0]
 8000d92:	6061      	str	r1, [r4, #4]
 8000d94:	60a2      	str	r2, [r4, #8]
 8000d96:	881b      	ldrh	r3, [r3, #0]
 8000d98:	81a3      	strh	r3, [r4, #12]
}
 8000d9a:	6878      	ldr	r0, [r7, #4]
 8000d9c:	3724      	adds	r7, #36	; 0x24
 8000d9e:	46bd      	mov	sp, r7
 8000da0:	bd90      	pop	{r4, r7, pc}
 8000da2:	bf00      	nop
 8000da4:	080055ec 	.word	0x080055ec
 8000da8:	40004400 	.word	0x40004400
 8000dac:	20000258 	.word	0x20000258

08000db0 <ProcessSerialReceiver>:
static void ProcessSerialReceiver(void){
 8000db0:	b590      	push	{r4, r7, lr}
 8000db2:	b085      	sub	sp, #20
 8000db4:	af00      	add	r7, sp, #0
	//scan usart1 buffer
	USART_FRAME frame = USART_FRAME_DEFAULT;
 8000db6:	4b0d      	ldr	r3, [pc, #52]	; (8000dec <ProcessSerialReceiver+0x3c>)
 8000db8:	463c      	mov	r4, r7
 8000dba:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000dbc:	c407      	stmia	r4!, {r0, r1, r2}
 8000dbe:	8023      	strh	r3, [r4, #0]
	frame = PollRxBuffer(USART2);
 8000dc0:	463b      	mov	r3, r7
 8000dc2:	490b      	ldr	r1, [pc, #44]	; (8000df0 <ProcessSerialReceiver+0x40>)
 8000dc4:	4618      	mov	r0, r3
 8000dc6:	f7ff ff19 	bl	8000bfc <PollRxBuffer>
	if(frame.length != 0){ // command received
 8000dca:	783b      	ldrb	r3, [r7, #0]
 8000dcc:	2b00      	cmp	r3, #0
 8000dce:	d008      	beq.n	8000de2 <ProcessSerialReceiver+0x32>
		if(usartRxHandler != NULL){
 8000dd0:	4b08      	ldr	r3, [pc, #32]	; (8000df4 <ProcessSerialReceiver+0x44>)
 8000dd2:	681b      	ldr	r3, [r3, #0]
 8000dd4:	2b00      	cmp	r3, #0
 8000dd6:	d004      	beq.n	8000de2 <ProcessSerialReceiver+0x32>
			usartRxHandler(frame);
 8000dd8:	4b06      	ldr	r3, [pc, #24]	; (8000df4 <ProcessSerialReceiver+0x44>)
 8000dda:	681c      	ldr	r4, [r3, #0]
 8000ddc:	463b      	mov	r3, r7
 8000dde:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000de0:	47a0      	blx	r4
		}
	}

	//scan others port buffer
}
 8000de2:	bf00      	nop
 8000de4:	3714      	adds	r7, #20
 8000de6:	46bd      	mov	sp, r7
 8000de8:	bd90      	pop	{r4, r7, pc}
 8000dea:	bf00      	nop
 8000dec:	080055ec 	.word	0x080055ec
 8000df0:	40004400 	.word	0x40004400
 8000df4:	20000254 	.word	0x20000254

08000df8 <USART1_Init>:


static void USART1_Init(usartFrameCallback handler)
{
 8000df8:	b580      	push	{r7, lr}
 8000dfa:	b08c      	sub	sp, #48	; 0x30
 8000dfc:	af02      	add	r7, sp, #8
 8000dfe:	6078      	str	r0, [r7, #4]
	GPIO_InitTypeDef GPIO_InitStructure;
	USART_InitTypeDef USART_InitStructure;
	NVIC_InitTypeDef NVIC_InitStructure;

	RCC_AHB1PeriphClockCmd(USART1_GPIO_RCC, ENABLE);
 8000e00:	2101      	movs	r1, #1
 8000e02:	2002      	movs	r0, #2
 8000e04:	f000 fcf6 	bl	80017f4 <RCC_AHB1PeriphClockCmd>
	RCC_APB2PeriphClockCmd(USART1_CLOCK, ENABLE);
 8000e08:	2101      	movs	r1, #1
 8000e0a:	2010      	movs	r0, #16
 8000e0c:	f000 fd12 	bl	8001834 <RCC_APB2PeriphClockCmd>

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 8000e10:	2302      	movs	r3, #2
 8000e12:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000e16:	2302      	movs	r3, #2
 8000e18:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000e1c:	2300      	movs	r3, #0
 8000e1e:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 8000e22:	2301      	movs	r3, #1
 8000e24:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	GPIO_InitStructure.GPIO_Pin = USART1_RX_GPIO_PIN;
 8000e28:	2380      	movs	r3, #128	; 0x80
 8000e2a:	623b      	str	r3, [r7, #32]

	GPIO_Init(USART1_GPIO_PORT, &GPIO_InitStructure);
 8000e2c:	f107 0320 	add.w	r3, r7, #32
 8000e30:	4619      	mov	r1, r3
 8000e32:	4827      	ldr	r0, [pc, #156]	; (8000ed0 <USART1_Init+0xd8>)
 8000e34:	f000 fb2c 	bl	8001490 <GPIO_Init>
	GPIO_PinAFConfig(USART1_GPIO_PORT, GPIO_PinSource7, GPIO_AF_USART1);
 8000e38:	2207      	movs	r2, #7
 8000e3a:	2107      	movs	r1, #7
 8000e3c:	4824      	ldr	r0, [pc, #144]	; (8000ed0 <USART1_Init+0xd8>)
 8000e3e:	f000 fbe7 	bl	8001610 <GPIO_PinAFConfig>

	USART_InitStructure.USART_BaudRate = USART_BAUD;
 8000e42:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 8000e46:	613b      	str	r3, [r7, #16]
	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
 8000e48:	2300      	movs	r3, #0
 8000e4a:	82bb      	strh	r3, [r7, #20]
	USART_InitStructure.USART_StopBits = USART_StopBits_1;
 8000e4c:	2300      	movs	r3, #0
 8000e4e:	82fb      	strh	r3, [r7, #22]
	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 8000e50:	2300      	movs	r3, #0
 8000e52:	83bb      	strh	r3, [r7, #28]
	USART_InitStructure.USART_Parity = USART_Parity_No;
 8000e54:	2300      	movs	r3, #0
 8000e56:	833b      	strh	r3, [r7, #24]
	USART_InitStructure.USART_Mode = USART_Mode_Rx;
 8000e58:	2304      	movs	r3, #4
 8000e5a:	837b      	strh	r3, [r7, #26]

	USART_Init(USART1, &USART_InitStructure);
 8000e5c:	f107 0310 	add.w	r3, r7, #16
 8000e60:	4619      	mov	r1, r3
 8000e62:	481c      	ldr	r0, [pc, #112]	; (8000ed4 <USART1_Init+0xdc>)
 8000e64:	f000 fd06 	bl	8001874 <USART_Init>
	USART_Cmd(USART1, ENABLE);
 8000e68:	2101      	movs	r1, #1
 8000e6a:	481a      	ldr	r0, [pc, #104]	; (8000ed4 <USART1_Init+0xdc>)
 8000e6c:	f000 fdbc 	bl	80019e8 <USART_Cmd>

	//config interrupt when usart6 transmit data
	//enable usartx receive interrupt
	USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);
 8000e70:	2201      	movs	r2, #1
 8000e72:	f240 5125 	movw	r1, #1317	; 0x525
 8000e76:	4817      	ldr	r0, [pc, #92]	; (8000ed4 <USART1_Init+0xdc>)
 8000e78:	f000 fdf8 	bl	8001a6c <USART_ITConfig>
	//nvic configuration
	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);
 8000e7c:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 8000e80:	f000 fa90 	bl	80013a4 <NVIC_PriorityGroupConfig>

	NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;
 8000e84:	2325      	movs	r3, #37	; 0x25
 8000e86:	733b      	strb	r3, [r7, #12]
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 8000e88:	2300      	movs	r3, #0
 8000e8a:	737b      	strb	r3, [r7, #13]
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 8000e8c:	2300      	movs	r3, #0
 8000e8e:	73bb      	strb	r3, [r7, #14]
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 8000e90:	2301      	movs	r3, #1
 8000e92:	73fb      	strb	r3, [r7, #15]

	NVIC_Init(&NVIC_InitStructure);
 8000e94:	f107 030c 	add.w	r3, r7, #12
 8000e98:	4618      	mov	r0, r3
 8000e9a:	f000 fa97 	bl	80013cc <NVIC_Init>


	usartRxHandler = handler;
 8000e9e:	4a0e      	ldr	r2, [pc, #56]	; (8000ed8 <USART1_Init+0xe0>)
 8000ea0:	687b      	ldr	r3, [r7, #4]
 8000ea2:	6013      	str	r3, [r2, #0]

	usartRxQueue = Queue_Init(128);
 8000ea4:	2080      	movs	r0, #128	; 0x80
 8000ea6:	f7ff fc41 	bl	800072c <Queue_Init>
 8000eaa:	4603      	mov	r3, r0
 8000eac:	4a0b      	ldr	r2, [pc, #44]	; (8000edc <USART1_Init+0xe4>)
 8000eae:	6013      	str	r3, [r2, #0]

	s_idProcessSerialTimer = TimerStart("ProcessSerialReceiver",
 8000eb0:	2300      	movs	r3, #0
 8000eb2:	9300      	str	r3, [sp, #0]
 8000eb4:	4b0a      	ldr	r3, [pc, #40]	; (8000ee0 <USART1_Init+0xe8>)
 8000eb6:	22ff      	movs	r2, #255	; 0xff
 8000eb8:	21c8      	movs	r1, #200	; 0xc8
 8000eba:	480a      	ldr	r0, [pc, #40]	; (8000ee4 <USART1_Init+0xec>)
 8000ebc:	f001 fa2a 	bl	8002314 <TimerStart>
 8000ec0:	4603      	mov	r3, r0
 8000ec2:	461a      	mov	r2, r3
 8000ec4:	4b08      	ldr	r3, [pc, #32]	; (8000ee8 <USART1_Init+0xf0>)
 8000ec6:	701a      	strb	r2, [r3, #0]
				200, TIMER_REPEAT_FOREVER,
				(void*)ProcessSerialReceiver, NULL);
}
 8000ec8:	bf00      	nop
 8000eca:	3728      	adds	r7, #40	; 0x28
 8000ecc:	46bd      	mov	sp, r7
 8000ece:	bd80      	pop	{r7, pc}
 8000ed0:	40020400 	.word	0x40020400
 8000ed4:	40011000 	.word	0x40011000
 8000ed8:	20000254 	.word	0x20000254
 8000edc:	20000258 	.word	0x20000258
 8000ee0:	08000db1 	.word	0x08000db1
 8000ee4:	080055fc 	.word	0x080055fc
 8000ee8:	20000001 	.word	0x20000001

08000eec <USART6_Init>:
static void USART6_Init(void)
{
 8000eec:	b580      	push	{r7, lr}
 8000eee:	b086      	sub	sp, #24
 8000ef0:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef	GPIO_InitStructure;
	USART_InitTypeDef	USART_InitStructure;

	RCC_AHB1PeriphClockCmd(GPIOC, ENABLE);
 8000ef2:	2101      	movs	r1, #1
 8000ef4:	481a      	ldr	r0, [pc, #104]	; (8000f60 <USART6_Init+0x74>)
 8000ef6:	f000 fc7d 	bl	80017f4 <RCC_AHB1PeriphClockCmd>
	RCC_APB2PeriphClockCmd(USART6_CLOCK, ENABLE);
 8000efa:	2101      	movs	r1, #1
 8000efc:	2020      	movs	r0, #32
 8000efe:	f000 fc99 	bl	8001834 <RCC_APB2PeriphClockCmd>

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 8000f02:	2302      	movs	r3, #2
 8000f04:	753b      	strb	r3, [r7, #20]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000f06:	2302      	movs	r3, #2
 8000f08:	757b      	strb	r3, [r7, #21]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000f0a:	2300      	movs	r3, #0
 8000f0c:	75bb      	strb	r3, [r7, #22]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 8000f0e:	2301      	movs	r3, #1
 8000f10:	75fb      	strb	r3, [r7, #23]
	GPIO_InitStructure.GPIO_Pin = USART6_TX_GPIO_PIN;
 8000f12:	2340      	movs	r3, #64	; 0x40
 8000f14:	613b      	str	r3, [r7, #16]

	GPIO_Init(USART6_GPIO_PORT, &GPIO_InitStructure);
 8000f16:	f107 0310 	add.w	r3, r7, #16
 8000f1a:	4619      	mov	r1, r3
 8000f1c:	4810      	ldr	r0, [pc, #64]	; (8000f60 <USART6_Init+0x74>)
 8000f1e:	f000 fab7 	bl	8001490 <GPIO_Init>
	GPIO_PinAFConfig(USART6_GPIO_PORT, GPIO_PinSource6, GPIO_AF_USART6);
 8000f22:	2208      	movs	r2, #8
 8000f24:	2106      	movs	r1, #6
 8000f26:	480e      	ldr	r0, [pc, #56]	; (8000f60 <USART6_Init+0x74>)
 8000f28:	f000 fb72 	bl	8001610 <GPIO_PinAFConfig>

	//config for usart6
	USART_InitStructure.USART_BaudRate = USART_BAUD;
 8000f2c:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 8000f30:	603b      	str	r3, [r7, #0]
	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
 8000f32:	2300      	movs	r3, #0
 8000f34:	80bb      	strh	r3, [r7, #4]
	USART_InitStructure.USART_StopBits = USART_StopBits_1;
 8000f36:	2300      	movs	r3, #0
 8000f38:	80fb      	strh	r3, [r7, #6]
	USART_InitStructure.USART_Parity = USART_Parity_No;
 8000f3a:	2300      	movs	r3, #0
 8000f3c:	813b      	strh	r3, [r7, #8]
	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 8000f3e:	2300      	movs	r3, #0
 8000f40:	81bb      	strh	r3, [r7, #12]
	USART_InitStructure.USART_Mode = USART_Mode_Tx;
 8000f42:	2308      	movs	r3, #8
 8000f44:	817b      	strh	r3, [r7, #10]

	USART_Init(USART6, &USART_InitStructure);
 8000f46:	463b      	mov	r3, r7
 8000f48:	4619      	mov	r1, r3
 8000f4a:	4806      	ldr	r0, [pc, #24]	; (8000f64 <USART6_Init+0x78>)
 8000f4c:	f000 fc92 	bl	8001874 <USART_Init>
	USART_Cmd(USART6, ENABLE);
 8000f50:	2101      	movs	r1, #1
 8000f52:	4804      	ldr	r0, [pc, #16]	; (8000f64 <USART6_Init+0x78>)
 8000f54:	f000 fd48 	bl	80019e8 <USART_Cmd>
}
 8000f58:	bf00      	nop
 8000f5a:	3718      	adds	r7, #24
 8000f5c:	46bd      	mov	sp, r7
 8000f5e:	bd80      	pop	{r7, pc}
 8000f60:	40020800 	.word	0x40020800
 8000f64:	40011400 	.word	0x40011400

08000f68 <Timer_CalcTimeDiff>:
 *      Author: Administrator
 */
#include "Utils.h"


uint32_t Timer_CalcTimeDiff(uint32_t time1, uint32_t time2){
 8000f68:	b480      	push	{r7}
 8000f6a:	b083      	sub	sp, #12
 8000f6c:	af00      	add	r7, sp, #0
 8000f6e:	6078      	str	r0, [r7, #4]
 8000f70:	6039      	str	r1, [r7, #0]
	if(time2 >= time1) return time2 - time1;
 8000f72:	683a      	ldr	r2, [r7, #0]
 8000f74:	687b      	ldr	r3, [r7, #4]
 8000f76:	429a      	cmp	r2, r3
 8000f78:	d303      	bcc.n	8000f82 <Timer_CalcTimeDiff+0x1a>
 8000f7a:	683a      	ldr	r2, [r7, #0]
 8000f7c:	687b      	ldr	r3, [r7, #4]
 8000f7e:	1ad3      	subs	r3, r2, r3
 8000f80:	e003      	b.n	8000f8a <Timer_CalcTimeDiff+0x22>
	else return 0xFFFFFFFFU - time2 + time1;
 8000f82:	687a      	ldr	r2, [r7, #4]
 8000f84:	683b      	ldr	r3, [r7, #0]
 8000f86:	1ad3      	subs	r3, r2, r3
 8000f88:	3b01      	subs	r3, #1
}
 8000f8a:	4618      	mov	r0, r3
 8000f8c:	370c      	adds	r7, #12
 8000f8e:	46bd      	mov	sp, r7
 8000f90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f94:	4770      	bx	lr

08000f96 <main>:
static void Main_DeviceStateMachine(uint8_t event);
static void Main_DeviceManaging(void);


int main(void)
{
 8000f96:	b580      	push	{r7, lr}
 8000f98:	af00      	add	r7, sp, #0
	Main_AppCommonInit();
 8000f9a:	f000 f805 	bl	8000fa8 <Main_AppCommonInit>

	while(1)
	{
		processTimerScheduler();
 8000f9e:	f001 fa77 	bl	8002490 <processTimerScheduler>
		processEventScheduler();
 8000fa2:	f001 f92d 	bl	8002200 <processEventScheduler>
	{
 8000fa6:	e7fa      	b.n	8000f9e <main+0x8>

08000fa8 <Main_AppCommonInit>:
	}
}

static void Main_AppCommonInit(void){
 8000fa8:	b580      	push	{r7, lr}
 8000faa:	b084      	sub	sp, #16
 8000fac:	af00      	add	r7, sp, #0
	SystemCoreClockUpdate();
 8000fae:	f000 f92d 	bl	800120c <SystemCoreClockUpdate>
	TimerInit();
 8000fb2:	f001 f98d 	bl	80022d0 <TimerInit>

	LCD_Init();
 8000fb6:	f7ff fa63 	bl	8000480 <LCD_Init>

	Button_Init();
 8000fba:	f000 fe33 	bl	8001c24 <Button_Init>
	EventButton_Init();
 8000fbe:	f001 f81b 	bl	8001ff8 <EventButton_Init>
	EventSchedulerInit(Main_DeviceStateMachine);
 8000fc2:	480b      	ldr	r0, [pc, #44]	; (8000ff0 <Main_AppCommonInit+0x48>)
 8000fc4:	f001 f8ea 	bl	800219c <EventSchedulerInit>
	MyUSART_Init(Main_UsartHandler);
 8000fc8:	480a      	ldr	r0, [pc, #40]	; (8000ff4 <Main_AppCommonInit+0x4c>)
 8000fca:	f7ff fc6d 	bl	80008a8 <MyUSART_Init>

	DeviceManager_DeviceInit(Main_DeviceManaging, REM);
 8000fce:	2100      	movs	r1, #0
 8000fd0:	4809      	ldr	r0, [pc, #36]	; (8000ff8 <Main_AppCommonInit+0x50>)
 8000fd2:	f7ff f955 	bl	8000280 <DeviceManager_DeviceInit>

	//send controller connected frame to device
	USART_FRAME frame = USART_GenerateDeviceConnected();
 8000fd6:	463b      	mov	r3, r7
 8000fd8:	4618      	mov	r0, r3
 8000fda:	f7ff fd1b 	bl	8000a14 <USART_GenerateDeviceConnected>
	USART_SendFrame(frame);
 8000fde:	463b      	mov	r3, r7
 8000fe0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000fe2:	f7ff fc6e 	bl	80008c2 <USART_SendFrame>
}
 8000fe6:	bf00      	nop
 8000fe8:	3710      	adds	r7, #16
 8000fea:	46bd      	mov	sp, r7
 8000fec:	bd80      	pop	{r7, pc}
 8000fee:	bf00      	nop
 8000ff0:	08001039 	.word	0x08001039
 8000ff4:	08000ffd 	.word	0x08000ffd
 8000ff8:	0800108b 	.word	0x0800108b

08000ffc <Main_UsartHandler>:

static void Main_UsartHandler(USART_FRAME frame){
 8000ffc:	b590      	push	{r4, r7, lr}
 8000ffe:	b087      	sub	sp, #28
 8001000:	af00      	add	r7, sp, #0
 8001002:	463c      	mov	r4, r7
 8001004:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	switch(frame.id){
 8001008:	797b      	ldrb	r3, [r7, #5]
 800100a:	2b07      	cmp	r3, #7
 800100c:	d002      	beq.n	8001014 <Main_UsartHandler+0x18>
 800100e:	2b09      	cmp	r3, #9
 8001010:	d006      	beq.n	8001020 <Main_UsartHandler+0x24>
		uint8_t level = frame.payload[1];
		DeviceManager_SetDeviceLevel(level);
		break;
	}
	default:
		break;
 8001012:	e00d      	b.n	8001030 <Main_UsartHandler+0x34>
		if(frame.type == USART_FRAME_CMD_TYPE_RESPONSE){
 8001014:	79bb      	ldrb	r3, [r7, #6]
 8001016:	2b02      	cmp	r3, #2
 8001018:	d109      	bne.n	800102e <Main_UsartHandler+0x32>
			DeviceManager_SetDeviceOnline();
 800101a:	f7ff f979 	bl	8000310 <DeviceManager_SetDeviceOnline>
		break;
 800101e:	e006      	b.n	800102e <Main_UsartHandler+0x32>
		uint8_t level = frame.payload[1];
 8001020:	7a7b      	ldrb	r3, [r7, #9]
 8001022:	75fb      	strb	r3, [r7, #23]
		DeviceManager_SetDeviceLevel(level);
 8001024:	7dfb      	ldrb	r3, [r7, #23]
 8001026:	4618      	mov	r0, r3
 8001028:	f7ff f996 	bl	8000358 <DeviceManager_SetDeviceLevel>
		break;
 800102c:	e000      	b.n	8001030 <Main_UsartHandler+0x34>
		break;
 800102e:	bf00      	nop
	}
}
 8001030:	bf00      	nop
 8001032:	371c      	adds	r7, #28
 8001034:	46bd      	mov	sp, r7
 8001036:	bd90      	pop	{r4, r7, pc}

08001038 <Main_DeviceStateMachine>:
static void Main_DeviceStateMachine(uint8_t event){
 8001038:	b580      	push	{r7, lr}
 800103a:	b08a      	sub	sp, #40	; 0x28
 800103c:	af00      	add	r7, sp, #0
 800103e:	4603      	mov	r3, r0
 8001040:	71fb      	strb	r3, [r7, #7]
	switch(event){
 8001042:	79fb      	ldrb	r3, [r7, #7]
 8001044:	2b02      	cmp	r3, #2
 8001046:	d002      	beq.n	800104e <Main_DeviceStateMachine+0x16>
 8001048:	2b04      	cmp	r3, #4
 800104a:	d00d      	beq.n	8001068 <Main_DeviceStateMachine+0x30>
		USART_FRAME frame = USART_GenerateLevelControl(LEVEL_SET, 0);
		USART_SendFrame(frame);
		break;
	}
	default:
		break;
 800104c:	e019      	b.n	8001082 <Main_DeviceStateMachine+0x4a>
		USART_FRAME frame = USART_GenerateLevelControl(LEVEL_SET, 100);
 800104e:	f107 0318 	add.w	r3, r7, #24
 8001052:	2264      	movs	r2, #100	; 0x64
 8001054:	2100      	movs	r1, #0
 8001056:	4618      	mov	r0, r3
 8001058:	f7ff fcf1 	bl	8000a3e <USART_GenerateLevelControl>
		USART_SendFrame(frame);
 800105c:	f107 0318 	add.w	r3, r7, #24
 8001060:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001062:	f7ff fc2e 	bl	80008c2 <USART_SendFrame>
		break;
 8001066:	e00c      	b.n	8001082 <Main_DeviceStateMachine+0x4a>
		USART_FRAME frame = USART_GenerateLevelControl(LEVEL_SET, 0);
 8001068:	f107 0308 	add.w	r3, r7, #8
 800106c:	2200      	movs	r2, #0
 800106e:	2100      	movs	r1, #0
 8001070:	4618      	mov	r0, r3
 8001072:	f7ff fce4 	bl	8000a3e <USART_GenerateLevelControl>
		USART_SendFrame(frame);
 8001076:	f107 0308 	add.w	r3, r7, #8
 800107a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800107c:	f7ff fc21 	bl	80008c2 <USART_SendFrame>
		break;
 8001080:	bf00      	nop
	}
}
 8001082:	bf00      	nop
 8001084:	3728      	adds	r7, #40	; 0x28
 8001086:	46bd      	mov	sp, r7
 8001088:	bd80      	pop	{r7, pc}

0800108a <Main_DeviceManaging>:
static void Main_DeviceManaging(void){
 800108a:	b580      	push	{r7, lr}
 800108c:	b084      	sub	sp, #16
 800108e:	af00      	add	r7, sp, #0
	//handle all event related to the device
	DEVICE_s device = DeviceManager_GetDevice();
 8001090:	463b      	mov	r3, r7
 8001092:	4618      	mov	r0, r3
 8001094:	f7ff f92a 	bl	80002ec <DeviceManager_GetDevice>
	LCD_ClearScreen();
 8001098:	f7ff fb3e 	bl	8000718 <LCD_ClearScreen>
	//handle device connection first
	switch(device.state){
 800109c:	783b      	ldrb	r3, [r7, #0]
 800109e:	2bff      	cmp	r3, #255	; 0xff
 80010a0:	d00a      	beq.n	80010b8 <Main_DeviceManaging+0x2e>
 80010a2:	2bff      	cmp	r3, #255	; 0xff
 80010a4:	dc0c      	bgt.n	80010c0 <Main_DeviceManaging+0x36>
 80010a6:	2b00      	cmp	r3, #0
 80010a8:	d002      	beq.n	80010b0 <Main_DeviceManaging+0x26>
 80010aa:	2b01      	cmp	r3, #1
 80010ac:	d004      	beq.n	80010b8 <Main_DeviceManaging+0x2e>
	{
		LCD_DisplayState(OFFLINE);
		break;
	}
	default:
		break;
 80010ae:	e007      	b.n	80010c0 <Main_DeviceManaging+0x36>
		LCD_DisplayState(ONLINE);
 80010b0:	2000      	movs	r0, #0
 80010b2:	f7ff fa25 	bl	8000500 <LCD_DisplayState>
		break;
 80010b6:	e004      	b.n	80010c2 <Main_DeviceManaging+0x38>
		LCD_DisplayState(OFFLINE);
 80010b8:	2001      	movs	r0, #1
 80010ba:	f7ff fa21 	bl	8000500 <LCD_DisplayState>
		break;
 80010be:	e000      	b.n	80010c2 <Main_DeviceManaging+0x38>
		break;
 80010c0:	bf00      	nop
	}

	//handle level change
	LCD_DisplayLevel(device.level);
 80010c2:	78bb      	ldrb	r3, [r7, #2]
 80010c4:	4618      	mov	r0, r3
 80010c6:	f7ff fa4b 	bl	8000560 <LCD_DisplayLevel>

	//save the last communicate time
	uint32_t currentTime = GetMilSecTick();
 80010ca:	f001 f9d5 	bl	8002478 <GetMilSecTick>
 80010ce:	60f8      	str	r0, [r7, #12]
	DeviceManager_UpdateLastTime(currentTime);
 80010d0:	68f8      	ldr	r0, [r7, #12]
 80010d2:	f7ff f959 	bl	8000388 <DeviceManager_UpdateLastTime>
}
 80010d6:	bf00      	nop
 80010d8:	3710      	adds	r7, #16
 80010da:	46bd      	mov	sp, r7
 80010dc:	bd80      	pop	{r7, pc}
	...

080010e0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80010e0:	b580      	push	{r7, lr}
 80010e2:	b086      	sub	sp, #24
 80010e4:	af00      	add	r7, sp, #0
 80010e6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80010e8:	4a14      	ldr	r2, [pc, #80]	; (800113c <_sbrk+0x5c>)
 80010ea:	4b15      	ldr	r3, [pc, #84]	; (8001140 <_sbrk+0x60>)
 80010ec:	1ad3      	subs	r3, r2, r3
 80010ee:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80010f0:	697b      	ldr	r3, [r7, #20]
 80010f2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80010f4:	4b13      	ldr	r3, [pc, #76]	; (8001144 <_sbrk+0x64>)
 80010f6:	681b      	ldr	r3, [r3, #0]
 80010f8:	2b00      	cmp	r3, #0
 80010fa:	d102      	bne.n	8001102 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80010fc:	4b11      	ldr	r3, [pc, #68]	; (8001144 <_sbrk+0x64>)
 80010fe:	4a12      	ldr	r2, [pc, #72]	; (8001148 <_sbrk+0x68>)
 8001100:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001102:	4b10      	ldr	r3, [pc, #64]	; (8001144 <_sbrk+0x64>)
 8001104:	681a      	ldr	r2, [r3, #0]
 8001106:	687b      	ldr	r3, [r7, #4]
 8001108:	4413      	add	r3, r2
 800110a:	693a      	ldr	r2, [r7, #16]
 800110c:	429a      	cmp	r2, r3
 800110e:	d207      	bcs.n	8001120 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001110:	f003 fe54 	bl	8004dbc <__errno>
 8001114:	4603      	mov	r3, r0
 8001116:	220c      	movs	r2, #12
 8001118:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800111a:	f04f 33ff 	mov.w	r3, #4294967295
 800111e:	e009      	b.n	8001134 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001120:	4b08      	ldr	r3, [pc, #32]	; (8001144 <_sbrk+0x64>)
 8001122:	681b      	ldr	r3, [r3, #0]
 8001124:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001126:	4b07      	ldr	r3, [pc, #28]	; (8001144 <_sbrk+0x64>)
 8001128:	681a      	ldr	r2, [r3, #0]
 800112a:	687b      	ldr	r3, [r7, #4]
 800112c:	4413      	add	r3, r2
 800112e:	4a05      	ldr	r2, [pc, #20]	; (8001144 <_sbrk+0x64>)
 8001130:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001132:	68fb      	ldr	r3, [r7, #12]
}
 8001134:	4618      	mov	r0, r3
 8001136:	3718      	adds	r7, #24
 8001138:	46bd      	mov	sp, r7
 800113a:	bd80      	pop	{r7, pc}
 800113c:	20018000 	.word	0x20018000
 8001140:	00000400 	.word	0x00000400
 8001144:	20000260 	.word	0x20000260
 8001148:	200016f0 	.word	0x200016f0

0800114c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800114c:	480d      	ldr	r0, [pc, #52]	; (8001184 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800114e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001150:	f000 f826 	bl	80011a0 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001154:	480c      	ldr	r0, [pc, #48]	; (8001188 <LoopForever+0x6>)
  ldr r1, =_edata
 8001156:	490d      	ldr	r1, [pc, #52]	; (800118c <LoopForever+0xa>)
  ldr r2, =_sidata
 8001158:	4a0d      	ldr	r2, [pc, #52]	; (8001190 <LoopForever+0xe>)
  movs r3, #0
 800115a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800115c:	e002      	b.n	8001164 <LoopCopyDataInit>

0800115e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800115e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001160:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001162:	3304      	adds	r3, #4

08001164 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001164:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001166:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001168:	d3f9      	bcc.n	800115e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800116a:	4a0a      	ldr	r2, [pc, #40]	; (8001194 <LoopForever+0x12>)
  ldr r4, =_ebss
 800116c:	4c0a      	ldr	r4, [pc, #40]	; (8001198 <LoopForever+0x16>)
  movs r3, #0
 800116e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001170:	e001      	b.n	8001176 <LoopFillZerobss>

08001172 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001172:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001174:	3204      	adds	r2, #4

08001176 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001176:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001178:	d3fb      	bcc.n	8001172 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800117a:	f003 fe25 	bl	8004dc8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800117e:	f7ff ff0a 	bl	8000f96 <main>

08001182 <LoopForever>:

LoopForever:
  b LoopForever
 8001182:	e7fe      	b.n	8001182 <LoopForever>
  ldr   r0, =_estack
 8001184:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8001188:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800118c:	200000ac 	.word	0x200000ac
  ldr r2, =_sidata
 8001190:	08005c40 	.word	0x08005c40
  ldr r2, =_sbss
 8001194:	200000ac 	.word	0x200000ac
  ldr r4, =_ebss
 8001198:	200016ec 	.word	0x200016ec

0800119c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800119c:	e7fe      	b.n	800119c <ADC_IRQHandler>
	...

080011a0 <SystemInit>:
 80011a0:	b580      	push	{r7, lr}
 80011a2:	af00      	add	r7, sp, #0
 80011a4:	4b16      	ldr	r3, [pc, #88]	; (8001200 <SystemInit+0x60>)
 80011a6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80011aa:	4a15      	ldr	r2, [pc, #84]	; (8001200 <SystemInit+0x60>)
 80011ac:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80011b0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80011b4:	4b13      	ldr	r3, [pc, #76]	; (8001204 <SystemInit+0x64>)
 80011b6:	681b      	ldr	r3, [r3, #0]
 80011b8:	4a12      	ldr	r2, [pc, #72]	; (8001204 <SystemInit+0x64>)
 80011ba:	f043 0301 	orr.w	r3, r3, #1
 80011be:	6013      	str	r3, [r2, #0]
 80011c0:	4b10      	ldr	r3, [pc, #64]	; (8001204 <SystemInit+0x64>)
 80011c2:	2200      	movs	r2, #0
 80011c4:	609a      	str	r2, [r3, #8]
 80011c6:	4b0f      	ldr	r3, [pc, #60]	; (8001204 <SystemInit+0x64>)
 80011c8:	681b      	ldr	r3, [r3, #0]
 80011ca:	4a0e      	ldr	r2, [pc, #56]	; (8001204 <SystemInit+0x64>)
 80011cc:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 80011d0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80011d4:	6013      	str	r3, [r2, #0]
 80011d6:	4b0b      	ldr	r3, [pc, #44]	; (8001204 <SystemInit+0x64>)
 80011d8:	4a0b      	ldr	r2, [pc, #44]	; (8001208 <SystemInit+0x68>)
 80011da:	605a      	str	r2, [r3, #4]
 80011dc:	4b09      	ldr	r3, [pc, #36]	; (8001204 <SystemInit+0x64>)
 80011de:	681b      	ldr	r3, [r3, #0]
 80011e0:	4a08      	ldr	r2, [pc, #32]	; (8001204 <SystemInit+0x64>)
 80011e2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80011e6:	6013      	str	r3, [r2, #0]
 80011e8:	4b06      	ldr	r3, [pc, #24]	; (8001204 <SystemInit+0x64>)
 80011ea:	2200      	movs	r2, #0
 80011ec:	60da      	str	r2, [r3, #12]
 80011ee:	f000 f889 	bl	8001304 <SetSysClock>
 80011f2:	4b03      	ldr	r3, [pc, #12]	; (8001200 <SystemInit+0x60>)
 80011f4:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80011f8:	609a      	str	r2, [r3, #8]
 80011fa:	bf00      	nop
 80011fc:	bd80      	pop	{r7, pc}
 80011fe:	bf00      	nop
 8001200:	e000ed00 	.word	0xe000ed00
 8001204:	40023800 	.word	0x40023800
 8001208:	24003010 	.word	0x24003010

0800120c <SystemCoreClockUpdate>:
 800120c:	b480      	push	{r7}
 800120e:	b087      	sub	sp, #28
 8001210:	af00      	add	r7, sp, #0
 8001212:	2300      	movs	r3, #0
 8001214:	613b      	str	r3, [r7, #16]
 8001216:	2300      	movs	r3, #0
 8001218:	617b      	str	r3, [r7, #20]
 800121a:	2302      	movs	r3, #2
 800121c:	60fb      	str	r3, [r7, #12]
 800121e:	2300      	movs	r3, #0
 8001220:	60bb      	str	r3, [r7, #8]
 8001222:	2302      	movs	r3, #2
 8001224:	607b      	str	r3, [r7, #4]
 8001226:	4b32      	ldr	r3, [pc, #200]	; (80012f0 <SystemCoreClockUpdate+0xe4>)
 8001228:	689b      	ldr	r3, [r3, #8]
 800122a:	f003 030c 	and.w	r3, r3, #12
 800122e:	613b      	str	r3, [r7, #16]
 8001230:	693b      	ldr	r3, [r7, #16]
 8001232:	2b04      	cmp	r3, #4
 8001234:	d007      	beq.n	8001246 <SystemCoreClockUpdate+0x3a>
 8001236:	2b08      	cmp	r3, #8
 8001238:	d009      	beq.n	800124e <SystemCoreClockUpdate+0x42>
 800123a:	2b00      	cmp	r3, #0
 800123c:	d13d      	bne.n	80012ba <SystemCoreClockUpdate+0xae>
 800123e:	4b2d      	ldr	r3, [pc, #180]	; (80012f4 <SystemCoreClockUpdate+0xe8>)
 8001240:	4a2d      	ldr	r2, [pc, #180]	; (80012f8 <SystemCoreClockUpdate+0xec>)
 8001242:	601a      	str	r2, [r3, #0]
 8001244:	e03d      	b.n	80012c2 <SystemCoreClockUpdate+0xb6>
 8001246:	4b2b      	ldr	r3, [pc, #172]	; (80012f4 <SystemCoreClockUpdate+0xe8>)
 8001248:	4a2c      	ldr	r2, [pc, #176]	; (80012fc <SystemCoreClockUpdate+0xf0>)
 800124a:	601a      	str	r2, [r3, #0]
 800124c:	e039      	b.n	80012c2 <SystemCoreClockUpdate+0xb6>
 800124e:	4b28      	ldr	r3, [pc, #160]	; (80012f0 <SystemCoreClockUpdate+0xe4>)
 8001250:	685b      	ldr	r3, [r3, #4]
 8001252:	0d9b      	lsrs	r3, r3, #22
 8001254:	f003 0301 	and.w	r3, r3, #1
 8001258:	60bb      	str	r3, [r7, #8]
 800125a:	4b25      	ldr	r3, [pc, #148]	; (80012f0 <SystemCoreClockUpdate+0xe4>)
 800125c:	685b      	ldr	r3, [r3, #4]
 800125e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8001262:	607b      	str	r3, [r7, #4]
 8001264:	68bb      	ldr	r3, [r7, #8]
 8001266:	2b00      	cmp	r3, #0
 8001268:	d00c      	beq.n	8001284 <SystemCoreClockUpdate+0x78>
 800126a:	4a24      	ldr	r2, [pc, #144]	; (80012fc <SystemCoreClockUpdate+0xf0>)
 800126c:	687b      	ldr	r3, [r7, #4]
 800126e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001272:	4a1f      	ldr	r2, [pc, #124]	; (80012f0 <SystemCoreClockUpdate+0xe4>)
 8001274:	6852      	ldr	r2, [r2, #4]
 8001276:	0992      	lsrs	r2, r2, #6
 8001278:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800127c:	fb02 f303 	mul.w	r3, r2, r3
 8001280:	617b      	str	r3, [r7, #20]
 8001282:	e00b      	b.n	800129c <SystemCoreClockUpdate+0x90>
 8001284:	4a1c      	ldr	r2, [pc, #112]	; (80012f8 <SystemCoreClockUpdate+0xec>)
 8001286:	687b      	ldr	r3, [r7, #4]
 8001288:	fbb2 f3f3 	udiv	r3, r2, r3
 800128c:	4a18      	ldr	r2, [pc, #96]	; (80012f0 <SystemCoreClockUpdate+0xe4>)
 800128e:	6852      	ldr	r2, [r2, #4]
 8001290:	0992      	lsrs	r2, r2, #6
 8001292:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001296:	fb02 f303 	mul.w	r3, r2, r3
 800129a:	617b      	str	r3, [r7, #20]
 800129c:	4b14      	ldr	r3, [pc, #80]	; (80012f0 <SystemCoreClockUpdate+0xe4>)
 800129e:	685b      	ldr	r3, [r3, #4]
 80012a0:	0c1b      	lsrs	r3, r3, #16
 80012a2:	f003 0303 	and.w	r3, r3, #3
 80012a6:	3301      	adds	r3, #1
 80012a8:	005b      	lsls	r3, r3, #1
 80012aa:	60fb      	str	r3, [r7, #12]
 80012ac:	697a      	ldr	r2, [r7, #20]
 80012ae:	68fb      	ldr	r3, [r7, #12]
 80012b0:	fbb2 f3f3 	udiv	r3, r2, r3
 80012b4:	4a0f      	ldr	r2, [pc, #60]	; (80012f4 <SystemCoreClockUpdate+0xe8>)
 80012b6:	6013      	str	r3, [r2, #0]
 80012b8:	e003      	b.n	80012c2 <SystemCoreClockUpdate+0xb6>
 80012ba:	4b0e      	ldr	r3, [pc, #56]	; (80012f4 <SystemCoreClockUpdate+0xe8>)
 80012bc:	4a0e      	ldr	r2, [pc, #56]	; (80012f8 <SystemCoreClockUpdate+0xec>)
 80012be:	601a      	str	r2, [r3, #0]
 80012c0:	bf00      	nop
 80012c2:	4b0b      	ldr	r3, [pc, #44]	; (80012f0 <SystemCoreClockUpdate+0xe4>)
 80012c4:	689b      	ldr	r3, [r3, #8]
 80012c6:	091b      	lsrs	r3, r3, #4
 80012c8:	f003 030f 	and.w	r3, r3, #15
 80012cc:	4a0c      	ldr	r2, [pc, #48]	; (8001300 <SystemCoreClockUpdate+0xf4>)
 80012ce:	5cd3      	ldrb	r3, [r2, r3]
 80012d0:	b2db      	uxtb	r3, r3
 80012d2:	613b      	str	r3, [r7, #16]
 80012d4:	4b07      	ldr	r3, [pc, #28]	; (80012f4 <SystemCoreClockUpdate+0xe8>)
 80012d6:	681a      	ldr	r2, [r3, #0]
 80012d8:	693b      	ldr	r3, [r7, #16]
 80012da:	fa22 f303 	lsr.w	r3, r2, r3
 80012de:	4a05      	ldr	r2, [pc, #20]	; (80012f4 <SystemCoreClockUpdate+0xe8>)
 80012e0:	6013      	str	r3, [r2, #0]
 80012e2:	bf00      	nop
 80012e4:	371c      	adds	r7, #28
 80012e6:	46bd      	mov	sp, r7
 80012e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012ec:	4770      	bx	lr
 80012ee:	bf00      	nop
 80012f0:	40023800 	.word	0x40023800
 80012f4:	20000004 	.word	0x20000004
 80012f8:	00f42400 	.word	0x00f42400
 80012fc:	017d7840 	.word	0x017d7840
 8001300:	20000008 	.word	0x20000008

08001304 <SetSysClock>:
 8001304:	b480      	push	{r7}
 8001306:	af00      	add	r7, sp, #0
 8001308:	4b22      	ldr	r3, [pc, #136]	; (8001394 <SetSysClock+0x90>)
 800130a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800130c:	4a21      	ldr	r2, [pc, #132]	; (8001394 <SetSysClock+0x90>)
 800130e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001312:	6413      	str	r3, [r2, #64]	; 0x40
 8001314:	4b20      	ldr	r3, [pc, #128]	; (8001398 <SetSysClock+0x94>)
 8001316:	681b      	ldr	r3, [r3, #0]
 8001318:	4a1f      	ldr	r2, [pc, #124]	; (8001398 <SetSysClock+0x94>)
 800131a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800131e:	6013      	str	r3, [r2, #0]
 8001320:	4b1c      	ldr	r3, [pc, #112]	; (8001394 <SetSysClock+0x90>)
 8001322:	4a1c      	ldr	r2, [pc, #112]	; (8001394 <SetSysClock+0x90>)
 8001324:	689b      	ldr	r3, [r3, #8]
 8001326:	6093      	str	r3, [r2, #8]
 8001328:	4b1a      	ldr	r3, [pc, #104]	; (8001394 <SetSysClock+0x90>)
 800132a:	4a1a      	ldr	r2, [pc, #104]	; (8001394 <SetSysClock+0x90>)
 800132c:	689b      	ldr	r3, [r3, #8]
 800132e:	6093      	str	r3, [r2, #8]
 8001330:	4b18      	ldr	r3, [pc, #96]	; (8001394 <SetSysClock+0x90>)
 8001332:	689b      	ldr	r3, [r3, #8]
 8001334:	4a17      	ldr	r2, [pc, #92]	; (8001394 <SetSysClock+0x90>)
 8001336:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800133a:	6093      	str	r3, [r2, #8]
 800133c:	4b15      	ldr	r3, [pc, #84]	; (8001394 <SetSysClock+0x90>)
 800133e:	4a17      	ldr	r2, [pc, #92]	; (800139c <SetSysClock+0x98>)
 8001340:	605a      	str	r2, [r3, #4]
 8001342:	4b14      	ldr	r3, [pc, #80]	; (8001394 <SetSysClock+0x90>)
 8001344:	681b      	ldr	r3, [r3, #0]
 8001346:	4a13      	ldr	r2, [pc, #76]	; (8001394 <SetSysClock+0x90>)
 8001348:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800134c:	6013      	str	r3, [r2, #0]
 800134e:	bf00      	nop
 8001350:	4b10      	ldr	r3, [pc, #64]	; (8001394 <SetSysClock+0x90>)
 8001352:	681b      	ldr	r3, [r3, #0]
 8001354:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001358:	2b00      	cmp	r3, #0
 800135a:	d0f9      	beq.n	8001350 <SetSysClock+0x4c>
 800135c:	4b10      	ldr	r3, [pc, #64]	; (80013a0 <SetSysClock+0x9c>)
 800135e:	f240 6202 	movw	r2, #1538	; 0x602
 8001362:	601a      	str	r2, [r3, #0]
 8001364:	4b0b      	ldr	r3, [pc, #44]	; (8001394 <SetSysClock+0x90>)
 8001366:	689b      	ldr	r3, [r3, #8]
 8001368:	4a0a      	ldr	r2, [pc, #40]	; (8001394 <SetSysClock+0x90>)
 800136a:	f023 0303 	bic.w	r3, r3, #3
 800136e:	6093      	str	r3, [r2, #8]
 8001370:	4b08      	ldr	r3, [pc, #32]	; (8001394 <SetSysClock+0x90>)
 8001372:	689b      	ldr	r3, [r3, #8]
 8001374:	4a07      	ldr	r2, [pc, #28]	; (8001394 <SetSysClock+0x90>)
 8001376:	f043 0302 	orr.w	r3, r3, #2
 800137a:	6093      	str	r3, [r2, #8]
 800137c:	bf00      	nop
 800137e:	4b05      	ldr	r3, [pc, #20]	; (8001394 <SetSysClock+0x90>)
 8001380:	689b      	ldr	r3, [r3, #8]
 8001382:	f003 030c 	and.w	r3, r3, #12
 8001386:	2b08      	cmp	r3, #8
 8001388:	d1f9      	bne.n	800137e <SetSysClock+0x7a>
 800138a:	bf00      	nop
 800138c:	46bd      	mov	sp, r7
 800138e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001392:	4770      	bx	lr
 8001394:	40023800 	.word	0x40023800
 8001398:	40007000 	.word	0x40007000
 800139c:	08015410 	.word	0x08015410
 80013a0:	40023c00 	.word	0x40023c00

080013a4 <NVIC_PriorityGroupConfig>:
 80013a4:	b480      	push	{r7}
 80013a6:	b083      	sub	sp, #12
 80013a8:	af00      	add	r7, sp, #0
 80013aa:	6078      	str	r0, [r7, #4]
 80013ac:	4a06      	ldr	r2, [pc, #24]	; (80013c8 <NVIC_PriorityGroupConfig+0x24>)
 80013ae:	687b      	ldr	r3, [r7, #4]
 80013b0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80013b4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80013b8:	60d3      	str	r3, [r2, #12]
 80013ba:	bf00      	nop
 80013bc:	370c      	adds	r7, #12
 80013be:	46bd      	mov	sp, r7
 80013c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013c4:	4770      	bx	lr
 80013c6:	bf00      	nop
 80013c8:	e000ed00 	.word	0xe000ed00

080013cc <NVIC_Init>:
 80013cc:	b480      	push	{r7}
 80013ce:	b085      	sub	sp, #20
 80013d0:	af00      	add	r7, sp, #0
 80013d2:	6078      	str	r0, [r7, #4]
 80013d4:	2300      	movs	r3, #0
 80013d6:	73fb      	strb	r3, [r7, #15]
 80013d8:	2300      	movs	r3, #0
 80013da:	73bb      	strb	r3, [r7, #14]
 80013dc:	230f      	movs	r3, #15
 80013de:	737b      	strb	r3, [r7, #13]
 80013e0:	687b      	ldr	r3, [r7, #4]
 80013e2:	78db      	ldrb	r3, [r3, #3]
 80013e4:	2b00      	cmp	r3, #0
 80013e6:	d039      	beq.n	800145c <NVIC_Init+0x90>
 80013e8:	4b27      	ldr	r3, [pc, #156]	; (8001488 <NVIC_Init+0xbc>)
 80013ea:	68db      	ldr	r3, [r3, #12]
 80013ec:	43db      	mvns	r3, r3
 80013ee:	0a1b      	lsrs	r3, r3, #8
 80013f0:	b2db      	uxtb	r3, r3
 80013f2:	f003 0307 	and.w	r3, r3, #7
 80013f6:	73fb      	strb	r3, [r7, #15]
 80013f8:	7bfb      	ldrb	r3, [r7, #15]
 80013fa:	f1c3 0304 	rsb	r3, r3, #4
 80013fe:	73bb      	strb	r3, [r7, #14]
 8001400:	7b7a      	ldrb	r2, [r7, #13]
 8001402:	7bfb      	ldrb	r3, [r7, #15]
 8001404:	fa42 f303 	asr.w	r3, r2, r3
 8001408:	737b      	strb	r3, [r7, #13]
 800140a:	687b      	ldr	r3, [r7, #4]
 800140c:	785b      	ldrb	r3, [r3, #1]
 800140e:	461a      	mov	r2, r3
 8001410:	7bbb      	ldrb	r3, [r7, #14]
 8001412:	fa02 f303 	lsl.w	r3, r2, r3
 8001416:	73fb      	strb	r3, [r7, #15]
 8001418:	687b      	ldr	r3, [r7, #4]
 800141a:	789a      	ldrb	r2, [r3, #2]
 800141c:	7b7b      	ldrb	r3, [r7, #13]
 800141e:	4013      	ands	r3, r2
 8001420:	b2da      	uxtb	r2, r3
 8001422:	7bfb      	ldrb	r3, [r7, #15]
 8001424:	4313      	orrs	r3, r2
 8001426:	73fb      	strb	r3, [r7, #15]
 8001428:	7bfb      	ldrb	r3, [r7, #15]
 800142a:	011b      	lsls	r3, r3, #4
 800142c:	73fb      	strb	r3, [r7, #15]
 800142e:	4a17      	ldr	r2, [pc, #92]	; (800148c <NVIC_Init+0xc0>)
 8001430:	687b      	ldr	r3, [r7, #4]
 8001432:	781b      	ldrb	r3, [r3, #0]
 8001434:	4413      	add	r3, r2
 8001436:	7bfa      	ldrb	r2, [r7, #15]
 8001438:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 800143c:	687b      	ldr	r3, [r7, #4]
 800143e:	781b      	ldrb	r3, [r3, #0]
 8001440:	f003 031f 	and.w	r3, r3, #31
 8001444:	4911      	ldr	r1, [pc, #68]	; (800148c <NVIC_Init+0xc0>)
 8001446:	687a      	ldr	r2, [r7, #4]
 8001448:	7812      	ldrb	r2, [r2, #0]
 800144a:	0952      	lsrs	r2, r2, #5
 800144c:	b2d2      	uxtb	r2, r2
 800144e:	4610      	mov	r0, r2
 8001450:	2201      	movs	r2, #1
 8001452:	fa02 f303 	lsl.w	r3, r2, r3
 8001456:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
 800145a:	e00f      	b.n	800147c <NVIC_Init+0xb0>
 800145c:	687b      	ldr	r3, [r7, #4]
 800145e:	781b      	ldrb	r3, [r3, #0]
 8001460:	f003 031f 	and.w	r3, r3, #31
 8001464:	4909      	ldr	r1, [pc, #36]	; (800148c <NVIC_Init+0xc0>)
 8001466:	687a      	ldr	r2, [r7, #4]
 8001468:	7812      	ldrb	r2, [r2, #0]
 800146a:	0952      	lsrs	r2, r2, #5
 800146c:	b2d2      	uxtb	r2, r2
 800146e:	4610      	mov	r0, r2
 8001470:	2201      	movs	r2, #1
 8001472:	409a      	lsls	r2, r3
 8001474:	f100 0320 	add.w	r3, r0, #32
 8001478:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800147c:	bf00      	nop
 800147e:	3714      	adds	r7, #20
 8001480:	46bd      	mov	sp, r7
 8001482:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001486:	4770      	bx	lr
 8001488:	e000ed00 	.word	0xe000ed00
 800148c:	e000e100 	.word	0xe000e100

08001490 <GPIO_Init>:
 8001490:	b480      	push	{r7}
 8001492:	b087      	sub	sp, #28
 8001494:	af00      	add	r7, sp, #0
 8001496:	6078      	str	r0, [r7, #4]
 8001498:	6039      	str	r1, [r7, #0]
 800149a:	2300      	movs	r3, #0
 800149c:	617b      	str	r3, [r7, #20]
 800149e:	2300      	movs	r3, #0
 80014a0:	613b      	str	r3, [r7, #16]
 80014a2:	2300      	movs	r3, #0
 80014a4:	60fb      	str	r3, [r7, #12]
 80014a6:	2300      	movs	r3, #0
 80014a8:	617b      	str	r3, [r7, #20]
 80014aa:	e076      	b.n	800159a <GPIO_Init+0x10a>
 80014ac:	2201      	movs	r2, #1
 80014ae:	697b      	ldr	r3, [r7, #20]
 80014b0:	fa02 f303 	lsl.w	r3, r2, r3
 80014b4:	613b      	str	r3, [r7, #16]
 80014b6:	683b      	ldr	r3, [r7, #0]
 80014b8:	681b      	ldr	r3, [r3, #0]
 80014ba:	693a      	ldr	r2, [r7, #16]
 80014bc:	4013      	ands	r3, r2
 80014be:	60fb      	str	r3, [r7, #12]
 80014c0:	68fa      	ldr	r2, [r7, #12]
 80014c2:	693b      	ldr	r3, [r7, #16]
 80014c4:	429a      	cmp	r2, r3
 80014c6:	d165      	bne.n	8001594 <GPIO_Init+0x104>
 80014c8:	687b      	ldr	r3, [r7, #4]
 80014ca:	681a      	ldr	r2, [r3, #0]
 80014cc:	697b      	ldr	r3, [r7, #20]
 80014ce:	005b      	lsls	r3, r3, #1
 80014d0:	2103      	movs	r1, #3
 80014d2:	fa01 f303 	lsl.w	r3, r1, r3
 80014d6:	43db      	mvns	r3, r3
 80014d8:	401a      	ands	r2, r3
 80014da:	687b      	ldr	r3, [r7, #4]
 80014dc:	601a      	str	r2, [r3, #0]
 80014de:	687b      	ldr	r3, [r7, #4]
 80014e0:	681a      	ldr	r2, [r3, #0]
 80014e2:	683b      	ldr	r3, [r7, #0]
 80014e4:	791b      	ldrb	r3, [r3, #4]
 80014e6:	4619      	mov	r1, r3
 80014e8:	697b      	ldr	r3, [r7, #20]
 80014ea:	005b      	lsls	r3, r3, #1
 80014ec:	fa01 f303 	lsl.w	r3, r1, r3
 80014f0:	431a      	orrs	r2, r3
 80014f2:	687b      	ldr	r3, [r7, #4]
 80014f4:	601a      	str	r2, [r3, #0]
 80014f6:	683b      	ldr	r3, [r7, #0]
 80014f8:	791b      	ldrb	r3, [r3, #4]
 80014fa:	2b01      	cmp	r3, #1
 80014fc:	d003      	beq.n	8001506 <GPIO_Init+0x76>
 80014fe:	683b      	ldr	r3, [r7, #0]
 8001500:	791b      	ldrb	r3, [r3, #4]
 8001502:	2b02      	cmp	r3, #2
 8001504:	d12e      	bne.n	8001564 <GPIO_Init+0xd4>
 8001506:	687b      	ldr	r3, [r7, #4]
 8001508:	689a      	ldr	r2, [r3, #8]
 800150a:	697b      	ldr	r3, [r7, #20]
 800150c:	005b      	lsls	r3, r3, #1
 800150e:	2103      	movs	r1, #3
 8001510:	fa01 f303 	lsl.w	r3, r1, r3
 8001514:	43db      	mvns	r3, r3
 8001516:	401a      	ands	r2, r3
 8001518:	687b      	ldr	r3, [r7, #4]
 800151a:	609a      	str	r2, [r3, #8]
 800151c:	687b      	ldr	r3, [r7, #4]
 800151e:	689a      	ldr	r2, [r3, #8]
 8001520:	683b      	ldr	r3, [r7, #0]
 8001522:	795b      	ldrb	r3, [r3, #5]
 8001524:	4619      	mov	r1, r3
 8001526:	697b      	ldr	r3, [r7, #20]
 8001528:	005b      	lsls	r3, r3, #1
 800152a:	fa01 f303 	lsl.w	r3, r1, r3
 800152e:	431a      	orrs	r2, r3
 8001530:	687b      	ldr	r3, [r7, #4]
 8001532:	609a      	str	r2, [r3, #8]
 8001534:	687b      	ldr	r3, [r7, #4]
 8001536:	685a      	ldr	r2, [r3, #4]
 8001538:	697b      	ldr	r3, [r7, #20]
 800153a:	b29b      	uxth	r3, r3
 800153c:	4619      	mov	r1, r3
 800153e:	2301      	movs	r3, #1
 8001540:	408b      	lsls	r3, r1
 8001542:	43db      	mvns	r3, r3
 8001544:	401a      	ands	r2, r3
 8001546:	687b      	ldr	r3, [r7, #4]
 8001548:	605a      	str	r2, [r3, #4]
 800154a:	687b      	ldr	r3, [r7, #4]
 800154c:	685b      	ldr	r3, [r3, #4]
 800154e:	683a      	ldr	r2, [r7, #0]
 8001550:	7992      	ldrb	r2, [r2, #6]
 8001552:	4611      	mov	r1, r2
 8001554:	697a      	ldr	r2, [r7, #20]
 8001556:	b292      	uxth	r2, r2
 8001558:	fa01 f202 	lsl.w	r2, r1, r2
 800155c:	b292      	uxth	r2, r2
 800155e:	431a      	orrs	r2, r3
 8001560:	687b      	ldr	r3, [r7, #4]
 8001562:	605a      	str	r2, [r3, #4]
 8001564:	687b      	ldr	r3, [r7, #4]
 8001566:	68da      	ldr	r2, [r3, #12]
 8001568:	697b      	ldr	r3, [r7, #20]
 800156a:	b29b      	uxth	r3, r3
 800156c:	005b      	lsls	r3, r3, #1
 800156e:	2103      	movs	r1, #3
 8001570:	fa01 f303 	lsl.w	r3, r1, r3
 8001574:	43db      	mvns	r3, r3
 8001576:	401a      	ands	r2, r3
 8001578:	687b      	ldr	r3, [r7, #4]
 800157a:	60da      	str	r2, [r3, #12]
 800157c:	687b      	ldr	r3, [r7, #4]
 800157e:	68da      	ldr	r2, [r3, #12]
 8001580:	683b      	ldr	r3, [r7, #0]
 8001582:	79db      	ldrb	r3, [r3, #7]
 8001584:	4619      	mov	r1, r3
 8001586:	697b      	ldr	r3, [r7, #20]
 8001588:	005b      	lsls	r3, r3, #1
 800158a:	fa01 f303 	lsl.w	r3, r1, r3
 800158e:	431a      	orrs	r2, r3
 8001590:	687b      	ldr	r3, [r7, #4]
 8001592:	60da      	str	r2, [r3, #12]
 8001594:	697b      	ldr	r3, [r7, #20]
 8001596:	3301      	adds	r3, #1
 8001598:	617b      	str	r3, [r7, #20]
 800159a:	697b      	ldr	r3, [r7, #20]
 800159c:	2b0f      	cmp	r3, #15
 800159e:	d985      	bls.n	80014ac <GPIO_Init+0x1c>
 80015a0:	bf00      	nop
 80015a2:	371c      	adds	r7, #28
 80015a4:	46bd      	mov	sp, r7
 80015a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015aa:	4770      	bx	lr

080015ac <GPIO_ReadInputDataBit>:
 80015ac:	b480      	push	{r7}
 80015ae:	b085      	sub	sp, #20
 80015b0:	af00      	add	r7, sp, #0
 80015b2:	6078      	str	r0, [r7, #4]
 80015b4:	460b      	mov	r3, r1
 80015b6:	807b      	strh	r3, [r7, #2]
 80015b8:	2300      	movs	r3, #0
 80015ba:	73fb      	strb	r3, [r7, #15]
 80015bc:	687b      	ldr	r3, [r7, #4]
 80015be:	691a      	ldr	r2, [r3, #16]
 80015c0:	887b      	ldrh	r3, [r7, #2]
 80015c2:	4013      	ands	r3, r2
 80015c4:	2b00      	cmp	r3, #0
 80015c6:	d002      	beq.n	80015ce <GPIO_ReadInputDataBit+0x22>
 80015c8:	2301      	movs	r3, #1
 80015ca:	73fb      	strb	r3, [r7, #15]
 80015cc:	e001      	b.n	80015d2 <GPIO_ReadInputDataBit+0x26>
 80015ce:	2300      	movs	r3, #0
 80015d0:	73fb      	strb	r3, [r7, #15]
 80015d2:	7bfb      	ldrb	r3, [r7, #15]
 80015d4:	4618      	mov	r0, r3
 80015d6:	3714      	adds	r7, #20
 80015d8:	46bd      	mov	sp, r7
 80015da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015de:	4770      	bx	lr

080015e0 <GPIO_WriteBit>:
 80015e0:	b480      	push	{r7}
 80015e2:	b083      	sub	sp, #12
 80015e4:	af00      	add	r7, sp, #0
 80015e6:	6078      	str	r0, [r7, #4]
 80015e8:	460b      	mov	r3, r1
 80015ea:	807b      	strh	r3, [r7, #2]
 80015ec:	4613      	mov	r3, r2
 80015ee:	707b      	strb	r3, [r7, #1]
 80015f0:	787b      	ldrb	r3, [r7, #1]
 80015f2:	2b00      	cmp	r3, #0
 80015f4:	d003      	beq.n	80015fe <GPIO_WriteBit+0x1e>
 80015f6:	687b      	ldr	r3, [r7, #4]
 80015f8:	887a      	ldrh	r2, [r7, #2]
 80015fa:	831a      	strh	r2, [r3, #24]
 80015fc:	e002      	b.n	8001604 <GPIO_WriteBit+0x24>
 80015fe:	687b      	ldr	r3, [r7, #4]
 8001600:	887a      	ldrh	r2, [r7, #2]
 8001602:	835a      	strh	r2, [r3, #26]
 8001604:	bf00      	nop
 8001606:	370c      	adds	r7, #12
 8001608:	46bd      	mov	sp, r7
 800160a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800160e:	4770      	bx	lr

08001610 <GPIO_PinAFConfig>:
 8001610:	b480      	push	{r7}
 8001612:	b085      	sub	sp, #20
 8001614:	af00      	add	r7, sp, #0
 8001616:	6078      	str	r0, [r7, #4]
 8001618:	460b      	mov	r3, r1
 800161a:	807b      	strh	r3, [r7, #2]
 800161c:	4613      	mov	r3, r2
 800161e:	707b      	strb	r3, [r7, #1]
 8001620:	2300      	movs	r3, #0
 8001622:	60fb      	str	r3, [r7, #12]
 8001624:	2300      	movs	r3, #0
 8001626:	60bb      	str	r3, [r7, #8]
 8001628:	787a      	ldrb	r2, [r7, #1]
 800162a:	887b      	ldrh	r3, [r7, #2]
 800162c:	f003 0307 	and.w	r3, r3, #7
 8001630:	009b      	lsls	r3, r3, #2
 8001632:	fa02 f303 	lsl.w	r3, r2, r3
 8001636:	60fb      	str	r3, [r7, #12]
 8001638:	887b      	ldrh	r3, [r7, #2]
 800163a:	08db      	lsrs	r3, r3, #3
 800163c:	b29b      	uxth	r3, r3
 800163e:	461a      	mov	r2, r3
 8001640:	687b      	ldr	r3, [r7, #4]
 8001642:	3208      	adds	r2, #8
 8001644:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8001648:	887b      	ldrh	r3, [r7, #2]
 800164a:	f003 0307 	and.w	r3, r3, #7
 800164e:	009b      	lsls	r3, r3, #2
 8001650:	210f      	movs	r1, #15
 8001652:	fa01 f303 	lsl.w	r3, r1, r3
 8001656:	43db      	mvns	r3, r3
 8001658:	8879      	ldrh	r1, [r7, #2]
 800165a:	08c9      	lsrs	r1, r1, #3
 800165c:	b289      	uxth	r1, r1
 800165e:	4608      	mov	r0, r1
 8001660:	ea02 0103 	and.w	r1, r2, r3
 8001664:	687b      	ldr	r3, [r7, #4]
 8001666:	f100 0208 	add.w	r2, r0, #8
 800166a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800166e:	887b      	ldrh	r3, [r7, #2]
 8001670:	08db      	lsrs	r3, r3, #3
 8001672:	b29b      	uxth	r3, r3
 8001674:	461a      	mov	r2, r3
 8001676:	687b      	ldr	r3, [r7, #4]
 8001678:	3208      	adds	r2, #8
 800167a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800167e:	68fa      	ldr	r2, [r7, #12]
 8001680:	4313      	orrs	r3, r2
 8001682:	60bb      	str	r3, [r7, #8]
 8001684:	887b      	ldrh	r3, [r7, #2]
 8001686:	08db      	lsrs	r3, r3, #3
 8001688:	b29b      	uxth	r3, r3
 800168a:	461a      	mov	r2, r3
 800168c:	687b      	ldr	r3, [r7, #4]
 800168e:	3208      	adds	r2, #8
 8001690:	68b9      	ldr	r1, [r7, #8]
 8001692:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001696:	bf00      	nop
 8001698:	3714      	adds	r7, #20
 800169a:	46bd      	mov	sp, r7
 800169c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016a0:	4770      	bx	lr
	...

080016a4 <RCC_GetClocksFreq>:
 80016a4:	b480      	push	{r7}
 80016a6:	b089      	sub	sp, #36	; 0x24
 80016a8:	af00      	add	r7, sp, #0
 80016aa:	6078      	str	r0, [r7, #4]
 80016ac:	2300      	movs	r3, #0
 80016ae:	61bb      	str	r3, [r7, #24]
 80016b0:	2300      	movs	r3, #0
 80016b2:	617b      	str	r3, [r7, #20]
 80016b4:	2300      	movs	r3, #0
 80016b6:	61fb      	str	r3, [r7, #28]
 80016b8:	2302      	movs	r3, #2
 80016ba:	613b      	str	r3, [r7, #16]
 80016bc:	2300      	movs	r3, #0
 80016be:	60fb      	str	r3, [r7, #12]
 80016c0:	2302      	movs	r3, #2
 80016c2:	60bb      	str	r3, [r7, #8]
 80016c4:	4b47      	ldr	r3, [pc, #284]	; (80017e4 <RCC_GetClocksFreq+0x140>)
 80016c6:	689b      	ldr	r3, [r3, #8]
 80016c8:	f003 030c 	and.w	r3, r3, #12
 80016cc:	61bb      	str	r3, [r7, #24]
 80016ce:	69bb      	ldr	r3, [r7, #24]
 80016d0:	2b04      	cmp	r3, #4
 80016d2:	d007      	beq.n	80016e4 <RCC_GetClocksFreq+0x40>
 80016d4:	2b08      	cmp	r3, #8
 80016d6:	d009      	beq.n	80016ec <RCC_GetClocksFreq+0x48>
 80016d8:	2b00      	cmp	r3, #0
 80016da:	d13d      	bne.n	8001758 <RCC_GetClocksFreq+0xb4>
 80016dc:	687b      	ldr	r3, [r7, #4]
 80016de:	4a42      	ldr	r2, [pc, #264]	; (80017e8 <RCC_GetClocksFreq+0x144>)
 80016e0:	601a      	str	r2, [r3, #0]
 80016e2:	e03d      	b.n	8001760 <RCC_GetClocksFreq+0xbc>
 80016e4:	687b      	ldr	r3, [r7, #4]
 80016e6:	4a41      	ldr	r2, [pc, #260]	; (80017ec <RCC_GetClocksFreq+0x148>)
 80016e8:	601a      	str	r2, [r3, #0]
 80016ea:	e039      	b.n	8001760 <RCC_GetClocksFreq+0xbc>
 80016ec:	4b3d      	ldr	r3, [pc, #244]	; (80017e4 <RCC_GetClocksFreq+0x140>)
 80016ee:	685b      	ldr	r3, [r3, #4]
 80016f0:	0d9b      	lsrs	r3, r3, #22
 80016f2:	f003 0301 	and.w	r3, r3, #1
 80016f6:	60fb      	str	r3, [r7, #12]
 80016f8:	4b3a      	ldr	r3, [pc, #232]	; (80017e4 <RCC_GetClocksFreq+0x140>)
 80016fa:	685b      	ldr	r3, [r3, #4]
 80016fc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8001700:	60bb      	str	r3, [r7, #8]
 8001702:	68fb      	ldr	r3, [r7, #12]
 8001704:	2b00      	cmp	r3, #0
 8001706:	d00c      	beq.n	8001722 <RCC_GetClocksFreq+0x7e>
 8001708:	4a38      	ldr	r2, [pc, #224]	; (80017ec <RCC_GetClocksFreq+0x148>)
 800170a:	68bb      	ldr	r3, [r7, #8]
 800170c:	fbb2 f3f3 	udiv	r3, r2, r3
 8001710:	4a34      	ldr	r2, [pc, #208]	; (80017e4 <RCC_GetClocksFreq+0x140>)
 8001712:	6852      	ldr	r2, [r2, #4]
 8001714:	0992      	lsrs	r2, r2, #6
 8001716:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800171a:	fb02 f303 	mul.w	r3, r2, r3
 800171e:	61fb      	str	r3, [r7, #28]
 8001720:	e00b      	b.n	800173a <RCC_GetClocksFreq+0x96>
 8001722:	4a31      	ldr	r2, [pc, #196]	; (80017e8 <RCC_GetClocksFreq+0x144>)
 8001724:	68bb      	ldr	r3, [r7, #8]
 8001726:	fbb2 f3f3 	udiv	r3, r2, r3
 800172a:	4a2e      	ldr	r2, [pc, #184]	; (80017e4 <RCC_GetClocksFreq+0x140>)
 800172c:	6852      	ldr	r2, [r2, #4]
 800172e:	0992      	lsrs	r2, r2, #6
 8001730:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001734:	fb02 f303 	mul.w	r3, r2, r3
 8001738:	61fb      	str	r3, [r7, #28]
 800173a:	4b2a      	ldr	r3, [pc, #168]	; (80017e4 <RCC_GetClocksFreq+0x140>)
 800173c:	685b      	ldr	r3, [r3, #4]
 800173e:	0c1b      	lsrs	r3, r3, #16
 8001740:	f003 0303 	and.w	r3, r3, #3
 8001744:	3301      	adds	r3, #1
 8001746:	005b      	lsls	r3, r3, #1
 8001748:	613b      	str	r3, [r7, #16]
 800174a:	69fa      	ldr	r2, [r7, #28]
 800174c:	693b      	ldr	r3, [r7, #16]
 800174e:	fbb2 f2f3 	udiv	r2, r2, r3
 8001752:	687b      	ldr	r3, [r7, #4]
 8001754:	601a      	str	r2, [r3, #0]
 8001756:	e003      	b.n	8001760 <RCC_GetClocksFreq+0xbc>
 8001758:	687b      	ldr	r3, [r7, #4]
 800175a:	4a23      	ldr	r2, [pc, #140]	; (80017e8 <RCC_GetClocksFreq+0x144>)
 800175c:	601a      	str	r2, [r3, #0]
 800175e:	bf00      	nop
 8001760:	4b20      	ldr	r3, [pc, #128]	; (80017e4 <RCC_GetClocksFreq+0x140>)
 8001762:	689b      	ldr	r3, [r3, #8]
 8001764:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8001768:	61bb      	str	r3, [r7, #24]
 800176a:	69bb      	ldr	r3, [r7, #24]
 800176c:	091b      	lsrs	r3, r3, #4
 800176e:	61bb      	str	r3, [r7, #24]
 8001770:	4a1f      	ldr	r2, [pc, #124]	; (80017f0 <RCC_GetClocksFreq+0x14c>)
 8001772:	69bb      	ldr	r3, [r7, #24]
 8001774:	4413      	add	r3, r2
 8001776:	781b      	ldrb	r3, [r3, #0]
 8001778:	b2db      	uxtb	r3, r3
 800177a:	617b      	str	r3, [r7, #20]
 800177c:	687b      	ldr	r3, [r7, #4]
 800177e:	681a      	ldr	r2, [r3, #0]
 8001780:	697b      	ldr	r3, [r7, #20]
 8001782:	40da      	lsrs	r2, r3
 8001784:	687b      	ldr	r3, [r7, #4]
 8001786:	605a      	str	r2, [r3, #4]
 8001788:	4b16      	ldr	r3, [pc, #88]	; (80017e4 <RCC_GetClocksFreq+0x140>)
 800178a:	689b      	ldr	r3, [r3, #8]
 800178c:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8001790:	61bb      	str	r3, [r7, #24]
 8001792:	69bb      	ldr	r3, [r7, #24]
 8001794:	0a9b      	lsrs	r3, r3, #10
 8001796:	61bb      	str	r3, [r7, #24]
 8001798:	4a15      	ldr	r2, [pc, #84]	; (80017f0 <RCC_GetClocksFreq+0x14c>)
 800179a:	69bb      	ldr	r3, [r7, #24]
 800179c:	4413      	add	r3, r2
 800179e:	781b      	ldrb	r3, [r3, #0]
 80017a0:	b2db      	uxtb	r3, r3
 80017a2:	617b      	str	r3, [r7, #20]
 80017a4:	687b      	ldr	r3, [r7, #4]
 80017a6:	685a      	ldr	r2, [r3, #4]
 80017a8:	697b      	ldr	r3, [r7, #20]
 80017aa:	40da      	lsrs	r2, r3
 80017ac:	687b      	ldr	r3, [r7, #4]
 80017ae:	609a      	str	r2, [r3, #8]
 80017b0:	4b0c      	ldr	r3, [pc, #48]	; (80017e4 <RCC_GetClocksFreq+0x140>)
 80017b2:	689b      	ldr	r3, [r3, #8]
 80017b4:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 80017b8:	61bb      	str	r3, [r7, #24]
 80017ba:	69bb      	ldr	r3, [r7, #24]
 80017bc:	0b5b      	lsrs	r3, r3, #13
 80017be:	61bb      	str	r3, [r7, #24]
 80017c0:	4a0b      	ldr	r2, [pc, #44]	; (80017f0 <RCC_GetClocksFreq+0x14c>)
 80017c2:	69bb      	ldr	r3, [r7, #24]
 80017c4:	4413      	add	r3, r2
 80017c6:	781b      	ldrb	r3, [r3, #0]
 80017c8:	b2db      	uxtb	r3, r3
 80017ca:	617b      	str	r3, [r7, #20]
 80017cc:	687b      	ldr	r3, [r7, #4]
 80017ce:	685a      	ldr	r2, [r3, #4]
 80017d0:	697b      	ldr	r3, [r7, #20]
 80017d2:	40da      	lsrs	r2, r3
 80017d4:	687b      	ldr	r3, [r7, #4]
 80017d6:	60da      	str	r2, [r3, #12]
 80017d8:	bf00      	nop
 80017da:	3724      	adds	r7, #36	; 0x24
 80017dc:	46bd      	mov	sp, r7
 80017de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017e2:	4770      	bx	lr
 80017e4:	40023800 	.word	0x40023800
 80017e8:	00f42400 	.word	0x00f42400
 80017ec:	017d7840 	.word	0x017d7840
 80017f0:	20000018 	.word	0x20000018

080017f4 <RCC_AHB1PeriphClockCmd>:
 80017f4:	b480      	push	{r7}
 80017f6:	b083      	sub	sp, #12
 80017f8:	af00      	add	r7, sp, #0
 80017fa:	6078      	str	r0, [r7, #4]
 80017fc:	460b      	mov	r3, r1
 80017fe:	70fb      	strb	r3, [r7, #3]
 8001800:	78fb      	ldrb	r3, [r7, #3]
 8001802:	2b00      	cmp	r3, #0
 8001804:	d006      	beq.n	8001814 <RCC_AHB1PeriphClockCmd+0x20>
 8001806:	4b0a      	ldr	r3, [pc, #40]	; (8001830 <RCC_AHB1PeriphClockCmd+0x3c>)
 8001808:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800180a:	4909      	ldr	r1, [pc, #36]	; (8001830 <RCC_AHB1PeriphClockCmd+0x3c>)
 800180c:	687b      	ldr	r3, [r7, #4]
 800180e:	4313      	orrs	r3, r2
 8001810:	630b      	str	r3, [r1, #48]	; 0x30
 8001812:	e006      	b.n	8001822 <RCC_AHB1PeriphClockCmd+0x2e>
 8001814:	4b06      	ldr	r3, [pc, #24]	; (8001830 <RCC_AHB1PeriphClockCmd+0x3c>)
 8001816:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001818:	687b      	ldr	r3, [r7, #4]
 800181a:	43db      	mvns	r3, r3
 800181c:	4904      	ldr	r1, [pc, #16]	; (8001830 <RCC_AHB1PeriphClockCmd+0x3c>)
 800181e:	4013      	ands	r3, r2
 8001820:	630b      	str	r3, [r1, #48]	; 0x30
 8001822:	bf00      	nop
 8001824:	370c      	adds	r7, #12
 8001826:	46bd      	mov	sp, r7
 8001828:	f85d 7b04 	ldr.w	r7, [sp], #4
 800182c:	4770      	bx	lr
 800182e:	bf00      	nop
 8001830:	40023800 	.word	0x40023800

08001834 <RCC_APB2PeriphClockCmd>:
 8001834:	b480      	push	{r7}
 8001836:	b083      	sub	sp, #12
 8001838:	af00      	add	r7, sp, #0
 800183a:	6078      	str	r0, [r7, #4]
 800183c:	460b      	mov	r3, r1
 800183e:	70fb      	strb	r3, [r7, #3]
 8001840:	78fb      	ldrb	r3, [r7, #3]
 8001842:	2b00      	cmp	r3, #0
 8001844:	d006      	beq.n	8001854 <RCC_APB2PeriphClockCmd+0x20>
 8001846:	4b0a      	ldr	r3, [pc, #40]	; (8001870 <RCC_APB2PeriphClockCmd+0x3c>)
 8001848:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800184a:	4909      	ldr	r1, [pc, #36]	; (8001870 <RCC_APB2PeriphClockCmd+0x3c>)
 800184c:	687b      	ldr	r3, [r7, #4]
 800184e:	4313      	orrs	r3, r2
 8001850:	644b      	str	r3, [r1, #68]	; 0x44
 8001852:	e006      	b.n	8001862 <RCC_APB2PeriphClockCmd+0x2e>
 8001854:	4b06      	ldr	r3, [pc, #24]	; (8001870 <RCC_APB2PeriphClockCmd+0x3c>)
 8001856:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001858:	687b      	ldr	r3, [r7, #4]
 800185a:	43db      	mvns	r3, r3
 800185c:	4904      	ldr	r1, [pc, #16]	; (8001870 <RCC_APB2PeriphClockCmd+0x3c>)
 800185e:	4013      	ands	r3, r2
 8001860:	644b      	str	r3, [r1, #68]	; 0x44
 8001862:	bf00      	nop
 8001864:	370c      	adds	r7, #12
 8001866:	46bd      	mov	sp, r7
 8001868:	f85d 7b04 	ldr.w	r7, [sp], #4
 800186c:	4770      	bx	lr
 800186e:	bf00      	nop
 8001870:	40023800 	.word	0x40023800

08001874 <USART_Init>:
 8001874:	b580      	push	{r7, lr}
 8001876:	b08a      	sub	sp, #40	; 0x28
 8001878:	af00      	add	r7, sp, #0
 800187a:	6078      	str	r0, [r7, #4]
 800187c:	6039      	str	r1, [r7, #0]
 800187e:	2300      	movs	r3, #0
 8001880:	627b      	str	r3, [r7, #36]	; 0x24
 8001882:	2300      	movs	r3, #0
 8001884:	623b      	str	r3, [r7, #32]
 8001886:	2300      	movs	r3, #0
 8001888:	61fb      	str	r3, [r7, #28]
 800188a:	2300      	movs	r3, #0
 800188c:	61bb      	str	r3, [r7, #24]
 800188e:	687b      	ldr	r3, [r7, #4]
 8001890:	8a1b      	ldrh	r3, [r3, #16]
 8001892:	b29b      	uxth	r3, r3
 8001894:	627b      	str	r3, [r7, #36]	; 0x24
 8001896:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001898:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800189c:	627b      	str	r3, [r7, #36]	; 0x24
 800189e:	683b      	ldr	r3, [r7, #0]
 80018a0:	88db      	ldrh	r3, [r3, #6]
 80018a2:	461a      	mov	r2, r3
 80018a4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018a6:	4313      	orrs	r3, r2
 80018a8:	627b      	str	r3, [r7, #36]	; 0x24
 80018aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018ac:	b29a      	uxth	r2, r3
 80018ae:	687b      	ldr	r3, [r7, #4]
 80018b0:	821a      	strh	r2, [r3, #16]
 80018b2:	687b      	ldr	r3, [r7, #4]
 80018b4:	899b      	ldrh	r3, [r3, #12]
 80018b6:	b29b      	uxth	r3, r3
 80018b8:	627b      	str	r3, [r7, #36]	; 0x24
 80018ba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018bc:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 80018c0:	f023 030c 	bic.w	r3, r3, #12
 80018c4:	627b      	str	r3, [r7, #36]	; 0x24
 80018c6:	683b      	ldr	r3, [r7, #0]
 80018c8:	889a      	ldrh	r2, [r3, #4]
 80018ca:	683b      	ldr	r3, [r7, #0]
 80018cc:	891b      	ldrh	r3, [r3, #8]
 80018ce:	4313      	orrs	r3, r2
 80018d0:	b29a      	uxth	r2, r3
 80018d2:	683b      	ldr	r3, [r7, #0]
 80018d4:	895b      	ldrh	r3, [r3, #10]
 80018d6:	4313      	orrs	r3, r2
 80018d8:	b29b      	uxth	r3, r3
 80018da:	461a      	mov	r2, r3
 80018dc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018de:	4313      	orrs	r3, r2
 80018e0:	627b      	str	r3, [r7, #36]	; 0x24
 80018e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018e4:	b29a      	uxth	r2, r3
 80018e6:	687b      	ldr	r3, [r7, #4]
 80018e8:	819a      	strh	r2, [r3, #12]
 80018ea:	687b      	ldr	r3, [r7, #4]
 80018ec:	8a9b      	ldrh	r3, [r3, #20]
 80018ee:	b29b      	uxth	r3, r3
 80018f0:	627b      	str	r3, [r7, #36]	; 0x24
 80018f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018f4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80018f8:	627b      	str	r3, [r7, #36]	; 0x24
 80018fa:	683b      	ldr	r3, [r7, #0]
 80018fc:	899b      	ldrh	r3, [r3, #12]
 80018fe:	461a      	mov	r2, r3
 8001900:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001902:	4313      	orrs	r3, r2
 8001904:	627b      	str	r3, [r7, #36]	; 0x24
 8001906:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001908:	b29a      	uxth	r2, r3
 800190a:	687b      	ldr	r3, [r7, #4]
 800190c:	829a      	strh	r2, [r3, #20]
 800190e:	f107 0308 	add.w	r3, r7, #8
 8001912:	4618      	mov	r0, r3
 8001914:	f7ff fec6 	bl	80016a4 <RCC_GetClocksFreq>
 8001918:	687b      	ldr	r3, [r7, #4]
 800191a:	4a30      	ldr	r2, [pc, #192]	; (80019dc <USART_Init+0x168>)
 800191c:	4293      	cmp	r3, r2
 800191e:	d003      	beq.n	8001928 <USART_Init+0xb4>
 8001920:	687b      	ldr	r3, [r7, #4]
 8001922:	4a2f      	ldr	r2, [pc, #188]	; (80019e0 <USART_Init+0x16c>)
 8001924:	4293      	cmp	r3, r2
 8001926:	d102      	bne.n	800192e <USART_Init+0xba>
 8001928:	697b      	ldr	r3, [r7, #20]
 800192a:	623b      	str	r3, [r7, #32]
 800192c:	e001      	b.n	8001932 <USART_Init+0xbe>
 800192e:	693b      	ldr	r3, [r7, #16]
 8001930:	623b      	str	r3, [r7, #32]
 8001932:	687b      	ldr	r3, [r7, #4]
 8001934:	899b      	ldrh	r3, [r3, #12]
 8001936:	b29b      	uxth	r3, r3
 8001938:	b21b      	sxth	r3, r3
 800193a:	2b00      	cmp	r3, #0
 800193c:	da0c      	bge.n	8001958 <USART_Init+0xe4>
 800193e:	6a3a      	ldr	r2, [r7, #32]
 8001940:	4613      	mov	r3, r2
 8001942:	009b      	lsls	r3, r3, #2
 8001944:	4413      	add	r3, r2
 8001946:	009a      	lsls	r2, r3, #2
 8001948:	441a      	add	r2, r3
 800194a:	683b      	ldr	r3, [r7, #0]
 800194c:	681b      	ldr	r3, [r3, #0]
 800194e:	005b      	lsls	r3, r3, #1
 8001950:	fbb2 f3f3 	udiv	r3, r2, r3
 8001954:	61fb      	str	r3, [r7, #28]
 8001956:	e00b      	b.n	8001970 <USART_Init+0xfc>
 8001958:	6a3a      	ldr	r2, [r7, #32]
 800195a:	4613      	mov	r3, r2
 800195c:	009b      	lsls	r3, r3, #2
 800195e:	4413      	add	r3, r2
 8001960:	009a      	lsls	r2, r3, #2
 8001962:	441a      	add	r2, r3
 8001964:	683b      	ldr	r3, [r7, #0]
 8001966:	681b      	ldr	r3, [r3, #0]
 8001968:	009b      	lsls	r3, r3, #2
 800196a:	fbb2 f3f3 	udiv	r3, r2, r3
 800196e:	61fb      	str	r3, [r7, #28]
 8001970:	69fb      	ldr	r3, [r7, #28]
 8001972:	4a1c      	ldr	r2, [pc, #112]	; (80019e4 <USART_Init+0x170>)
 8001974:	fba2 2303 	umull	r2, r3, r2, r3
 8001978:	095b      	lsrs	r3, r3, #5
 800197a:	011b      	lsls	r3, r3, #4
 800197c:	627b      	str	r3, [r7, #36]	; 0x24
 800197e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001980:	091b      	lsrs	r3, r3, #4
 8001982:	2264      	movs	r2, #100	; 0x64
 8001984:	fb02 f303 	mul.w	r3, r2, r3
 8001988:	69fa      	ldr	r2, [r7, #28]
 800198a:	1ad3      	subs	r3, r2, r3
 800198c:	61bb      	str	r3, [r7, #24]
 800198e:	687b      	ldr	r3, [r7, #4]
 8001990:	899b      	ldrh	r3, [r3, #12]
 8001992:	b29b      	uxth	r3, r3
 8001994:	b21b      	sxth	r3, r3
 8001996:	2b00      	cmp	r3, #0
 8001998:	da0c      	bge.n	80019b4 <USART_Init+0x140>
 800199a:	69bb      	ldr	r3, [r7, #24]
 800199c:	00db      	lsls	r3, r3, #3
 800199e:	3332      	adds	r3, #50	; 0x32
 80019a0:	4a10      	ldr	r2, [pc, #64]	; (80019e4 <USART_Init+0x170>)
 80019a2:	fba2 2303 	umull	r2, r3, r2, r3
 80019a6:	095b      	lsrs	r3, r3, #5
 80019a8:	f003 0307 	and.w	r3, r3, #7
 80019ac:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80019ae:	4313      	orrs	r3, r2
 80019b0:	627b      	str	r3, [r7, #36]	; 0x24
 80019b2:	e00b      	b.n	80019cc <USART_Init+0x158>
 80019b4:	69bb      	ldr	r3, [r7, #24]
 80019b6:	011b      	lsls	r3, r3, #4
 80019b8:	3332      	adds	r3, #50	; 0x32
 80019ba:	4a0a      	ldr	r2, [pc, #40]	; (80019e4 <USART_Init+0x170>)
 80019bc:	fba2 2303 	umull	r2, r3, r2, r3
 80019c0:	095b      	lsrs	r3, r3, #5
 80019c2:	f003 030f 	and.w	r3, r3, #15
 80019c6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80019c8:	4313      	orrs	r3, r2
 80019ca:	627b      	str	r3, [r7, #36]	; 0x24
 80019cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80019ce:	b29a      	uxth	r2, r3
 80019d0:	687b      	ldr	r3, [r7, #4]
 80019d2:	811a      	strh	r2, [r3, #8]
 80019d4:	bf00      	nop
 80019d6:	3728      	adds	r7, #40	; 0x28
 80019d8:	46bd      	mov	sp, r7
 80019da:	bd80      	pop	{r7, pc}
 80019dc:	40011000 	.word	0x40011000
 80019e0:	40011400 	.word	0x40011400
 80019e4:	51eb851f 	.word	0x51eb851f

080019e8 <USART_Cmd>:
 80019e8:	b480      	push	{r7}
 80019ea:	b083      	sub	sp, #12
 80019ec:	af00      	add	r7, sp, #0
 80019ee:	6078      	str	r0, [r7, #4]
 80019f0:	460b      	mov	r3, r1
 80019f2:	70fb      	strb	r3, [r7, #3]
 80019f4:	78fb      	ldrb	r3, [r7, #3]
 80019f6:	2b00      	cmp	r3, #0
 80019f8:	d008      	beq.n	8001a0c <USART_Cmd+0x24>
 80019fa:	687b      	ldr	r3, [r7, #4]
 80019fc:	899b      	ldrh	r3, [r3, #12]
 80019fe:	b29b      	uxth	r3, r3
 8001a00:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001a04:	b29a      	uxth	r2, r3
 8001a06:	687b      	ldr	r3, [r7, #4]
 8001a08:	819a      	strh	r2, [r3, #12]
 8001a0a:	e007      	b.n	8001a1c <USART_Cmd+0x34>
 8001a0c:	687b      	ldr	r3, [r7, #4]
 8001a0e:	899b      	ldrh	r3, [r3, #12]
 8001a10:	b29b      	uxth	r3, r3
 8001a12:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8001a16:	b29a      	uxth	r2, r3
 8001a18:	687b      	ldr	r3, [r7, #4]
 8001a1a:	819a      	strh	r2, [r3, #12]
 8001a1c:	bf00      	nop
 8001a1e:	370c      	adds	r7, #12
 8001a20:	46bd      	mov	sp, r7
 8001a22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a26:	4770      	bx	lr

08001a28 <USART_SendData>:
 8001a28:	b480      	push	{r7}
 8001a2a:	b083      	sub	sp, #12
 8001a2c:	af00      	add	r7, sp, #0
 8001a2e:	6078      	str	r0, [r7, #4]
 8001a30:	460b      	mov	r3, r1
 8001a32:	807b      	strh	r3, [r7, #2]
 8001a34:	887b      	ldrh	r3, [r7, #2]
 8001a36:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8001a3a:	b29a      	uxth	r2, r3
 8001a3c:	687b      	ldr	r3, [r7, #4]
 8001a3e:	809a      	strh	r2, [r3, #4]
 8001a40:	bf00      	nop
 8001a42:	370c      	adds	r7, #12
 8001a44:	46bd      	mov	sp, r7
 8001a46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a4a:	4770      	bx	lr

08001a4c <USART_ReceiveData>:
 8001a4c:	b480      	push	{r7}
 8001a4e:	b083      	sub	sp, #12
 8001a50:	af00      	add	r7, sp, #0
 8001a52:	6078      	str	r0, [r7, #4]
 8001a54:	687b      	ldr	r3, [r7, #4]
 8001a56:	889b      	ldrh	r3, [r3, #4]
 8001a58:	b29b      	uxth	r3, r3
 8001a5a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8001a5e:	b29b      	uxth	r3, r3
 8001a60:	4618      	mov	r0, r3
 8001a62:	370c      	adds	r7, #12
 8001a64:	46bd      	mov	sp, r7
 8001a66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a6a:	4770      	bx	lr

08001a6c <USART_ITConfig>:
 8001a6c:	b480      	push	{r7}
 8001a6e:	b087      	sub	sp, #28
 8001a70:	af00      	add	r7, sp, #0
 8001a72:	6078      	str	r0, [r7, #4]
 8001a74:	460b      	mov	r3, r1
 8001a76:	807b      	strh	r3, [r7, #2]
 8001a78:	4613      	mov	r3, r2
 8001a7a:	707b      	strb	r3, [r7, #1]
 8001a7c:	2300      	movs	r3, #0
 8001a7e:	613b      	str	r3, [r7, #16]
 8001a80:	2300      	movs	r3, #0
 8001a82:	60fb      	str	r3, [r7, #12]
 8001a84:	2300      	movs	r3, #0
 8001a86:	60bb      	str	r3, [r7, #8]
 8001a88:	2300      	movs	r3, #0
 8001a8a:	617b      	str	r3, [r7, #20]
 8001a8c:	687b      	ldr	r3, [r7, #4]
 8001a8e:	617b      	str	r3, [r7, #20]
 8001a90:	887b      	ldrh	r3, [r7, #2]
 8001a92:	b2db      	uxtb	r3, r3
 8001a94:	095b      	lsrs	r3, r3, #5
 8001a96:	b2db      	uxtb	r3, r3
 8001a98:	613b      	str	r3, [r7, #16]
 8001a9a:	887b      	ldrh	r3, [r7, #2]
 8001a9c:	f003 031f 	and.w	r3, r3, #31
 8001aa0:	60fb      	str	r3, [r7, #12]
 8001aa2:	2201      	movs	r2, #1
 8001aa4:	68fb      	ldr	r3, [r7, #12]
 8001aa6:	fa02 f303 	lsl.w	r3, r2, r3
 8001aaa:	60bb      	str	r3, [r7, #8]
 8001aac:	693b      	ldr	r3, [r7, #16]
 8001aae:	2b01      	cmp	r3, #1
 8001ab0:	d103      	bne.n	8001aba <USART_ITConfig+0x4e>
 8001ab2:	697b      	ldr	r3, [r7, #20]
 8001ab4:	330c      	adds	r3, #12
 8001ab6:	617b      	str	r3, [r7, #20]
 8001ab8:	e009      	b.n	8001ace <USART_ITConfig+0x62>
 8001aba:	693b      	ldr	r3, [r7, #16]
 8001abc:	2b02      	cmp	r3, #2
 8001abe:	d103      	bne.n	8001ac8 <USART_ITConfig+0x5c>
 8001ac0:	697b      	ldr	r3, [r7, #20]
 8001ac2:	3310      	adds	r3, #16
 8001ac4:	617b      	str	r3, [r7, #20]
 8001ac6:	e002      	b.n	8001ace <USART_ITConfig+0x62>
 8001ac8:	697b      	ldr	r3, [r7, #20]
 8001aca:	3314      	adds	r3, #20
 8001acc:	617b      	str	r3, [r7, #20]
 8001ace:	787b      	ldrb	r3, [r7, #1]
 8001ad0:	2b00      	cmp	r3, #0
 8001ad2:	d006      	beq.n	8001ae2 <USART_ITConfig+0x76>
 8001ad4:	697b      	ldr	r3, [r7, #20]
 8001ad6:	6819      	ldr	r1, [r3, #0]
 8001ad8:	697b      	ldr	r3, [r7, #20]
 8001ada:	68ba      	ldr	r2, [r7, #8]
 8001adc:	430a      	orrs	r2, r1
 8001ade:	601a      	str	r2, [r3, #0]
 8001ae0:	e006      	b.n	8001af0 <USART_ITConfig+0x84>
 8001ae2:	697b      	ldr	r3, [r7, #20]
 8001ae4:	6819      	ldr	r1, [r3, #0]
 8001ae6:	68bb      	ldr	r3, [r7, #8]
 8001ae8:	43da      	mvns	r2, r3
 8001aea:	697b      	ldr	r3, [r7, #20]
 8001aec:	400a      	ands	r2, r1
 8001aee:	601a      	str	r2, [r3, #0]
 8001af0:	bf00      	nop
 8001af2:	371c      	adds	r7, #28
 8001af4:	46bd      	mov	sp, r7
 8001af6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001afa:	4770      	bx	lr

08001afc <USART_GetFlagStatus>:
 8001afc:	b480      	push	{r7}
 8001afe:	b085      	sub	sp, #20
 8001b00:	af00      	add	r7, sp, #0
 8001b02:	6078      	str	r0, [r7, #4]
 8001b04:	460b      	mov	r3, r1
 8001b06:	807b      	strh	r3, [r7, #2]
 8001b08:	2300      	movs	r3, #0
 8001b0a:	73fb      	strb	r3, [r7, #15]
 8001b0c:	687b      	ldr	r3, [r7, #4]
 8001b0e:	881b      	ldrh	r3, [r3, #0]
 8001b10:	b29a      	uxth	r2, r3
 8001b12:	887b      	ldrh	r3, [r7, #2]
 8001b14:	4013      	ands	r3, r2
 8001b16:	b29b      	uxth	r3, r3
 8001b18:	2b00      	cmp	r3, #0
 8001b1a:	d002      	beq.n	8001b22 <USART_GetFlagStatus+0x26>
 8001b1c:	2301      	movs	r3, #1
 8001b1e:	73fb      	strb	r3, [r7, #15]
 8001b20:	e001      	b.n	8001b26 <USART_GetFlagStatus+0x2a>
 8001b22:	2300      	movs	r3, #0
 8001b24:	73fb      	strb	r3, [r7, #15]
 8001b26:	7bfb      	ldrb	r3, [r7, #15]
 8001b28:	4618      	mov	r0, r3
 8001b2a:	3714      	adds	r7, #20
 8001b2c:	46bd      	mov	sp, r7
 8001b2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b32:	4770      	bx	lr

08001b34 <USART_GetITStatus>:
 8001b34:	b480      	push	{r7}
 8001b36:	b087      	sub	sp, #28
 8001b38:	af00      	add	r7, sp, #0
 8001b3a:	6078      	str	r0, [r7, #4]
 8001b3c:	460b      	mov	r3, r1
 8001b3e:	807b      	strh	r3, [r7, #2]
 8001b40:	2300      	movs	r3, #0
 8001b42:	60fb      	str	r3, [r7, #12]
 8001b44:	2300      	movs	r3, #0
 8001b46:	617b      	str	r3, [r7, #20]
 8001b48:	2300      	movs	r3, #0
 8001b4a:	60bb      	str	r3, [r7, #8]
 8001b4c:	2300      	movs	r3, #0
 8001b4e:	74fb      	strb	r3, [r7, #19]
 8001b50:	887b      	ldrh	r3, [r7, #2]
 8001b52:	b2db      	uxtb	r3, r3
 8001b54:	095b      	lsrs	r3, r3, #5
 8001b56:	b2db      	uxtb	r3, r3
 8001b58:	60bb      	str	r3, [r7, #8]
 8001b5a:	887b      	ldrh	r3, [r7, #2]
 8001b5c:	f003 031f 	and.w	r3, r3, #31
 8001b60:	617b      	str	r3, [r7, #20]
 8001b62:	2201      	movs	r2, #1
 8001b64:	697b      	ldr	r3, [r7, #20]
 8001b66:	fa02 f303 	lsl.w	r3, r2, r3
 8001b6a:	617b      	str	r3, [r7, #20]
 8001b6c:	68bb      	ldr	r3, [r7, #8]
 8001b6e:	2b01      	cmp	r3, #1
 8001b70:	d107      	bne.n	8001b82 <USART_GetITStatus+0x4e>
 8001b72:	687b      	ldr	r3, [r7, #4]
 8001b74:	899b      	ldrh	r3, [r3, #12]
 8001b76:	b29b      	uxth	r3, r3
 8001b78:	461a      	mov	r2, r3
 8001b7a:	697b      	ldr	r3, [r7, #20]
 8001b7c:	4013      	ands	r3, r2
 8001b7e:	617b      	str	r3, [r7, #20]
 8001b80:	e011      	b.n	8001ba6 <USART_GetITStatus+0x72>
 8001b82:	68bb      	ldr	r3, [r7, #8]
 8001b84:	2b02      	cmp	r3, #2
 8001b86:	d107      	bne.n	8001b98 <USART_GetITStatus+0x64>
 8001b88:	687b      	ldr	r3, [r7, #4]
 8001b8a:	8a1b      	ldrh	r3, [r3, #16]
 8001b8c:	b29b      	uxth	r3, r3
 8001b8e:	461a      	mov	r2, r3
 8001b90:	697b      	ldr	r3, [r7, #20]
 8001b92:	4013      	ands	r3, r2
 8001b94:	617b      	str	r3, [r7, #20]
 8001b96:	e006      	b.n	8001ba6 <USART_GetITStatus+0x72>
 8001b98:	687b      	ldr	r3, [r7, #4]
 8001b9a:	8a9b      	ldrh	r3, [r3, #20]
 8001b9c:	b29b      	uxth	r3, r3
 8001b9e:	461a      	mov	r2, r3
 8001ba0:	697b      	ldr	r3, [r7, #20]
 8001ba2:	4013      	ands	r3, r2
 8001ba4:	617b      	str	r3, [r7, #20]
 8001ba6:	887b      	ldrh	r3, [r7, #2]
 8001ba8:	0a1b      	lsrs	r3, r3, #8
 8001baa:	b29b      	uxth	r3, r3
 8001bac:	60fb      	str	r3, [r7, #12]
 8001bae:	2201      	movs	r2, #1
 8001bb0:	68fb      	ldr	r3, [r7, #12]
 8001bb2:	fa02 f303 	lsl.w	r3, r2, r3
 8001bb6:	60fb      	str	r3, [r7, #12]
 8001bb8:	687b      	ldr	r3, [r7, #4]
 8001bba:	881b      	ldrh	r3, [r3, #0]
 8001bbc:	b29b      	uxth	r3, r3
 8001bbe:	461a      	mov	r2, r3
 8001bc0:	68fb      	ldr	r3, [r7, #12]
 8001bc2:	4013      	ands	r3, r2
 8001bc4:	60fb      	str	r3, [r7, #12]
 8001bc6:	697b      	ldr	r3, [r7, #20]
 8001bc8:	2b00      	cmp	r3, #0
 8001bca:	d005      	beq.n	8001bd8 <USART_GetITStatus+0xa4>
 8001bcc:	68fb      	ldr	r3, [r7, #12]
 8001bce:	2b00      	cmp	r3, #0
 8001bd0:	d002      	beq.n	8001bd8 <USART_GetITStatus+0xa4>
 8001bd2:	2301      	movs	r3, #1
 8001bd4:	74fb      	strb	r3, [r7, #19]
 8001bd6:	e001      	b.n	8001bdc <USART_GetITStatus+0xa8>
 8001bd8:	2300      	movs	r3, #0
 8001bda:	74fb      	strb	r3, [r7, #19]
 8001bdc:	7cfb      	ldrb	r3, [r7, #19]
 8001bde:	4618      	mov	r0, r3
 8001be0:	371c      	adds	r7, #28
 8001be2:	46bd      	mov	sp, r7
 8001be4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001be8:	4770      	bx	lr

08001bea <USART_ClearITPendingBit>:
 8001bea:	b480      	push	{r7}
 8001bec:	b085      	sub	sp, #20
 8001bee:	af00      	add	r7, sp, #0
 8001bf0:	6078      	str	r0, [r7, #4]
 8001bf2:	460b      	mov	r3, r1
 8001bf4:	807b      	strh	r3, [r7, #2]
 8001bf6:	2300      	movs	r3, #0
 8001bf8:	81fb      	strh	r3, [r7, #14]
 8001bfa:	2300      	movs	r3, #0
 8001bfc:	81bb      	strh	r3, [r7, #12]
 8001bfe:	887b      	ldrh	r3, [r7, #2]
 8001c00:	0a1b      	lsrs	r3, r3, #8
 8001c02:	81fb      	strh	r3, [r7, #14]
 8001c04:	89fb      	ldrh	r3, [r7, #14]
 8001c06:	2201      	movs	r2, #1
 8001c08:	fa02 f303 	lsl.w	r3, r2, r3
 8001c0c:	81bb      	strh	r3, [r7, #12]
 8001c0e:	89bb      	ldrh	r3, [r7, #12]
 8001c10:	43db      	mvns	r3, r3
 8001c12:	b29a      	uxth	r2, r3
 8001c14:	687b      	ldr	r3, [r7, #4]
 8001c16:	801a      	strh	r2, [r3, #0]
 8001c18:	bf00      	nop
 8001c1a:	3714      	adds	r7, #20
 8001c1c:	46bd      	mov	sp, r7
 8001c1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c22:	4770      	bx	lr

08001c24 <Button_Init>:
 8001c24:	b580      	push	{r7, lr}
 8001c26:	b084      	sub	sp, #16
 8001c28:	af02      	add	r7, sp, #8
 8001c2a:	f000 f9af 	bl	8001f8c <BTNGPIO_Init>
 8001c2e:	2300      	movs	r3, #0
 8001c30:	71fb      	strb	r3, [r7, #7]
 8001c32:	e035      	b.n	8001ca0 <Button_Init+0x7c>
 8001c34:	79fa      	ldrb	r2, [r7, #7]
 8001c36:	4924      	ldr	r1, [pc, #144]	; (8001cc8 <Button_Init+0xa4>)
 8001c38:	4613      	mov	r3, r2
 8001c3a:	009b      	lsls	r3, r3, #2
 8001c3c:	4413      	add	r3, r2
 8001c3e:	009b      	lsls	r3, r3, #2
 8001c40:	440b      	add	r3, r1
 8001c42:	330a      	adds	r3, #10
 8001c44:	79fa      	ldrb	r2, [r7, #7]
 8001c46:	701a      	strb	r2, [r3, #0]
 8001c48:	79fa      	ldrb	r2, [r7, #7]
 8001c4a:	491f      	ldr	r1, [pc, #124]	; (8001cc8 <Button_Init+0xa4>)
 8001c4c:	4613      	mov	r3, r2
 8001c4e:	009b      	lsls	r3, r3, #2
 8001c50:	4413      	add	r3, r2
 8001c52:	009b      	lsls	r3, r3, #2
 8001c54:	440b      	add	r3, r1
 8001c56:	3310      	adds	r3, #16
 8001c58:	4a1c      	ldr	r2, [pc, #112]	; (8001ccc <Button_Init+0xa8>)
 8001c5a:	601a      	str	r2, [r3, #0]
 8001c5c:	79fb      	ldrb	r3, [r7, #7]
 8001c5e:	4a1c      	ldr	r2, [pc, #112]	; (8001cd0 <Button_Init+0xac>)
 8001c60:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 8001c64:	79fb      	ldrb	r3, [r7, #7]
 8001c66:	4a1a      	ldr	r2, [pc, #104]	; (8001cd0 <Button_Init+0xac>)
 8001c68:	00db      	lsls	r3, r3, #3
 8001c6a:	4413      	add	r3, r2
 8001c6c:	889b      	ldrh	r3, [r3, #4]
 8001c6e:	4619      	mov	r1, r3
 8001c70:	f7ff fc9c 	bl	80015ac <GPIO_ReadInputDataBit>
 8001c74:	4603      	mov	r3, r0
 8001c76:	4619      	mov	r1, r3
 8001c78:	79fb      	ldrb	r3, [r7, #7]
 8001c7a:	4a15      	ldr	r2, [pc, #84]	; (8001cd0 <Button_Init+0xac>)
 8001c7c:	00db      	lsls	r3, r3, #3
 8001c7e:	4413      	add	r3, r2
 8001c80:	799b      	ldrb	r3, [r3, #6]
 8001c82:	4299      	cmp	r1, r3
 8001c84:	d109      	bne.n	8001c9a <Button_Init+0x76>
 8001c86:	79fa      	ldrb	r2, [r7, #7]
 8001c88:	490f      	ldr	r1, [pc, #60]	; (8001cc8 <Button_Init+0xa4>)
 8001c8a:	4613      	mov	r3, r2
 8001c8c:	009b      	lsls	r3, r3, #2
 8001c8e:	4413      	add	r3, r2
 8001c90:	009b      	lsls	r3, r3, #2
 8001c92:	440b      	add	r3, r1
 8001c94:	3309      	adds	r3, #9
 8001c96:	2201      	movs	r2, #1
 8001c98:	701a      	strb	r2, [r3, #0]
 8001c9a:	79fb      	ldrb	r3, [r7, #7]
 8001c9c:	3301      	adds	r3, #1
 8001c9e:	71fb      	strb	r3, [r7, #7]
 8001ca0:	79fb      	ldrb	r3, [r7, #7]
 8001ca2:	2b05      	cmp	r3, #5
 8001ca4:	d9c6      	bls.n	8001c34 <Button_Init+0x10>
 8001ca6:	2300      	movs	r3, #0
 8001ca8:	9300      	str	r3, [sp, #0]
 8001caa:	4b0a      	ldr	r3, [pc, #40]	; (8001cd4 <Button_Init+0xb0>)
 8001cac:	22ff      	movs	r2, #255	; 0xff
 8001cae:	2105      	movs	r1, #5
 8001cb0:	4809      	ldr	r0, [pc, #36]	; (8001cd8 <Button_Init+0xb4>)
 8001cb2:	f000 fb2f 	bl	8002314 <TimerStart>
 8001cb6:	4603      	mov	r3, r0
 8001cb8:	461a      	mov	r2, r3
 8001cba:	4b08      	ldr	r3, [pc, #32]	; (8001cdc <Button_Init+0xb8>)
 8001cbc:	701a      	strb	r2, [r3, #0]
 8001cbe:	bf00      	nop
 8001cc0:	3708      	adds	r7, #8
 8001cc2:	46bd      	mov	sp, r7
 8001cc4:	bd80      	pop	{r7, pc}
 8001cc6:	bf00      	nop
 8001cc8:	20000264 	.word	0x20000264
 8001ccc:	08001d45 	.word	0x08001d45
 8001cd0:	20000028 	.word	0x20000028
 8001cd4:	08001f41 	.word	0x08001f41
 8001cd8:	08005614 	.word	0x08005614
 8001cdc:	20000058 	.word	0x20000058

08001ce0 <Button_SetMode>:
 8001ce0:	b480      	push	{r7}
 8001ce2:	b083      	sub	sp, #12
 8001ce4:	af00      	add	r7, sp, #0
 8001ce6:	4603      	mov	r3, r0
 8001ce8:	460a      	mov	r2, r1
 8001cea:	71fb      	strb	r3, [r7, #7]
 8001cec:	4613      	mov	r3, r2
 8001cee:	71bb      	strb	r3, [r7, #6]
 8001cf0:	79fb      	ldrb	r3, [r7, #7]
 8001cf2:	2b05      	cmp	r3, #5
 8001cf4:	d80a      	bhi.n	8001d0c <Button_SetMode+0x2c>
 8001cf6:	79fa      	ldrb	r2, [r7, #7]
 8001cf8:	4907      	ldr	r1, [pc, #28]	; (8001d18 <Button_SetMode+0x38>)
 8001cfa:	4613      	mov	r3, r2
 8001cfc:	009b      	lsls	r3, r3, #2
 8001cfe:	4413      	add	r3, r2
 8001d00:	009b      	lsls	r3, r3, #2
 8001d02:	440b      	add	r3, r1
 8001d04:	330b      	adds	r3, #11
 8001d06:	79ba      	ldrb	r2, [r7, #6]
 8001d08:	701a      	strb	r2, [r3, #0]
 8001d0a:	e000      	b.n	8001d0e <Button_SetMode+0x2e>
 8001d0c:	bf00      	nop
 8001d0e:	370c      	adds	r7, #12
 8001d10:	46bd      	mov	sp, r7
 8001d12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d16:	4770      	bx	lr
 8001d18:	20000264 	.word	0x20000264

08001d1c <Button_RegisterEventCallback>:
 8001d1c:	b480      	push	{r7}
 8001d1e:	b083      	sub	sp, #12
 8001d20:	af00      	add	r7, sp, #0
 8001d22:	4603      	mov	r3, r0
 8001d24:	6039      	str	r1, [r7, #0]
 8001d26:	71fb      	strb	r3, [r7, #7]
 8001d28:	79fb      	ldrb	r3, [r7, #7]
 8001d2a:	4905      	ldr	r1, [pc, #20]	; (8001d40 <Button_RegisterEventCallback+0x24>)
 8001d2c:	683a      	ldr	r2, [r7, #0]
 8001d2e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001d32:	bf00      	nop
 8001d34:	370c      	adds	r7, #12
 8001d36:	46bd      	mov	sp, r7
 8001d38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d3c:	4770      	bx	lr
 8001d3e:	bf00      	nop
 8001d40:	200002dc 	.word	0x200002dc

08001d44 <ButtonScanTypeEdge>:
 8001d44:	b580      	push	{r7, lr}
 8001d46:	b084      	sub	sp, #16
 8001d48:	af00      	add	r7, sp, #0
 8001d4a:	6078      	str	r0, [r7, #4]
 8001d4c:	687b      	ldr	r3, [r7, #4]
 8001d4e:	60fb      	str	r3, [r7, #12]
 8001d50:	68fb      	ldr	r3, [r7, #12]
 8001d52:	7a9b      	ldrb	r3, [r3, #10]
 8001d54:	72fb      	strb	r3, [r7, #11]
 8001d56:	7afb      	ldrb	r3, [r7, #11]
 8001d58:	4a77      	ldr	r2, [pc, #476]	; (8001f38 <ButtonScanTypeEdge+0x1f4>)
 8001d5a:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 8001d5e:	7afb      	ldrb	r3, [r7, #11]
 8001d60:	4a75      	ldr	r2, [pc, #468]	; (8001f38 <ButtonScanTypeEdge+0x1f4>)
 8001d62:	00db      	lsls	r3, r3, #3
 8001d64:	4413      	add	r3, r2
 8001d66:	889b      	ldrh	r3, [r3, #4]
 8001d68:	4619      	mov	r1, r3
 8001d6a:	f7ff fc1f 	bl	80015ac <GPIO_ReadInputDataBit>
 8001d6e:	4603      	mov	r3, r0
 8001d70:	4619      	mov	r1, r3
 8001d72:	7afb      	ldrb	r3, [r7, #11]
 8001d74:	4a70      	ldr	r2, [pc, #448]	; (8001f38 <ButtonScanTypeEdge+0x1f4>)
 8001d76:	00db      	lsls	r3, r3, #3
 8001d78:	4413      	add	r3, r2
 8001d7a:	799b      	ldrb	r3, [r3, #6]
 8001d7c:	4299      	cmp	r1, r3
 8001d7e:	d10a      	bne.n	8001d96 <ButtonScanTypeEdge+0x52>
 8001d80:	68fb      	ldr	r3, [r7, #12]
 8001d82:	7b5b      	ldrb	r3, [r3, #13]
 8001d84:	2bff      	cmp	r3, #255	; 0xff
 8001d86:	d013      	beq.n	8001db0 <ButtonScanTypeEdge+0x6c>
 8001d88:	68fb      	ldr	r3, [r7, #12]
 8001d8a:	7b5b      	ldrb	r3, [r3, #13]
 8001d8c:	3301      	adds	r3, #1
 8001d8e:	b2da      	uxtb	r2, r3
 8001d90:	68fb      	ldr	r3, [r7, #12]
 8001d92:	735a      	strb	r2, [r3, #13]
 8001d94:	e00c      	b.n	8001db0 <ButtonScanTypeEdge+0x6c>
 8001d96:	68fb      	ldr	r3, [r7, #12]
 8001d98:	7b1b      	ldrb	r3, [r3, #12]
 8001d9a:	2bff      	cmp	r3, #255	; 0xff
 8001d9c:	d005      	beq.n	8001daa <ButtonScanTypeEdge+0x66>
 8001d9e:	68fb      	ldr	r3, [r7, #12]
 8001da0:	7b1b      	ldrb	r3, [r3, #12]
 8001da2:	3301      	adds	r3, #1
 8001da4:	b2da      	uxtb	r2, r3
 8001da6:	68fb      	ldr	r3, [r7, #12]
 8001da8:	731a      	strb	r2, [r3, #12]
 8001daa:	68fb      	ldr	r3, [r7, #12]
 8001dac:	2200      	movs	r2, #0
 8001dae:	735a      	strb	r2, [r3, #13]
 8001db0:	68fb      	ldr	r3, [r7, #12]
 8001db2:	7b1b      	ldrb	r3, [r3, #12]
 8001db4:	2b09      	cmp	r3, #9
 8001db6:	d958      	bls.n	8001e6a <ButtonScanTypeEdge+0x126>
 8001db8:	68fb      	ldr	r3, [r7, #12]
 8001dba:	7a5b      	ldrb	r3, [r3, #9]
 8001dbc:	2b01      	cmp	r3, #1
 8001dbe:	d118      	bne.n	8001df2 <ButtonScanTypeEdge+0xae>
 8001dc0:	68fb      	ldr	r3, [r7, #12]
 8001dc2:	2200      	movs	r2, #0
 8001dc4:	725a      	strb	r2, [r3, #9]
 8001dc6:	4b5d      	ldr	r3, [pc, #372]	; (8001f3c <ButtonScanTypeEdge+0x1f8>)
 8001dc8:	681b      	ldr	r3, [r3, #0]
 8001dca:	2b00      	cmp	r3, #0
 8001dcc:	d00b      	beq.n	8001de6 <ButtonScanTypeEdge+0xa2>
 8001dce:	68fb      	ldr	r3, [r7, #12]
 8001dd0:	7adb      	ldrb	r3, [r3, #11]
 8001dd2:	f003 0302 	and.w	r3, r3, #2
 8001dd6:	2b00      	cmp	r3, #0
 8001dd8:	d005      	beq.n	8001de6 <ButtonScanTypeEdge+0xa2>
 8001dda:	4b58      	ldr	r3, [pc, #352]	; (8001f3c <ButtonScanTypeEdge+0x1f8>)
 8001ddc:	681b      	ldr	r3, [r3, #0]
 8001dde:	7afa      	ldrb	r2, [r7, #11]
 8001de0:	2101      	movs	r1, #1
 8001de2:	4610      	mov	r0, r2
 8001de4:	4798      	blx	r3
 8001de6:	68fb      	ldr	r3, [r7, #12]
 8001de8:	7b1b      	ldrb	r3, [r3, #12]
 8001dea:	461a      	mov	r2, r3
 8001dec:	68fb      	ldr	r3, [r7, #12]
 8001dee:	601a      	str	r2, [r3, #0]
 8001df0:	e03b      	b.n	8001e6a <ButtonScanTypeEdge+0x126>
 8001df2:	68fb      	ldr	r3, [r7, #12]
 8001df4:	681b      	ldr	r3, [r3, #0]
 8001df6:	1c5a      	adds	r2, r3, #1
 8001df8:	68fb      	ldr	r3, [r7, #12]
 8001dfa:	601a      	str	r2, [r3, #0]
 8001dfc:	68fb      	ldr	r3, [r7, #12]
 8001dfe:	681b      	ldr	r3, [r3, #0]
 8001e00:	2b4f      	cmp	r3, #79	; 0x4f
 8001e02:	d932      	bls.n	8001e6a <ButtonScanTypeEdge+0x126>
 8001e04:	68fb      	ldr	r3, [r7, #12]
 8001e06:	685b      	ldr	r3, [r3, #4]
 8001e08:	2b00      	cmp	r3, #0
 8001e0a:	d012      	beq.n	8001e32 <ButtonScanTypeEdge+0xee>
 8001e0c:	4b4b      	ldr	r3, [pc, #300]	; (8001f3c <ButtonScanTypeEdge+0x1f8>)
 8001e0e:	68db      	ldr	r3, [r3, #12]
 8001e10:	2b00      	cmp	r3, #0
 8001e12:	d024      	beq.n	8001e5e <ButtonScanTypeEdge+0x11a>
 8001e14:	68fb      	ldr	r3, [r7, #12]
 8001e16:	7adb      	ldrb	r3, [r3, #11]
 8001e18:	f003 0301 	and.w	r3, r3, #1
 8001e1c:	2b00      	cmp	r3, #0
 8001e1e:	d01e      	beq.n	8001e5e <ButtonScanTypeEdge+0x11a>
 8001e20:	4b46      	ldr	r3, [pc, #280]	; (8001f3c <ButtonScanTypeEdge+0x1f8>)
 8001e22:	68db      	ldr	r3, [r3, #12]
 8001e24:	68fa      	ldr	r2, [r7, #12]
 8001e26:	6852      	ldr	r2, [r2, #4]
 8001e28:	b291      	uxth	r1, r2
 8001e2a:	7afa      	ldrb	r2, [r7, #11]
 8001e2c:	4610      	mov	r0, r2
 8001e2e:	4798      	blx	r3
 8001e30:	e015      	b.n	8001e5e <ButtonScanTypeEdge+0x11a>
 8001e32:	4b42      	ldr	r3, [pc, #264]	; (8001f3c <ButtonScanTypeEdge+0x1f8>)
 8001e34:	685b      	ldr	r3, [r3, #4]
 8001e36:	2b00      	cmp	r3, #0
 8001e38:	d011      	beq.n	8001e5e <ButtonScanTypeEdge+0x11a>
 8001e3a:	68fb      	ldr	r3, [r7, #12]
 8001e3c:	7adb      	ldrb	r3, [r3, #11]
 8001e3e:	f003 0301 	and.w	r3, r3, #1
 8001e42:	2b00      	cmp	r3, #0
 8001e44:	d00b      	beq.n	8001e5e <ButtonScanTypeEdge+0x11a>
 8001e46:	68fb      	ldr	r3, [r7, #12]
 8001e48:	7a1b      	ldrb	r3, [r3, #8]
 8001e4a:	2b00      	cmp	r3, #0
 8001e4c:	d007      	beq.n	8001e5e <ButtonScanTypeEdge+0x11a>
 8001e4e:	4b3b      	ldr	r3, [pc, #236]	; (8001f3c <ButtonScanTypeEdge+0x1f8>)
 8001e50:	685b      	ldr	r3, [r3, #4]
 8001e52:	68fa      	ldr	r2, [r7, #12]
 8001e54:	7a12      	ldrb	r2, [r2, #8]
 8001e56:	b291      	uxth	r1, r2
 8001e58:	7afa      	ldrb	r2, [r7, #11]
 8001e5a:	4610      	mov	r0, r2
 8001e5c:	4798      	blx	r3
 8001e5e:	68fb      	ldr	r3, [r7, #12]
 8001e60:	2200      	movs	r2, #0
 8001e62:	605a      	str	r2, [r3, #4]
 8001e64:	68fb      	ldr	r3, [r7, #12]
 8001e66:	2200      	movs	r2, #0
 8001e68:	721a      	strb	r2, [r3, #8]
 8001e6a:	68fb      	ldr	r3, [r7, #12]
 8001e6c:	7b5b      	ldrb	r3, [r3, #13]
 8001e6e:	2b09      	cmp	r3, #9
 8001e70:	d95e      	bls.n	8001f30 <ButtonScanTypeEdge+0x1ec>
 8001e72:	68fb      	ldr	r3, [r7, #12]
 8001e74:	2200      	movs	r2, #0
 8001e76:	731a      	strb	r2, [r3, #12]
 8001e78:	68fb      	ldr	r3, [r7, #12]
 8001e7a:	7a5b      	ldrb	r3, [r3, #9]
 8001e7c:	2b00      	cmp	r3, #0
 8001e7e:	d11e      	bne.n	8001ebe <ButtonScanTypeEdge+0x17a>
 8001e80:	68fb      	ldr	r3, [r7, #12]
 8001e82:	2201      	movs	r2, #1
 8001e84:	725a      	strb	r2, [r3, #9]
 8001e86:	4b2d      	ldr	r3, [pc, #180]	; (8001f3c <ButtonScanTypeEdge+0x1f8>)
 8001e88:	681b      	ldr	r3, [r3, #0]
 8001e8a:	2b00      	cmp	r3, #0
 8001e8c:	d00b      	beq.n	8001ea6 <ButtonScanTypeEdge+0x162>
 8001e8e:	68fb      	ldr	r3, [r7, #12]
 8001e90:	7adb      	ldrb	r3, [r3, #11]
 8001e92:	f003 0302 	and.w	r3, r3, #2
 8001e96:	2b00      	cmp	r3, #0
 8001e98:	d005      	beq.n	8001ea6 <ButtonScanTypeEdge+0x162>
 8001e9a:	4b28      	ldr	r3, [pc, #160]	; (8001f3c <ButtonScanTypeEdge+0x1f8>)
 8001e9c:	681b      	ldr	r3, [r3, #0]
 8001e9e:	7afa      	ldrb	r2, [r7, #11]
 8001ea0:	2100      	movs	r1, #0
 8001ea2:	4610      	mov	r0, r2
 8001ea4:	4798      	blx	r3
 8001ea6:	68fb      	ldr	r3, [r7, #12]
 8001ea8:	7b5b      	ldrb	r3, [r3, #13]
 8001eaa:	461a      	mov	r2, r3
 8001eac:	68fb      	ldr	r3, [r7, #12]
 8001eae:	601a      	str	r2, [r3, #0]
 8001eb0:	68fb      	ldr	r3, [r7, #12]
 8001eb2:	7a1b      	ldrb	r3, [r3, #8]
 8001eb4:	3301      	adds	r3, #1
 8001eb6:	b2da      	uxtb	r2, r3
 8001eb8:	68fb      	ldr	r3, [r7, #12]
 8001eba:	721a      	strb	r2, [r3, #8]
 8001ebc:	e038      	b.n	8001f30 <ButtonScanTypeEdge+0x1ec>
 8001ebe:	68fb      	ldr	r3, [r7, #12]
 8001ec0:	681b      	ldr	r3, [r3, #0]
 8001ec2:	1c5a      	adds	r2, r3, #1
 8001ec4:	68fb      	ldr	r3, [r7, #12]
 8001ec6:	601a      	str	r2, [r3, #0]
 8001ec8:	68fb      	ldr	r3, [r7, #12]
 8001eca:	681b      	ldr	r3, [r3, #0]
 8001ecc:	2b77      	cmp	r3, #119	; 0x77
 8001ece:	d92f      	bls.n	8001f30 <ButtonScanTypeEdge+0x1ec>
 8001ed0:	68fb      	ldr	r3, [r7, #12]
 8001ed2:	2200      	movs	r2, #0
 8001ed4:	721a      	strb	r2, [r3, #8]
 8001ed6:	68fb      	ldr	r3, [r7, #12]
 8001ed8:	681a      	ldr	r2, [r3, #0]
 8001eda:	68fb      	ldr	r3, [r7, #12]
 8001edc:	605a      	str	r2, [r3, #4]
 8001ede:	68fb      	ldr	r3, [r7, #12]
 8001ee0:	685b      	ldr	r3, [r3, #4]
 8001ee2:	2b78      	cmp	r3, #120	; 0x78
 8001ee4:	d012      	beq.n	8001f0c <ButtonScanTypeEdge+0x1c8>
 8001ee6:	68fb      	ldr	r3, [r7, #12]
 8001ee8:	685b      	ldr	r3, [r3, #4]
 8001eea:	2bc8      	cmp	r3, #200	; 0xc8
 8001eec:	d00e      	beq.n	8001f0c <ButtonScanTypeEdge+0x1c8>
 8001eee:	68fb      	ldr	r3, [r7, #12]
 8001ef0:	685b      	ldr	r3, [r3, #4]
 8001ef2:	f5b3 7f16 	cmp.w	r3, #600	; 0x258
 8001ef6:	d009      	beq.n	8001f0c <ButtonScanTypeEdge+0x1c8>
 8001ef8:	68fb      	ldr	r3, [r7, #12]
 8001efa:	685b      	ldr	r3, [r3, #4]
 8001efc:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8001f00:	d004      	beq.n	8001f0c <ButtonScanTypeEdge+0x1c8>
 8001f02:	68fb      	ldr	r3, [r7, #12]
 8001f04:	685b      	ldr	r3, [r3, #4]
 8001f06:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8001f0a:	d111      	bne.n	8001f30 <ButtonScanTypeEdge+0x1ec>
 8001f0c:	4b0b      	ldr	r3, [pc, #44]	; (8001f3c <ButtonScanTypeEdge+0x1f8>)
 8001f0e:	689b      	ldr	r3, [r3, #8]
 8001f10:	2b00      	cmp	r3, #0
 8001f12:	d00d      	beq.n	8001f30 <ButtonScanTypeEdge+0x1ec>
 8001f14:	68fb      	ldr	r3, [r7, #12]
 8001f16:	7adb      	ldrb	r3, [r3, #11]
 8001f18:	f003 0301 	and.w	r3, r3, #1
 8001f1c:	2b00      	cmp	r3, #0
 8001f1e:	d007      	beq.n	8001f30 <ButtonScanTypeEdge+0x1ec>
 8001f20:	4b06      	ldr	r3, [pc, #24]	; (8001f3c <ButtonScanTypeEdge+0x1f8>)
 8001f22:	689b      	ldr	r3, [r3, #8]
 8001f24:	68fa      	ldr	r2, [r7, #12]
 8001f26:	6852      	ldr	r2, [r2, #4]
 8001f28:	b291      	uxth	r1, r2
 8001f2a:	7afa      	ldrb	r2, [r7, #11]
 8001f2c:	4610      	mov	r0, r2
 8001f2e:	4798      	blx	r3
 8001f30:	bf00      	nop
 8001f32:	3710      	adds	r7, #16
 8001f34:	46bd      	mov	sp, r7
 8001f36:	bd80      	pop	{r7, pc}
 8001f38:	20000028 	.word	0x20000028
 8001f3c:	200002dc 	.word	0x200002dc

08001f40 <ButtonScan>:
 8001f40:	b580      	push	{r7, lr}
 8001f42:	b084      	sub	sp, #16
 8001f44:	af00      	add	r7, sp, #0
 8001f46:	6078      	str	r0, [r7, #4]
 8001f48:	2300      	movs	r3, #0
 8001f4a:	73fb      	strb	r3, [r7, #15]
 8001f4c:	e014      	b.n	8001f78 <ButtonScan+0x38>
 8001f4e:	7bfa      	ldrb	r2, [r7, #15]
 8001f50:	490d      	ldr	r1, [pc, #52]	; (8001f88 <ButtonScan+0x48>)
 8001f52:	4613      	mov	r3, r2
 8001f54:	009b      	lsls	r3, r3, #2
 8001f56:	4413      	add	r3, r2
 8001f58:	009b      	lsls	r3, r3, #2
 8001f5a:	440b      	add	r3, r1
 8001f5c:	3310      	adds	r3, #16
 8001f5e:	6819      	ldr	r1, [r3, #0]
 8001f60:	7bfa      	ldrb	r2, [r7, #15]
 8001f62:	4613      	mov	r3, r2
 8001f64:	009b      	lsls	r3, r3, #2
 8001f66:	4413      	add	r3, r2
 8001f68:	009b      	lsls	r3, r3, #2
 8001f6a:	4a07      	ldr	r2, [pc, #28]	; (8001f88 <ButtonScan+0x48>)
 8001f6c:	4413      	add	r3, r2
 8001f6e:	4618      	mov	r0, r3
 8001f70:	4788      	blx	r1
 8001f72:	7bfb      	ldrb	r3, [r7, #15]
 8001f74:	3301      	adds	r3, #1
 8001f76:	73fb      	strb	r3, [r7, #15]
 8001f78:	7bfb      	ldrb	r3, [r7, #15]
 8001f7a:	2b05      	cmp	r3, #5
 8001f7c:	d9e7      	bls.n	8001f4e <ButtonScan+0xe>
 8001f7e:	bf00      	nop
 8001f80:	3710      	adds	r7, #16
 8001f82:	46bd      	mov	sp, r7
 8001f84:	bd80      	pop	{r7, pc}
 8001f86:	bf00      	nop
 8001f88:	20000264 	.word	0x20000264

08001f8c <BTNGPIO_Init>:
 8001f8c:	b580      	push	{r7, lr}
 8001f8e:	b082      	sub	sp, #8
 8001f90:	af00      	add	r7, sp, #0
 8001f92:	2101      	movs	r1, #1
 8001f94:	2001      	movs	r0, #1
 8001f96:	f7ff fc2d 	bl	80017f4 <RCC_AHB1PeriphClockCmd>
 8001f9a:	2101      	movs	r1, #1
 8001f9c:	2002      	movs	r0, #2
 8001f9e:	f7ff fc29 	bl	80017f4 <RCC_AHB1PeriphClockCmd>
 8001fa2:	2101      	movs	r1, #1
 8001fa4:	2004      	movs	r0, #4
 8001fa6:	f7ff fc25 	bl	80017f4 <RCC_AHB1PeriphClockCmd>
 8001faa:	2300      	movs	r3, #0
 8001fac:	713b      	strb	r3, [r7, #4]
 8001fae:	2303      	movs	r3, #3
 8001fb0:	717b      	strb	r3, [r7, #5]
 8001fb2:	2301      	movs	r3, #1
 8001fb4:	71fb      	strb	r3, [r7, #7]
 8001fb6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001fba:	603b      	str	r3, [r7, #0]
 8001fbc:	463b      	mov	r3, r7
 8001fbe:	4619      	mov	r1, r3
 8001fc0:	480a      	ldr	r0, [pc, #40]	; (8001fec <BTNGPIO_Init+0x60>)
 8001fc2:	f7ff fa65 	bl	8001490 <GPIO_Init>
 8001fc6:	2339      	movs	r3, #57	; 0x39
 8001fc8:	603b      	str	r3, [r7, #0]
 8001fca:	463b      	mov	r3, r7
 8001fcc:	4619      	mov	r1, r3
 8001fce:	4808      	ldr	r0, [pc, #32]	; (8001ff0 <BTNGPIO_Init+0x64>)
 8001fd0:	f7ff fa5e 	bl	8001490 <GPIO_Init>
 8001fd4:	2310      	movs	r3, #16
 8001fd6:	603b      	str	r3, [r7, #0]
 8001fd8:	463b      	mov	r3, r7
 8001fda:	4619      	mov	r1, r3
 8001fdc:	4805      	ldr	r0, [pc, #20]	; (8001ff4 <BTNGPIO_Init+0x68>)
 8001fde:	f7ff fa57 	bl	8001490 <GPIO_Init>
 8001fe2:	bf00      	nop
 8001fe4:	3708      	adds	r7, #8
 8001fe6:	46bd      	mov	sp, r7
 8001fe8:	bd80      	pop	{r7, pc}
 8001fea:	bf00      	nop
 8001fec:	40020800 	.word	0x40020800
 8001ff0:	40020400 	.word	0x40020400
 8001ff4:	40020000 	.word	0x40020000

08001ff8 <EventButton_Init>:
 8001ff8:	b580      	push	{r7, lr}
 8001ffa:	af00      	add	r7, sp, #0
 8001ffc:	4915      	ldr	r1, [pc, #84]	; (8002054 <EventButton_Init+0x5c>)
 8001ffe:	2000      	movs	r0, #0
 8002000:	f7ff fe8c 	bl	8001d1c <Button_RegisterEventCallback>
 8002004:	4914      	ldr	r1, [pc, #80]	; (8002058 <EventButton_Init+0x60>)
 8002006:	2001      	movs	r0, #1
 8002008:	f7ff fe88 	bl	8001d1c <Button_RegisterEventCallback>
 800200c:	4913      	ldr	r1, [pc, #76]	; (800205c <EventButton_Init+0x64>)
 800200e:	2002      	movs	r0, #2
 8002010:	f7ff fe84 	bl	8001d1c <Button_RegisterEventCallback>
 8002014:	4912      	ldr	r1, [pc, #72]	; (8002060 <EventButton_Init+0x68>)
 8002016:	2003      	movs	r0, #3
 8002018:	f7ff fe80 	bl	8001d1c <Button_RegisterEventCallback>
 800201c:	2101      	movs	r1, #1
 800201e:	2000      	movs	r0, #0
 8002020:	f7ff fe5e 	bl	8001ce0 <Button_SetMode>
 8002024:	2101      	movs	r1, #1
 8002026:	2001      	movs	r0, #1
 8002028:	f7ff fe5a 	bl	8001ce0 <Button_SetMode>
 800202c:	2101      	movs	r1, #1
 800202e:	2002      	movs	r0, #2
 8002030:	f7ff fe56 	bl	8001ce0 <Button_SetMode>
 8002034:	2101      	movs	r1, #1
 8002036:	2003      	movs	r0, #3
 8002038:	f7ff fe52 	bl	8001ce0 <Button_SetMode>
 800203c:	2101      	movs	r1, #1
 800203e:	2004      	movs	r0, #4
 8002040:	f7ff fe4e 	bl	8001ce0 <Button_SetMode>
 8002044:	2101      	movs	r1, #1
 8002046:	2005      	movs	r0, #5
 8002048:	f7ff fe4a 	bl	8001ce0 <Button_SetMode>
 800204c:	f7ff fdea 	bl	8001c24 <Button_Init>
 8002050:	bf00      	nop
 8002052:	bd80      	pop	{r7, pc}
 8002054:	08002065 	.word	0x08002065
 8002058:	08002099 	.word	0x08002099
 800205c:	080020e1 	.word	0x080020e1
 8002060:	0800213f 	.word	0x0800213f

08002064 <ButtonProcessEventEdge>:
 8002064:	b580      	push	{r7, lr}
 8002066:	b084      	sub	sp, #16
 8002068:	af00      	add	r7, sp, #0
 800206a:	4603      	mov	r3, r0
 800206c:	460a      	mov	r2, r1
 800206e:	71fb      	strb	r3, [r7, #7]
 8002070:	4613      	mov	r3, r2
 8002072:	80bb      	strh	r3, [r7, #4]
 8002074:	88bb      	ldrh	r3, [r7, #4]
 8002076:	2b00      	cmp	r3, #0
 8002078:	d103      	bne.n	8002082 <ButtonProcessEventEdge+0x1e>
 800207a:	79fb      	ldrb	r3, [r7, #7]
 800207c:	3306      	adds	r3, #6
 800207e:	73fb      	strb	r3, [r7, #15]
 8002080:	e002      	b.n	8002088 <ButtonProcessEventEdge+0x24>
 8002082:	79fb      	ldrb	r3, [r7, #7]
 8002084:	330c      	adds	r3, #12
 8002086:	73fb      	strb	r3, [r7, #15]
 8002088:	7bfb      	ldrb	r3, [r7, #15]
 800208a:	4618      	mov	r0, r3
 800208c:	f000 f8a2 	bl	80021d4 <EventSchedulerAdd>
 8002090:	bf00      	nop
 8002092:	3710      	adds	r7, #16
 8002094:	46bd      	mov	sp, r7
 8002096:	bd80      	pop	{r7, pc}

08002098 <ButtonProcessEventPress>:
 8002098:	b580      	push	{r7, lr}
 800209a:	b084      	sub	sp, #16
 800209c:	af00      	add	r7, sp, #0
 800209e:	4603      	mov	r3, r0
 80020a0:	460a      	mov	r2, r1
 80020a2:	71fb      	strb	r3, [r7, #7]
 80020a4:	4613      	mov	r3, r2
 80020a6:	80bb      	strh	r3, [r7, #4]
 80020a8:	88bb      	ldrh	r3, [r7, #4]
 80020aa:	2b01      	cmp	r3, #1
 80020ac:	d102      	bne.n	80020b4 <ButtonProcessEventPress+0x1c>
 80020ae:	79fb      	ldrb	r3, [r7, #7]
 80020b0:	73fb      	strb	r3, [r7, #15]
 80020b2:	e00c      	b.n	80020ce <ButtonProcessEventPress+0x36>
 80020b4:	88bb      	ldrh	r3, [r7, #4]
 80020b6:	2b02      	cmp	r3, #2
 80020b8:	d103      	bne.n	80020c2 <ButtonProcessEventPress+0x2a>
 80020ba:	79fb      	ldrb	r3, [r7, #7]
 80020bc:	3312      	adds	r3, #18
 80020be:	73fb      	strb	r3, [r7, #15]
 80020c0:	e005      	b.n	80020ce <ButtonProcessEventPress+0x36>
 80020c2:	88bb      	ldrh	r3, [r7, #4]
 80020c4:	2b05      	cmp	r3, #5
 80020c6:	d107      	bne.n	80020d8 <ButtonProcessEventPress+0x40>
 80020c8:	79fb      	ldrb	r3, [r7, #7]
 80020ca:	3318      	adds	r3, #24
 80020cc:	73fb      	strb	r3, [r7, #15]
 80020ce:	7bfb      	ldrb	r3, [r7, #15]
 80020d0:	4618      	mov	r0, r3
 80020d2:	f000 f87f 	bl	80021d4 <EventSchedulerAdd>
 80020d6:	e000      	b.n	80020da <ButtonProcessEventPress+0x42>
 80020d8:	bf00      	nop
 80020da:	3710      	adds	r7, #16
 80020dc:	46bd      	mov	sp, r7
 80020de:	bd80      	pop	{r7, pc}

080020e0 <ButtonProcessEventHold>:
 80020e0:	b580      	push	{r7, lr}
 80020e2:	b084      	sub	sp, #16
 80020e4:	af00      	add	r7, sp, #0
 80020e6:	4603      	mov	r3, r0
 80020e8:	460a      	mov	r2, r1
 80020ea:	71fb      	strb	r3, [r7, #7]
 80020ec:	4613      	mov	r3, r2
 80020ee:	80bb      	strh	r3, [r7, #4]
 80020f0:	88bb      	ldrh	r3, [r7, #4]
 80020f2:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 80020f6:	d103      	bne.n	8002100 <ButtonProcessEventHold+0x20>
 80020f8:	79fb      	ldrb	r3, [r7, #7]
 80020fa:	3330      	adds	r3, #48	; 0x30
 80020fc:	73fb      	strb	r3, [r7, #15]
 80020fe:	e015      	b.n	800212c <ButtonProcessEventHold+0x4c>
 8002100:	88bb      	ldrh	r3, [r7, #4]
 8002102:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002106:	d103      	bne.n	8002110 <ButtonProcessEventHold+0x30>
 8002108:	79fb      	ldrb	r3, [r7, #7]
 800210a:	332a      	adds	r3, #42	; 0x2a
 800210c:	73fb      	strb	r3, [r7, #15]
 800210e:	e00d      	b.n	800212c <ButtonProcessEventHold+0x4c>
 8002110:	88bb      	ldrh	r3, [r7, #4]
 8002112:	f5b3 7f16 	cmp.w	r3, #600	; 0x258
 8002116:	d103      	bne.n	8002120 <ButtonProcessEventHold+0x40>
 8002118:	79fb      	ldrb	r3, [r7, #7]
 800211a:	3324      	adds	r3, #36	; 0x24
 800211c:	73fb      	strb	r3, [r7, #15]
 800211e:	e005      	b.n	800212c <ButtonProcessEventHold+0x4c>
 8002120:	88bb      	ldrh	r3, [r7, #4]
 8002122:	2bc8      	cmp	r3, #200	; 0xc8
 8002124:	d107      	bne.n	8002136 <ButtonProcessEventHold+0x56>
 8002126:	79fb      	ldrb	r3, [r7, #7]
 8002128:	331e      	adds	r3, #30
 800212a:	73fb      	strb	r3, [r7, #15]
 800212c:	7bfb      	ldrb	r3, [r7, #15]
 800212e:	4618      	mov	r0, r3
 8002130:	f000 f850 	bl	80021d4 <EventSchedulerAdd>
 8002134:	e000      	b.n	8002138 <ButtonProcessEventHold+0x58>
 8002136:	bf00      	nop
 8002138:	3710      	adds	r7, #16
 800213a:	46bd      	mov	sp, r7
 800213c:	bd80      	pop	{r7, pc}

0800213e <ButtonProcessEventRelease>:
 800213e:	b580      	push	{r7, lr}
 8002140:	b084      	sub	sp, #16
 8002142:	af00      	add	r7, sp, #0
 8002144:	4603      	mov	r3, r0
 8002146:	460a      	mov	r2, r1
 8002148:	71fb      	strb	r3, [r7, #7]
 800214a:	4613      	mov	r3, r2
 800214c:	80bb      	strh	r3, [r7, #4]
 800214e:	88bb      	ldrh	r3, [r7, #4]
 8002150:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8002154:	d303      	bcc.n	800215e <ButtonProcessEventRelease+0x20>
 8002156:	79fb      	ldrb	r3, [r7, #7]
 8002158:	3348      	adds	r3, #72	; 0x48
 800215a:	73fb      	strb	r3, [r7, #15]
 800215c:	e015      	b.n	800218a <ButtonProcessEventRelease+0x4c>
 800215e:	88bb      	ldrh	r3, [r7, #4]
 8002160:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002164:	d303      	bcc.n	800216e <ButtonProcessEventRelease+0x30>
 8002166:	79fb      	ldrb	r3, [r7, #7]
 8002168:	3342      	adds	r3, #66	; 0x42
 800216a:	73fb      	strb	r3, [r7, #15]
 800216c:	e00d      	b.n	800218a <ButtonProcessEventRelease+0x4c>
 800216e:	88bb      	ldrh	r3, [r7, #4]
 8002170:	f5b3 7f16 	cmp.w	r3, #600	; 0x258
 8002174:	d303      	bcc.n	800217e <ButtonProcessEventRelease+0x40>
 8002176:	79fb      	ldrb	r3, [r7, #7]
 8002178:	333c      	adds	r3, #60	; 0x3c
 800217a:	73fb      	strb	r3, [r7, #15]
 800217c:	e005      	b.n	800218a <ButtonProcessEventRelease+0x4c>
 800217e:	88bb      	ldrh	r3, [r7, #4]
 8002180:	2bc7      	cmp	r3, #199	; 0xc7
 8002182:	d907      	bls.n	8002194 <ButtonProcessEventRelease+0x56>
 8002184:	79fb      	ldrb	r3, [r7, #7]
 8002186:	3336      	adds	r3, #54	; 0x36
 8002188:	73fb      	strb	r3, [r7, #15]
 800218a:	7bfb      	ldrb	r3, [r7, #15]
 800218c:	4618      	mov	r0, r3
 800218e:	f000 f821 	bl	80021d4 <EventSchedulerAdd>
 8002192:	e000      	b.n	8002196 <ButtonProcessEventRelease+0x58>
 8002194:	bf00      	nop
 8002196:	3710      	adds	r7, #16
 8002198:	46bd      	mov	sp, r7
 800219a:	bd80      	pop	{r7, pc}

0800219c <EventSchedulerInit>:
 800219c:	b580      	push	{r7, lr}
 800219e:	b082      	sub	sp, #8
 80021a0:	af00      	add	r7, sp, #0
 80021a2:	6078      	str	r0, [r7, #4]
 80021a4:	687b      	ldr	r3, [r7, #4]
 80021a6:	2b00      	cmp	r3, #0
 80021a8:	d009      	beq.n	80021be <EventSchedulerInit+0x22>
 80021aa:	4a07      	ldr	r2, [pc, #28]	; (80021c8 <EventSchedulerInit+0x2c>)
 80021ac:	687b      	ldr	r3, [r7, #4]
 80021ae:	6013      	str	r3, [r2, #0]
 80021b0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80021b4:	2201      	movs	r2, #1
 80021b6:	4905      	ldr	r1, [pc, #20]	; (80021cc <EventSchedulerInit+0x30>)
 80021b8:	4805      	ldr	r0, [pc, #20]	; (80021d0 <EventSchedulerInit+0x34>)
 80021ba:	f001 ff05 	bl	8003fc8 <bufInit>
 80021be:	bf00      	nop
 80021c0:	3708      	adds	r7, #8
 80021c2:	46bd      	mov	sp, r7
 80021c4:	bd80      	pop	{r7, pc}
 80021c6:	bf00      	nop
 80021c8:	200002ec 	.word	0x200002ec
 80021cc:	200003f0 	.word	0x200003f0
 80021d0:	200002f0 	.word	0x200002f0

080021d4 <EventSchedulerAdd>:
 80021d4:	b580      	push	{r7, lr}
 80021d6:	b082      	sub	sp, #8
 80021d8:	af00      	add	r7, sp, #0
 80021da:	4603      	mov	r3, r0
 80021dc:	71fb      	strb	r3, [r7, #7]
 80021de:	1dfb      	adds	r3, r7, #7
 80021e0:	4619      	mov	r1, r3
 80021e2:	4806      	ldr	r0, [pc, #24]	; (80021fc <EventSchedulerAdd+0x28>)
 80021e4:	f001 ff56 	bl	8004094 <bufEnDat>
 80021e8:	4603      	mov	r3, r0
 80021ea:	2b00      	cmp	r3, #0
 80021ec:	d101      	bne.n	80021f2 <EventSchedulerAdd+0x1e>
 80021ee:	2301      	movs	r3, #1
 80021f0:	e000      	b.n	80021f4 <EventSchedulerAdd+0x20>
 80021f2:	2300      	movs	r3, #0
 80021f4:	4618      	mov	r0, r3
 80021f6:	3708      	adds	r7, #8
 80021f8:	46bd      	mov	sp, r7
 80021fa:	bd80      	pop	{r7, pc}
 80021fc:	200003f0 	.word	0x200003f0

08002200 <processEventScheduler>:
 8002200:	b580      	push	{r7, lr}
 8002202:	b082      	sub	sp, #8
 8002204:	af00      	add	r7, sp, #0
 8002206:	4b0a      	ldr	r3, [pc, #40]	; (8002230 <processEventScheduler+0x30>)
 8002208:	681b      	ldr	r3, [r3, #0]
 800220a:	2b00      	cmp	r3, #0
 800220c:	d00c      	beq.n	8002228 <processEventScheduler+0x28>
 800220e:	1dfb      	adds	r3, r7, #7
 8002210:	4619      	mov	r1, r3
 8002212:	4808      	ldr	r0, [pc, #32]	; (8002234 <processEventScheduler+0x34>)
 8002214:	f001 ff8c 	bl	8004130 <bufDeDat>
 8002218:	4603      	mov	r3, r0
 800221a:	2b00      	cmp	r3, #0
 800221c:	d104      	bne.n	8002228 <processEventScheduler+0x28>
 800221e:	4b04      	ldr	r3, [pc, #16]	; (8002230 <processEventScheduler+0x30>)
 8002220:	681b      	ldr	r3, [r3, #0]
 8002222:	79fa      	ldrb	r2, [r7, #7]
 8002224:	4610      	mov	r0, r2
 8002226:	4798      	blx	r3
 8002228:	bf00      	nop
 800222a:	3708      	adds	r7, #8
 800222c:	46bd      	mov	sp, r7
 800222e:	bd80      	pop	{r7, pc}
 8002230:	200002ec 	.word	0x200002ec
 8002234:	200003f0 	.word	0x200003f0

08002238 <NVIC_SetPriority>:
 8002238:	b480      	push	{r7}
 800223a:	b083      	sub	sp, #12
 800223c:	af00      	add	r7, sp, #0
 800223e:	4603      	mov	r3, r0
 8002240:	6039      	str	r1, [r7, #0]
 8002242:	71fb      	strb	r3, [r7, #7]
 8002244:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002248:	2b00      	cmp	r3, #0
 800224a:	da0b      	bge.n	8002264 <NVIC_SetPriority+0x2c>
 800224c:	683b      	ldr	r3, [r7, #0]
 800224e:	b2da      	uxtb	r2, r3
 8002250:	490c      	ldr	r1, [pc, #48]	; (8002284 <NVIC_SetPriority+0x4c>)
 8002252:	79fb      	ldrb	r3, [r7, #7]
 8002254:	f003 030f 	and.w	r3, r3, #15
 8002258:	3b04      	subs	r3, #4
 800225a:	0112      	lsls	r2, r2, #4
 800225c:	b2d2      	uxtb	r2, r2
 800225e:	440b      	add	r3, r1
 8002260:	761a      	strb	r2, [r3, #24]
 8002262:	e009      	b.n	8002278 <NVIC_SetPriority+0x40>
 8002264:	683b      	ldr	r3, [r7, #0]
 8002266:	b2da      	uxtb	r2, r3
 8002268:	4907      	ldr	r1, [pc, #28]	; (8002288 <NVIC_SetPriority+0x50>)
 800226a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800226e:	0112      	lsls	r2, r2, #4
 8002270:	b2d2      	uxtb	r2, r2
 8002272:	440b      	add	r3, r1
 8002274:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8002278:	bf00      	nop
 800227a:	370c      	adds	r7, #12
 800227c:	46bd      	mov	sp, r7
 800227e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002282:	4770      	bx	lr
 8002284:	e000ed00 	.word	0xe000ed00
 8002288:	e000e100 	.word	0xe000e100

0800228c <SysTick_Config>:
 800228c:	b580      	push	{r7, lr}
 800228e:	b082      	sub	sp, #8
 8002290:	af00      	add	r7, sp, #0
 8002292:	6078      	str	r0, [r7, #4]
 8002294:	687b      	ldr	r3, [r7, #4]
 8002296:	3b01      	subs	r3, #1
 8002298:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800229c:	d301      	bcc.n	80022a2 <SysTick_Config+0x16>
 800229e:	2301      	movs	r3, #1
 80022a0:	e00f      	b.n	80022c2 <SysTick_Config+0x36>
 80022a2:	4a0a      	ldr	r2, [pc, #40]	; (80022cc <SysTick_Config+0x40>)
 80022a4:	687b      	ldr	r3, [r7, #4]
 80022a6:	3b01      	subs	r3, #1
 80022a8:	6053      	str	r3, [r2, #4]
 80022aa:	210f      	movs	r1, #15
 80022ac:	f04f 30ff 	mov.w	r0, #4294967295
 80022b0:	f7ff ffc2 	bl	8002238 <NVIC_SetPriority>
 80022b4:	4b05      	ldr	r3, [pc, #20]	; (80022cc <SysTick_Config+0x40>)
 80022b6:	2200      	movs	r2, #0
 80022b8:	609a      	str	r2, [r3, #8]
 80022ba:	4b04      	ldr	r3, [pc, #16]	; (80022cc <SysTick_Config+0x40>)
 80022bc:	2207      	movs	r2, #7
 80022be:	601a      	str	r2, [r3, #0]
 80022c0:	2300      	movs	r3, #0
 80022c2:	4618      	mov	r0, r3
 80022c4:	3708      	adds	r7, #8
 80022c6:	46bd      	mov	sp, r7
 80022c8:	bd80      	pop	{r7, pc}
 80022ca:	bf00      	nop
 80022cc:	e000e010 	.word	0xe000e010

080022d0 <TimerInit>:
 80022d0:	b580      	push	{r7, lr}
 80022d2:	b084      	sub	sp, #16
 80022d4:	af00      	add	r7, sp, #0
 80022d6:	463b      	mov	r3, r7
 80022d8:	4618      	mov	r0, r3
 80022da:	f7ff f9e3 	bl	80016a4 <RCC_GetClocksFreq>
 80022de:	683b      	ldr	r3, [r7, #0]
 80022e0:	4a0a      	ldr	r2, [pc, #40]	; (800230c <TimerInit+0x3c>)
 80022e2:	fba2 2303 	umull	r2, r3, r2, r3
 80022e6:	099b      	lsrs	r3, r3, #6
 80022e8:	4618      	mov	r0, r3
 80022ea:	f7ff ffcf 	bl	800228c <SysTick_Config>
 80022ee:	2101      	movs	r1, #1
 80022f0:	f04f 30ff 	mov.w	r0, #4294967295
 80022f4:	f7ff ffa0 	bl	8002238 <NVIC_SetPriority>
 80022f8:	f44f 72c0 	mov.w	r2, #384	; 0x180
 80022fc:	2100      	movs	r1, #0
 80022fe:	4804      	ldr	r0, [pc, #16]	; (8002310 <TimerInit+0x40>)
 8002300:	f001 ff58 	bl	80041b4 <memsetl>
 8002304:	bf00      	nop
 8002306:	3710      	adds	r7, #16
 8002308:	46bd      	mov	sp, r7
 800230a:	bd80      	pop	{r7, pc}
 800230c:	10624dd3 	.word	0x10624dd3
 8002310:	20000400 	.word	0x20000400

08002314 <TimerStart>:
 8002314:	b590      	push	{r4, r7, lr}
 8002316:	b087      	sub	sp, #28
 8002318:	af00      	add	r7, sp, #0
 800231a:	60f8      	str	r0, [r7, #12]
 800231c:	60b9      	str	r1, [r7, #8]
 800231e:	603b      	str	r3, [r7, #0]
 8002320:	4613      	mov	r3, r2
 8002322:	71fb      	strb	r3, [r7, #7]
 8002324:	2300      	movs	r3, #0
 8002326:	75fb      	strb	r3, [r7, #23]
 8002328:	e04c      	b.n	80023c4 <TimerStart+0xb0>
 800232a:	7dfa      	ldrb	r2, [r7, #23]
 800232c:	4929      	ldr	r1, [pc, #164]	; (80023d4 <TimerStart+0xc0>)
 800232e:	4613      	mov	r3, r2
 8002330:	005b      	lsls	r3, r3, #1
 8002332:	4413      	add	r3, r2
 8002334:	00db      	lsls	r3, r3, #3
 8002336:	440b      	add	r3, r1
 8002338:	3310      	adds	r3, #16
 800233a:	681b      	ldr	r3, [r3, #0]
 800233c:	2b00      	cmp	r3, #0
 800233e:	d13e      	bne.n	80023be <TimerStart+0xaa>
 8002340:	7dfa      	ldrb	r2, [r7, #23]
 8002342:	4924      	ldr	r1, [pc, #144]	; (80023d4 <TimerStart+0xc0>)
 8002344:	4613      	mov	r3, r2
 8002346:	005b      	lsls	r3, r3, #1
 8002348:	4413      	add	r3, r2
 800234a:	00db      	lsls	r3, r3, #3
 800234c:	440b      	add	r3, r1
 800234e:	68fa      	ldr	r2, [r7, #12]
 8002350:	601a      	str	r2, [r3, #0]
 8002352:	7dfa      	ldrb	r2, [r7, #23]
 8002354:	491f      	ldr	r1, [pc, #124]	; (80023d4 <TimerStart+0xc0>)
 8002356:	4613      	mov	r3, r2
 8002358:	005b      	lsls	r3, r3, #1
 800235a:	4413      	add	r3, r2
 800235c:	00db      	lsls	r3, r3, #3
 800235e:	440b      	add	r3, r1
 8002360:	3310      	adds	r3, #16
 8002362:	683a      	ldr	r2, [r7, #0]
 8002364:	601a      	str	r2, [r3, #0]
 8002366:	7dfa      	ldrb	r2, [r7, #23]
 8002368:	491a      	ldr	r1, [pc, #104]	; (80023d4 <TimerStart+0xc0>)
 800236a:	4613      	mov	r3, r2
 800236c:	005b      	lsls	r3, r3, #1
 800236e:	4413      	add	r3, r2
 8002370:	00db      	lsls	r3, r3, #3
 8002372:	440b      	add	r3, r1
 8002374:	330c      	adds	r3, #12
 8002376:	79fa      	ldrb	r2, [r7, #7]
 8002378:	701a      	strb	r2, [r3, #0]
 800237a:	7dfa      	ldrb	r2, [r7, #23]
 800237c:	4915      	ldr	r1, [pc, #84]	; (80023d4 <TimerStart+0xc0>)
 800237e:	4613      	mov	r3, r2
 8002380:	005b      	lsls	r3, r3, #1
 8002382:	4413      	add	r3, r2
 8002384:	00db      	lsls	r3, r3, #3
 8002386:	440b      	add	r3, r1
 8002388:	3314      	adds	r3, #20
 800238a:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800238c:	601a      	str	r2, [r3, #0]
 800238e:	7dfc      	ldrb	r4, [r7, #23]
 8002390:	f000 f872 	bl	8002478 <GetMilSecTick>
 8002394:	4601      	mov	r1, r0
 8002396:	4a0f      	ldr	r2, [pc, #60]	; (80023d4 <TimerStart+0xc0>)
 8002398:	4623      	mov	r3, r4
 800239a:	005b      	lsls	r3, r3, #1
 800239c:	4423      	add	r3, r4
 800239e:	00db      	lsls	r3, r3, #3
 80023a0:	4413      	add	r3, r2
 80023a2:	3304      	adds	r3, #4
 80023a4:	6019      	str	r1, [r3, #0]
 80023a6:	7dfa      	ldrb	r2, [r7, #23]
 80023a8:	490a      	ldr	r1, [pc, #40]	; (80023d4 <TimerStart+0xc0>)
 80023aa:	4613      	mov	r3, r2
 80023ac:	005b      	lsls	r3, r3, #1
 80023ae:	4413      	add	r3, r2
 80023b0:	00db      	lsls	r3, r3, #3
 80023b2:	440b      	add	r3, r1
 80023b4:	3308      	adds	r3, #8
 80023b6:	68ba      	ldr	r2, [r7, #8]
 80023b8:	601a      	str	r2, [r3, #0]
 80023ba:	7dfb      	ldrb	r3, [r7, #23]
 80023bc:	e006      	b.n	80023cc <TimerStart+0xb8>
 80023be:	7dfb      	ldrb	r3, [r7, #23]
 80023c0:	3301      	adds	r3, #1
 80023c2:	75fb      	strb	r3, [r7, #23]
 80023c4:	7dfb      	ldrb	r3, [r7, #23]
 80023c6:	2b0f      	cmp	r3, #15
 80023c8:	d9af      	bls.n	800232a <TimerStart+0x16>
 80023ca:	23ff      	movs	r3, #255	; 0xff
 80023cc:	4618      	mov	r0, r3
 80023ce:	371c      	adds	r7, #28
 80023d0:	46bd      	mov	sp, r7
 80023d2:	bd90      	pop	{r4, r7, pc}
 80023d4:	20000400 	.word	0x20000400

080023d8 <TimerStop>:
 80023d8:	b480      	push	{r7}
 80023da:	b083      	sub	sp, #12
 80023dc:	af00      	add	r7, sp, #0
 80023de:	4603      	mov	r3, r0
 80023e0:	71fb      	strb	r3, [r7, #7]
 80023e2:	79fb      	ldrb	r3, [r7, #7]
 80023e4:	2b0f      	cmp	r3, #15
 80023e6:	d80a      	bhi.n	80023fe <TimerStop+0x26>
 80023e8:	79fa      	ldrb	r2, [r7, #7]
 80023ea:	4922      	ldr	r1, [pc, #136]	; (8002474 <TimerStop+0x9c>)
 80023ec:	4613      	mov	r3, r2
 80023ee:	005b      	lsls	r3, r3, #1
 80023f0:	4413      	add	r3, r2
 80023f2:	00db      	lsls	r3, r3, #3
 80023f4:	440b      	add	r3, r1
 80023f6:	3310      	adds	r3, #16
 80023f8:	681b      	ldr	r3, [r3, #0]
 80023fa:	2b00      	cmp	r3, #0
 80023fc:	d101      	bne.n	8002402 <TimerStop+0x2a>
 80023fe:	2300      	movs	r3, #0
 8002400:	e031      	b.n	8002466 <TimerStop+0x8e>
 8002402:	79fa      	ldrb	r2, [r7, #7]
 8002404:	491b      	ldr	r1, [pc, #108]	; (8002474 <TimerStop+0x9c>)
 8002406:	4613      	mov	r3, r2
 8002408:	005b      	lsls	r3, r3, #1
 800240a:	4413      	add	r3, r2
 800240c:	00db      	lsls	r3, r3, #3
 800240e:	440b      	add	r3, r1
 8002410:	2200      	movs	r2, #0
 8002412:	601a      	str	r2, [r3, #0]
 8002414:	79fa      	ldrb	r2, [r7, #7]
 8002416:	4917      	ldr	r1, [pc, #92]	; (8002474 <TimerStop+0x9c>)
 8002418:	4613      	mov	r3, r2
 800241a:	005b      	lsls	r3, r3, #1
 800241c:	4413      	add	r3, r2
 800241e:	00db      	lsls	r3, r3, #3
 8002420:	440b      	add	r3, r1
 8002422:	3310      	adds	r3, #16
 8002424:	2200      	movs	r2, #0
 8002426:	601a      	str	r2, [r3, #0]
 8002428:	79fa      	ldrb	r2, [r7, #7]
 800242a:	4912      	ldr	r1, [pc, #72]	; (8002474 <TimerStop+0x9c>)
 800242c:	4613      	mov	r3, r2
 800242e:	005b      	lsls	r3, r3, #1
 8002430:	4413      	add	r3, r2
 8002432:	00db      	lsls	r3, r3, #3
 8002434:	440b      	add	r3, r1
 8002436:	330c      	adds	r3, #12
 8002438:	2200      	movs	r2, #0
 800243a:	701a      	strb	r2, [r3, #0]
 800243c:	79fa      	ldrb	r2, [r7, #7]
 800243e:	490d      	ldr	r1, [pc, #52]	; (8002474 <TimerStop+0x9c>)
 8002440:	4613      	mov	r3, r2
 8002442:	005b      	lsls	r3, r3, #1
 8002444:	4413      	add	r3, r2
 8002446:	00db      	lsls	r3, r3, #3
 8002448:	440b      	add	r3, r1
 800244a:	3308      	adds	r3, #8
 800244c:	2200      	movs	r2, #0
 800244e:	601a      	str	r2, [r3, #0]
 8002450:	79fa      	ldrb	r2, [r7, #7]
 8002452:	4908      	ldr	r1, [pc, #32]	; (8002474 <TimerStop+0x9c>)
 8002454:	4613      	mov	r3, r2
 8002456:	005b      	lsls	r3, r3, #1
 8002458:	4413      	add	r3, r2
 800245a:	00db      	lsls	r3, r3, #3
 800245c:	440b      	add	r3, r1
 800245e:	3304      	adds	r3, #4
 8002460:	2200      	movs	r2, #0
 8002462:	601a      	str	r2, [r3, #0]
 8002464:	2301      	movs	r3, #1
 8002466:	4618      	mov	r0, r3
 8002468:	370c      	adds	r7, #12
 800246a:	46bd      	mov	sp, r7
 800246c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002470:	4770      	bx	lr
 8002472:	bf00      	nop
 8002474:	20000400 	.word	0x20000400

08002478 <GetMilSecTick>:
 8002478:	b480      	push	{r7}
 800247a:	af00      	add	r7, sp, #0
 800247c:	4b03      	ldr	r3, [pc, #12]	; (800248c <GetMilSecTick+0x14>)
 800247e:	681b      	ldr	r3, [r3, #0]
 8002480:	4618      	mov	r0, r3
 8002482:	46bd      	mov	sp, r7
 8002484:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002488:	4770      	bx	lr
 800248a:	bf00      	nop
 800248c:	20000580 	.word	0x20000580

08002490 <processTimerScheduler>:
 8002490:	b580      	push	{r7, lr}
 8002492:	b084      	sub	sp, #16
 8002494:	af00      	add	r7, sp, #0
 8002496:	2300      	movs	r3, #0
 8002498:	73fb      	strb	r3, [r7, #15]
 800249a:	e068      	b.n	800256e <processTimerScheduler+0xde>
 800249c:	7bfa      	ldrb	r2, [r7, #15]
 800249e:	4937      	ldr	r1, [pc, #220]	; (800257c <processTimerScheduler+0xec>)
 80024a0:	4613      	mov	r3, r2
 80024a2:	005b      	lsls	r3, r3, #1
 80024a4:	4413      	add	r3, r2
 80024a6:	00db      	lsls	r3, r3, #3
 80024a8:	440b      	add	r3, r1
 80024aa:	3310      	adds	r3, #16
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	2b00      	cmp	r3, #0
 80024b0:	d05a      	beq.n	8002568 <processTimerScheduler+0xd8>
 80024b2:	7bfb      	ldrb	r3, [r7, #15]
 80024b4:	4618      	mov	r0, r3
 80024b6:	f000 f863 	bl	8002580 <TimeExpired>
 80024ba:	4603      	mov	r3, r0
 80024bc:	2b00      	cmp	r3, #0
 80024be:	d053      	beq.n	8002568 <processTimerScheduler+0xd8>
 80024c0:	7bfa      	ldrb	r2, [r7, #15]
 80024c2:	492e      	ldr	r1, [pc, #184]	; (800257c <processTimerScheduler+0xec>)
 80024c4:	4613      	mov	r3, r2
 80024c6:	005b      	lsls	r3, r3, #1
 80024c8:	4413      	add	r3, r2
 80024ca:	00db      	lsls	r3, r3, #3
 80024cc:	440b      	add	r3, r1
 80024ce:	3310      	adds	r3, #16
 80024d0:	681b      	ldr	r3, [r3, #0]
 80024d2:	60bb      	str	r3, [r7, #8]
 80024d4:	7bfa      	ldrb	r2, [r7, #15]
 80024d6:	4929      	ldr	r1, [pc, #164]	; (800257c <processTimerScheduler+0xec>)
 80024d8:	4613      	mov	r3, r2
 80024da:	005b      	lsls	r3, r3, #1
 80024dc:	4413      	add	r3, r2
 80024de:	00db      	lsls	r3, r3, #3
 80024e0:	440b      	add	r3, r1
 80024e2:	3314      	adds	r3, #20
 80024e4:	681b      	ldr	r3, [r3, #0]
 80024e6:	607b      	str	r3, [r7, #4]
 80024e8:	7bfa      	ldrb	r2, [r7, #15]
 80024ea:	4924      	ldr	r1, [pc, #144]	; (800257c <processTimerScheduler+0xec>)
 80024ec:	4613      	mov	r3, r2
 80024ee:	005b      	lsls	r3, r3, #1
 80024f0:	4413      	add	r3, r2
 80024f2:	00db      	lsls	r3, r3, #3
 80024f4:	440b      	add	r3, r1
 80024f6:	330c      	adds	r3, #12
 80024f8:	781b      	ldrb	r3, [r3, #0]
 80024fa:	b2db      	uxtb	r3, r3
 80024fc:	2bff      	cmp	r3, #255	; 0xff
 80024fe:	d020      	beq.n	8002542 <processTimerScheduler+0xb2>
 8002500:	7bfa      	ldrb	r2, [r7, #15]
 8002502:	491e      	ldr	r1, [pc, #120]	; (800257c <processTimerScheduler+0xec>)
 8002504:	4613      	mov	r3, r2
 8002506:	005b      	lsls	r3, r3, #1
 8002508:	4413      	add	r3, r2
 800250a:	00db      	lsls	r3, r3, #3
 800250c:	440b      	add	r3, r1
 800250e:	330c      	adds	r3, #12
 8002510:	781b      	ldrb	r3, [r3, #0]
 8002512:	b2db      	uxtb	r3, r3
 8002514:	2b00      	cmp	r3, #0
 8002516:	d014      	beq.n	8002542 <processTimerScheduler+0xb2>
 8002518:	7bfa      	ldrb	r2, [r7, #15]
 800251a:	4918      	ldr	r1, [pc, #96]	; (800257c <processTimerScheduler+0xec>)
 800251c:	4613      	mov	r3, r2
 800251e:	005b      	lsls	r3, r3, #1
 8002520:	4413      	add	r3, r2
 8002522:	00db      	lsls	r3, r3, #3
 8002524:	440b      	add	r3, r1
 8002526:	330c      	adds	r3, #12
 8002528:	781b      	ldrb	r3, [r3, #0]
 800252a:	b2db      	uxtb	r3, r3
 800252c:	3b01      	subs	r3, #1
 800252e:	b2d8      	uxtb	r0, r3
 8002530:	4912      	ldr	r1, [pc, #72]	; (800257c <processTimerScheduler+0xec>)
 8002532:	4613      	mov	r3, r2
 8002534:	005b      	lsls	r3, r3, #1
 8002536:	4413      	add	r3, r2
 8002538:	00db      	lsls	r3, r3, #3
 800253a:	440b      	add	r3, r1
 800253c:	330c      	adds	r3, #12
 800253e:	4602      	mov	r2, r0
 8002540:	701a      	strb	r2, [r3, #0]
 8002542:	7bfa      	ldrb	r2, [r7, #15]
 8002544:	490d      	ldr	r1, [pc, #52]	; (800257c <processTimerScheduler+0xec>)
 8002546:	4613      	mov	r3, r2
 8002548:	005b      	lsls	r3, r3, #1
 800254a:	4413      	add	r3, r2
 800254c:	00db      	lsls	r3, r3, #3
 800254e:	440b      	add	r3, r1
 8002550:	330c      	adds	r3, #12
 8002552:	781b      	ldrb	r3, [r3, #0]
 8002554:	b2db      	uxtb	r3, r3
 8002556:	2b00      	cmp	r3, #0
 8002558:	d103      	bne.n	8002562 <processTimerScheduler+0xd2>
 800255a:	7bfb      	ldrb	r3, [r7, #15]
 800255c:	4618      	mov	r0, r3
 800255e:	f7ff ff3b 	bl	80023d8 <TimerStop>
 8002562:	68bb      	ldr	r3, [r7, #8]
 8002564:	6878      	ldr	r0, [r7, #4]
 8002566:	4798      	blx	r3
 8002568:	7bfb      	ldrb	r3, [r7, #15]
 800256a:	3301      	adds	r3, #1
 800256c:	73fb      	strb	r3, [r7, #15]
 800256e:	7bfb      	ldrb	r3, [r7, #15]
 8002570:	2b0f      	cmp	r3, #15
 8002572:	d993      	bls.n	800249c <processTimerScheduler+0xc>
 8002574:	bf00      	nop
 8002576:	3710      	adds	r7, #16
 8002578:	46bd      	mov	sp, r7
 800257a:	bd80      	pop	{r7, pc}
 800257c:	20000400 	.word	0x20000400

08002580 <TimeExpired>:
 8002580:	b580      	push	{r7, lr}
 8002582:	b084      	sub	sp, #16
 8002584:	af00      	add	r7, sp, #0
 8002586:	4603      	mov	r3, r0
 8002588:	71fb      	strb	r3, [r7, #7]
 800258a:	2300      	movs	r3, #0
 800258c:	60fb      	str	r3, [r7, #12]
 800258e:	b672      	cpsid	i
 8002590:	f7ff ff72 	bl	8002478 <GetMilSecTick>
 8002594:	60b8      	str	r0, [r7, #8]
 8002596:	79fb      	ldrb	r3, [r7, #7]
 8002598:	2b0f      	cmp	r3, #15
 800259a:	d80a      	bhi.n	80025b2 <TimeExpired+0x32>
 800259c:	79fa      	ldrb	r2, [r7, #7]
 800259e:	492a      	ldr	r1, [pc, #168]	; (8002648 <TimeExpired+0xc8>)
 80025a0:	4613      	mov	r3, r2
 80025a2:	005b      	lsls	r3, r3, #1
 80025a4:	4413      	add	r3, r2
 80025a6:	00db      	lsls	r3, r3, #3
 80025a8:	440b      	add	r3, r1
 80025aa:	3310      	adds	r3, #16
 80025ac:	681b      	ldr	r3, [r3, #0]
 80025ae:	2b00      	cmp	r3, #0
 80025b0:	d102      	bne.n	80025b8 <TimeExpired+0x38>
 80025b2:	b662      	cpsie	i
 80025b4:	2300      	movs	r3, #0
 80025b6:	e042      	b.n	800263e <TimeExpired+0xbe>
 80025b8:	79fa      	ldrb	r2, [r7, #7]
 80025ba:	4923      	ldr	r1, [pc, #140]	; (8002648 <TimeExpired+0xc8>)
 80025bc:	4613      	mov	r3, r2
 80025be:	005b      	lsls	r3, r3, #1
 80025c0:	4413      	add	r3, r2
 80025c2:	00db      	lsls	r3, r3, #3
 80025c4:	440b      	add	r3, r1
 80025c6:	3304      	adds	r3, #4
 80025c8:	681b      	ldr	r3, [r3, #0]
 80025ca:	68ba      	ldr	r2, [r7, #8]
 80025cc:	429a      	cmp	r2, r3
 80025ce:	d30c      	bcc.n	80025ea <TimeExpired+0x6a>
 80025d0:	79fa      	ldrb	r2, [r7, #7]
 80025d2:	491d      	ldr	r1, [pc, #116]	; (8002648 <TimeExpired+0xc8>)
 80025d4:	4613      	mov	r3, r2
 80025d6:	005b      	lsls	r3, r3, #1
 80025d8:	4413      	add	r3, r2
 80025da:	00db      	lsls	r3, r3, #3
 80025dc:	440b      	add	r3, r1
 80025de:	3304      	adds	r3, #4
 80025e0:	681b      	ldr	r3, [r3, #0]
 80025e2:	68ba      	ldr	r2, [r7, #8]
 80025e4:	1ad3      	subs	r3, r2, r3
 80025e6:	60fb      	str	r3, [r7, #12]
 80025e8:	e00e      	b.n	8002608 <TimeExpired+0x88>
 80025ea:	79fa      	ldrb	r2, [r7, #7]
 80025ec:	4916      	ldr	r1, [pc, #88]	; (8002648 <TimeExpired+0xc8>)
 80025ee:	4613      	mov	r3, r2
 80025f0:	005b      	lsls	r3, r3, #1
 80025f2:	4413      	add	r3, r2
 80025f4:	00db      	lsls	r3, r3, #3
 80025f6:	440b      	add	r3, r1
 80025f8:	3304      	adds	r3, #4
 80025fa:	681a      	ldr	r2, [r3, #0]
 80025fc:	68bb      	ldr	r3, [r7, #8]
 80025fe:	1ad3      	subs	r3, r2, r3
 8002600:	60fb      	str	r3, [r7, #12]
 8002602:	68fb      	ldr	r3, [r7, #12]
 8002604:	43db      	mvns	r3, r3
 8002606:	60fb      	str	r3, [r7, #12]
 8002608:	79fa      	ldrb	r2, [r7, #7]
 800260a:	490f      	ldr	r1, [pc, #60]	; (8002648 <TimeExpired+0xc8>)
 800260c:	4613      	mov	r3, r2
 800260e:	005b      	lsls	r3, r3, #1
 8002610:	4413      	add	r3, r2
 8002612:	00db      	lsls	r3, r3, #3
 8002614:	440b      	add	r3, r1
 8002616:	3308      	adds	r3, #8
 8002618:	681b      	ldr	r3, [r3, #0]
 800261a:	68fa      	ldr	r2, [r7, #12]
 800261c:	429a      	cmp	r2, r3
 800261e:	d202      	bcs.n	8002626 <TimeExpired+0xa6>
 8002620:	b662      	cpsie	i
 8002622:	2300      	movs	r3, #0
 8002624:	e00b      	b.n	800263e <TimeExpired+0xbe>
 8002626:	79fa      	ldrb	r2, [r7, #7]
 8002628:	4907      	ldr	r1, [pc, #28]	; (8002648 <TimeExpired+0xc8>)
 800262a:	4613      	mov	r3, r2
 800262c:	005b      	lsls	r3, r3, #1
 800262e:	4413      	add	r3, r2
 8002630:	00db      	lsls	r3, r3, #3
 8002632:	440b      	add	r3, r1
 8002634:	3304      	adds	r3, #4
 8002636:	68ba      	ldr	r2, [r7, #8]
 8002638:	601a      	str	r2, [r3, #0]
 800263a:	b662      	cpsie	i
 800263c:	2301      	movs	r3, #1
 800263e:	4618      	mov	r0, r3
 8002640:	3710      	adds	r7, #16
 8002642:	46bd      	mov	sp, r7
 8002644:	bd80      	pop	{r7, pc}
 8002646:	bf00      	nop
 8002648:	20000400 	.word	0x20000400

0800264c <SysTick_Handler>:
 800264c:	b480      	push	{r7}
 800264e:	af00      	add	r7, sp, #0
 8002650:	4b04      	ldr	r3, [pc, #16]	; (8002664 <SysTick_Handler+0x18>)
 8002652:	681b      	ldr	r3, [r3, #0]
 8002654:	3301      	adds	r3, #1
 8002656:	4a03      	ldr	r2, [pc, #12]	; (8002664 <SysTick_Handler+0x18>)
 8002658:	6013      	str	r3, [r2, #0]
 800265a:	bf00      	nop
 800265c:	46bd      	mov	sp, r7
 800265e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002662:	4770      	bx	lr
 8002664:	20000580 	.word	0x20000580

08002668 <delayMicroseconds>:
 8002668:	b480      	push	{r7}
 800266a:	b083      	sub	sp, #12
 800266c:	af00      	add	r7, sp, #0
 800266e:	6078      	str	r0, [r7, #4]
 8002670:	bf00      	nop
 8002672:	370c      	adds	r7, #12
 8002674:	46bd      	mov	sp, r7
 8002676:	f85d 7b04 	ldr.w	r7, [sp], #4
 800267a:	4770      	bx	lr

0800267c <ucg_gpio_init>:
 800267c:	b580      	push	{r7, lr}
 800267e:	b082      	sub	sp, #8
 8002680:	af00      	add	r7, sp, #0
 8002682:	2101      	movs	r1, #1
 8002684:	2007      	movs	r0, #7
 8002686:	f7ff f8b5 	bl	80017f4 <RCC_AHB1PeriphClockCmd>
 800268a:	2301      	movs	r3, #1
 800268c:	713b      	strb	r3, [r7, #4]
 800268e:	2303      	movs	r3, #3
 8002690:	717b      	strb	r3, [r7, #5]
 8002692:	2300      	movs	r3, #0
 8002694:	71bb      	strb	r3, [r7, #6]
 8002696:	2300      	movs	r3, #0
 8002698:	71fb      	strb	r3, [r7, #7]
 800269a:	f44f 7368 	mov.w	r3, #928	; 0x3a0
 800269e:	603b      	str	r3, [r7, #0]
 80026a0:	463b      	mov	r3, r7
 80026a2:	4619      	mov	r1, r3
 80026a4:	480a      	ldr	r0, [pc, #40]	; (80026d0 <ucg_gpio_init+0x54>)
 80026a6:	f7fe fef3 	bl	8001490 <GPIO_Init>
 80026aa:	f44f 6388 	mov.w	r3, #1088	; 0x440
 80026ae:	603b      	str	r3, [r7, #0]
 80026b0:	463b      	mov	r3, r7
 80026b2:	4619      	mov	r1, r3
 80026b4:	4807      	ldr	r0, [pc, #28]	; (80026d4 <ucg_gpio_init+0x58>)
 80026b6:	f7fe feeb 	bl	8001490 <GPIO_Init>
 80026ba:	2380      	movs	r3, #128	; 0x80
 80026bc:	603b      	str	r3, [r7, #0]
 80026be:	463b      	mov	r3, r7
 80026c0:	4619      	mov	r1, r3
 80026c2:	4805      	ldr	r0, [pc, #20]	; (80026d8 <ucg_gpio_init+0x5c>)
 80026c4:	f7fe fee4 	bl	8001490 <GPIO_Init>
 80026c8:	bf00      	nop
 80026ca:	3708      	adds	r7, #8
 80026cc:	46bd      	mov	sp, r7
 80026ce:	bd80      	pop	{r7, pc}
 80026d0:	40020000 	.word	0x40020000
 80026d4:	40020400 	.word	0x40020400
 80026d8:	40020800 	.word	0x40020800

080026dc <ucg_com_arduino_send_generic_SW_SPI>:
 80026dc:	b580      	push	{r7, lr}
 80026de:	b084      	sub	sp, #16
 80026e0:	af00      	add	r7, sp, #0
 80026e2:	6078      	str	r0, [r7, #4]
 80026e4:	460b      	mov	r3, r1
 80026e6:	70fb      	strb	r3, [r7, #3]
 80026e8:	2308      	movs	r3, #8
 80026ea:	73fb      	strb	r3, [r7, #15]
 80026ec:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80026f0:	2b00      	cmp	r3, #0
 80026f2:	da05      	bge.n	8002700 <ucg_com_arduino_send_generic_SW_SPI+0x24>
 80026f4:	2201      	movs	r2, #1
 80026f6:	2180      	movs	r1, #128	; 0x80
 80026f8:	4814      	ldr	r0, [pc, #80]	; (800274c <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 80026fa:	f7fe ff71 	bl	80015e0 <GPIO_WriteBit>
 80026fe:	e004      	b.n	800270a <ucg_com_arduino_send_generic_SW_SPI+0x2e>
 8002700:	2200      	movs	r2, #0
 8002702:	2180      	movs	r1, #128	; 0x80
 8002704:	4811      	ldr	r0, [pc, #68]	; (800274c <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8002706:	f7fe ff6b 	bl	80015e0 <GPIO_WriteBit>
 800270a:	2001      	movs	r0, #1
 800270c:	f7ff ffac 	bl	8002668 <delayMicroseconds>
 8002710:	2201      	movs	r2, #1
 8002712:	2120      	movs	r1, #32
 8002714:	480d      	ldr	r0, [pc, #52]	; (800274c <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8002716:	f7fe ff63 	bl	80015e0 <GPIO_WriteBit>
 800271a:	2001      	movs	r0, #1
 800271c:	f7ff ffa4 	bl	8002668 <delayMicroseconds>
 8002720:	7bfb      	ldrb	r3, [r7, #15]
 8002722:	3b01      	subs	r3, #1
 8002724:	73fb      	strb	r3, [r7, #15]
 8002726:	2200      	movs	r2, #0
 8002728:	2120      	movs	r1, #32
 800272a:	4808      	ldr	r0, [pc, #32]	; (800274c <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 800272c:	f7fe ff58 	bl	80015e0 <GPIO_WriteBit>
 8002730:	2001      	movs	r0, #1
 8002732:	f7ff ff99 	bl	8002668 <delayMicroseconds>
 8002736:	78fb      	ldrb	r3, [r7, #3]
 8002738:	005b      	lsls	r3, r3, #1
 800273a:	70fb      	strb	r3, [r7, #3]
 800273c:	7bfb      	ldrb	r3, [r7, #15]
 800273e:	2b00      	cmp	r3, #0
 8002740:	d1d4      	bne.n	80026ec <ucg_com_arduino_send_generic_SW_SPI+0x10>
 8002742:	bf00      	nop
 8002744:	3710      	adds	r7, #16
 8002746:	46bd      	mov	sp, r7
 8002748:	bd80      	pop	{r7, pc}
 800274a:	bf00      	nop
 800274c:	40020000 	.word	0x40020000

08002750 <ucg_com_arduino_generic_SW_SPI>:
 8002750:	b580      	push	{r7, lr}
 8002752:	b084      	sub	sp, #16
 8002754:	af00      	add	r7, sp, #0
 8002756:	60f8      	str	r0, [r7, #12]
 8002758:	607b      	str	r3, [r7, #4]
 800275a:	460b      	mov	r3, r1
 800275c:	817b      	strh	r3, [r7, #10]
 800275e:	4613      	mov	r3, r2
 8002760:	813b      	strh	r3, [r7, #8]
 8002762:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002766:	3b0a      	subs	r3, #10
 8002768:	2b0b      	cmp	r3, #11
 800276a:	f200 80dc 	bhi.w	8002926 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 800276e:	a201      	add	r2, pc, #4	; (adr r2, 8002774 <ucg_com_arduino_generic_SW_SPI+0x24>)
 8002770:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002774:	080027a5 	.word	0x080027a5
 8002778:	08002927 	.word	0x08002927
 800277c:	080027f7 	.word	0x080027f7
 8002780:	08002801 	.word	0x08002801
 8002784:	08002811 	.word	0x08002811
 8002788:	08002821 	.word	0x08002821
 800278c:	08002833 	.word	0x08002833
 8002790:	08002853 	.word	0x08002853
 8002794:	0800287b 	.word	0x0800287b
 8002798:	080028b1 	.word	0x080028b1
 800279c:	080028cf 	.word	0x080028cf
 80027a0:	0800291f 	.word	0x0800291f
 80027a4:	f7ff ff6a 	bl	800267c <ucg_gpio_init>
 80027a8:	2201      	movs	r2, #1
 80027aa:	2180      	movs	r1, #128	; 0x80
 80027ac:	4860      	ldr	r0, [pc, #384]	; (8002930 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 80027ae:	f7fe ff17 	bl	80015e0 <GPIO_WriteBit>
 80027b2:	2201      	movs	r2, #1
 80027b4:	2140      	movs	r1, #64	; 0x40
 80027b6:	485f      	ldr	r0, [pc, #380]	; (8002934 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 80027b8:	f7fe ff12 	bl	80015e0 <GPIO_WriteBit>
 80027bc:	2201      	movs	r2, #1
 80027be:	2180      	movs	r1, #128	; 0x80
 80027c0:	485d      	ldr	r0, [pc, #372]	; (8002938 <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 80027c2:	f7fe ff0d 	bl	80015e0 <GPIO_WriteBit>
 80027c6:	2201      	movs	r2, #1
 80027c8:	f44f 7100 	mov.w	r1, #512	; 0x200
 80027cc:	4858      	ldr	r0, [pc, #352]	; (8002930 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 80027ce:	f7fe ff07 	bl	80015e0 <GPIO_WriteBit>
 80027d2:	2200      	movs	r2, #0
 80027d4:	2120      	movs	r1, #32
 80027d6:	4856      	ldr	r0, [pc, #344]	; (8002930 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 80027d8:	f7fe ff02 	bl	80015e0 <GPIO_WriteBit>
 80027dc:	2201      	movs	r2, #1
 80027de:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80027e2:	4854      	ldr	r0, [pc, #336]	; (8002934 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 80027e4:	f7fe fefc 	bl	80015e0 <GPIO_WriteBit>
 80027e8:	2201      	movs	r2, #1
 80027ea:	f44f 7180 	mov.w	r1, #256	; 0x100
 80027ee:	4850      	ldr	r0, [pc, #320]	; (8002930 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 80027f0:	f7fe fef6 	bl	80015e0 <GPIO_WriteBit>
 80027f4:	e097      	b.n	8002926 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80027f6:	893b      	ldrh	r3, [r7, #8]
 80027f8:	4618      	mov	r0, r3
 80027fa:	f7ff ff35 	bl	8002668 <delayMicroseconds>
 80027fe:	e092      	b.n	8002926 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002800:	893b      	ldrh	r3, [r7, #8]
 8002802:	b2db      	uxtb	r3, r3
 8002804:	461a      	mov	r2, r3
 8002806:	2180      	movs	r1, #128	; 0x80
 8002808:	484b      	ldr	r0, [pc, #300]	; (8002938 <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 800280a:	f7fe fee9 	bl	80015e0 <GPIO_WriteBit>
 800280e:	e08a      	b.n	8002926 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002810:	893b      	ldrh	r3, [r7, #8]
 8002812:	b2db      	uxtb	r3, r3
 8002814:	461a      	mov	r2, r3
 8002816:	2140      	movs	r1, #64	; 0x40
 8002818:	4846      	ldr	r0, [pc, #280]	; (8002934 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 800281a:	f7fe fee1 	bl	80015e0 <GPIO_WriteBit>
 800281e:	e082      	b.n	8002926 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002820:	893b      	ldrh	r3, [r7, #8]
 8002822:	b2db      	uxtb	r3, r3
 8002824:	461a      	mov	r2, r3
 8002826:	f44f 7100 	mov.w	r1, #512	; 0x200
 800282a:	4841      	ldr	r0, [pc, #260]	; (8002930 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 800282c:	f7fe fed8 	bl	80015e0 <GPIO_WriteBit>
 8002830:	e079      	b.n	8002926 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002832:	893b      	ldrh	r3, [r7, #8]
 8002834:	b2db      	uxtb	r3, r3
 8002836:	4619      	mov	r1, r3
 8002838:	68f8      	ldr	r0, [r7, #12]
 800283a:	f7ff ff4f 	bl	80026dc <ucg_com_arduino_send_generic_SW_SPI>
 800283e:	e072      	b.n	8002926 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002840:	687b      	ldr	r3, [r7, #4]
 8002842:	781b      	ldrb	r3, [r3, #0]
 8002844:	4619      	mov	r1, r3
 8002846:	68f8      	ldr	r0, [r7, #12]
 8002848:	f7ff ff48 	bl	80026dc <ucg_com_arduino_send_generic_SW_SPI>
 800284c:	893b      	ldrh	r3, [r7, #8]
 800284e:	3b01      	subs	r3, #1
 8002850:	813b      	strh	r3, [r7, #8]
 8002852:	893b      	ldrh	r3, [r7, #8]
 8002854:	2b00      	cmp	r3, #0
 8002856:	d1f3      	bne.n	8002840 <ucg_com_arduino_generic_SW_SPI+0xf0>
 8002858:	e065      	b.n	8002926 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 800285a:	687b      	ldr	r3, [r7, #4]
 800285c:	781b      	ldrb	r3, [r3, #0]
 800285e:	4619      	mov	r1, r3
 8002860:	68f8      	ldr	r0, [r7, #12]
 8002862:	f7ff ff3b 	bl	80026dc <ucg_com_arduino_send_generic_SW_SPI>
 8002866:	687b      	ldr	r3, [r7, #4]
 8002868:	3301      	adds	r3, #1
 800286a:	781b      	ldrb	r3, [r3, #0]
 800286c:	4619      	mov	r1, r3
 800286e:	68f8      	ldr	r0, [r7, #12]
 8002870:	f7ff ff34 	bl	80026dc <ucg_com_arduino_send_generic_SW_SPI>
 8002874:	893b      	ldrh	r3, [r7, #8]
 8002876:	3b01      	subs	r3, #1
 8002878:	813b      	strh	r3, [r7, #8]
 800287a:	893b      	ldrh	r3, [r7, #8]
 800287c:	2b00      	cmp	r3, #0
 800287e:	d1ec      	bne.n	800285a <ucg_com_arduino_generic_SW_SPI+0x10a>
 8002880:	e051      	b.n	8002926 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002882:	687b      	ldr	r3, [r7, #4]
 8002884:	781b      	ldrb	r3, [r3, #0]
 8002886:	4619      	mov	r1, r3
 8002888:	68f8      	ldr	r0, [r7, #12]
 800288a:	f7ff ff27 	bl	80026dc <ucg_com_arduino_send_generic_SW_SPI>
 800288e:	687b      	ldr	r3, [r7, #4]
 8002890:	3301      	adds	r3, #1
 8002892:	781b      	ldrb	r3, [r3, #0]
 8002894:	4619      	mov	r1, r3
 8002896:	68f8      	ldr	r0, [r7, #12]
 8002898:	f7ff ff20 	bl	80026dc <ucg_com_arduino_send_generic_SW_SPI>
 800289c:	687b      	ldr	r3, [r7, #4]
 800289e:	3302      	adds	r3, #2
 80028a0:	781b      	ldrb	r3, [r3, #0]
 80028a2:	4619      	mov	r1, r3
 80028a4:	68f8      	ldr	r0, [r7, #12]
 80028a6:	f7ff ff19 	bl	80026dc <ucg_com_arduino_send_generic_SW_SPI>
 80028aa:	893b      	ldrh	r3, [r7, #8]
 80028ac:	3b01      	subs	r3, #1
 80028ae:	813b      	strh	r3, [r7, #8]
 80028b0:	893b      	ldrh	r3, [r7, #8]
 80028b2:	2b00      	cmp	r3, #0
 80028b4:	d1e5      	bne.n	8002882 <ucg_com_arduino_generic_SW_SPI+0x132>
 80028b6:	e036      	b.n	8002926 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80028b8:	687b      	ldr	r3, [r7, #4]
 80028ba:	1c5a      	adds	r2, r3, #1
 80028bc:	607a      	str	r2, [r7, #4]
 80028be:	781b      	ldrb	r3, [r3, #0]
 80028c0:	4619      	mov	r1, r3
 80028c2:	68f8      	ldr	r0, [r7, #12]
 80028c4:	f7ff ff0a 	bl	80026dc <ucg_com_arduino_send_generic_SW_SPI>
 80028c8:	893b      	ldrh	r3, [r7, #8]
 80028ca:	3b01      	subs	r3, #1
 80028cc:	813b      	strh	r3, [r7, #8]
 80028ce:	893b      	ldrh	r3, [r7, #8]
 80028d0:	2b00      	cmp	r3, #0
 80028d2:	d1f1      	bne.n	80028b8 <ucg_com_arduino_generic_SW_SPI+0x168>
 80028d4:	e027      	b.n	8002926 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80028d6:	687b      	ldr	r3, [r7, #4]
 80028d8:	781b      	ldrb	r3, [r3, #0]
 80028da:	2b00      	cmp	r3, #0
 80028dc:	d010      	beq.n	8002900 <ucg_com_arduino_generic_SW_SPI+0x1b0>
 80028de:	687b      	ldr	r3, [r7, #4]
 80028e0:	781b      	ldrb	r3, [r3, #0]
 80028e2:	2b01      	cmp	r3, #1
 80028e4:	d106      	bne.n	80028f4 <ucg_com_arduino_generic_SW_SPI+0x1a4>
 80028e6:	2200      	movs	r2, #0
 80028e8:	f44f 7100 	mov.w	r1, #512	; 0x200
 80028ec:	4810      	ldr	r0, [pc, #64]	; (8002930 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 80028ee:	f7fe fe77 	bl	80015e0 <GPIO_WriteBit>
 80028f2:	e005      	b.n	8002900 <ucg_com_arduino_generic_SW_SPI+0x1b0>
 80028f4:	2201      	movs	r2, #1
 80028f6:	f44f 7100 	mov.w	r1, #512	; 0x200
 80028fa:	480d      	ldr	r0, [pc, #52]	; (8002930 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 80028fc:	f7fe fe70 	bl	80015e0 <GPIO_WriteBit>
 8002900:	687b      	ldr	r3, [r7, #4]
 8002902:	3301      	adds	r3, #1
 8002904:	607b      	str	r3, [r7, #4]
 8002906:	687b      	ldr	r3, [r7, #4]
 8002908:	781b      	ldrb	r3, [r3, #0]
 800290a:	4619      	mov	r1, r3
 800290c:	68f8      	ldr	r0, [r7, #12]
 800290e:	f7ff fee5 	bl	80026dc <ucg_com_arduino_send_generic_SW_SPI>
 8002912:	687b      	ldr	r3, [r7, #4]
 8002914:	3301      	adds	r3, #1
 8002916:	607b      	str	r3, [r7, #4]
 8002918:	893b      	ldrh	r3, [r7, #8]
 800291a:	3b01      	subs	r3, #1
 800291c:	813b      	strh	r3, [r7, #8]
 800291e:	893b      	ldrh	r3, [r7, #8]
 8002920:	2b00      	cmp	r3, #0
 8002922:	d1d8      	bne.n	80028d6 <ucg_com_arduino_generic_SW_SPI+0x186>
 8002924:	bf00      	nop
 8002926:	2301      	movs	r3, #1
 8002928:	4618      	mov	r0, r3
 800292a:	3710      	adds	r7, #16
 800292c:	46bd      	mov	sp, r7
 800292e:	bd80      	pop	{r7, pc}
 8002930:	40020000 	.word	0x40020000
 8002934:	40020400 	.word	0x40020400
 8002938:	40020800 	.word	0x40020800

0800293c <Ucglib4WireSWSPI_begin>:
 800293c:	b580      	push	{r7, lr}
 800293e:	b082      	sub	sp, #8
 8002940:	af00      	add	r7, sp, #0
 8002942:	6078      	str	r0, [r7, #4]
 8002944:	460b      	mov	r3, r1
 8002946:	70fb      	strb	r3, [r7, #3]
 8002948:	4b07      	ldr	r3, [pc, #28]	; (8002968 <Ucglib4WireSWSPI_begin+0x2c>)
 800294a:	4a08      	ldr	r2, [pc, #32]	; (800296c <Ucglib4WireSWSPI_begin+0x30>)
 800294c:	4908      	ldr	r1, [pc, #32]	; (8002970 <Ucglib4WireSWSPI_begin+0x34>)
 800294e:	6878      	ldr	r0, [r7, #4]
 8002950:	f001 f9a2 	bl	8003c98 <ucg_Init>
 8002954:	78fb      	ldrb	r3, [r7, #3]
 8002956:	4619      	mov	r1, r3
 8002958:	6878      	ldr	r0, [r7, #4]
 800295a:	f000 ff86 	bl	800386a <ucg_SetFontMode>
 800295e:	bf00      	nop
 8002960:	3708      	adds	r7, #8
 8002962:	46bd      	mov	sp, r7
 8002964:	bd80      	pop	{r7, pc}
 8002966:	bf00      	nop
 8002968:	08002751 	.word	0x08002751
 800296c:	08002fa9 	.word	0x08002fa9
 8002970:	080030d1 	.word	0x080030d1

08002974 <ucg_DrawBox>:
 8002974:	b580      	push	{r7, lr}
 8002976:	b084      	sub	sp, #16
 8002978:	af00      	add	r7, sp, #0
 800297a:	60f8      	str	r0, [r7, #12]
 800297c:	4608      	mov	r0, r1
 800297e:	4611      	mov	r1, r2
 8002980:	461a      	mov	r2, r3
 8002982:	4603      	mov	r3, r0
 8002984:	817b      	strh	r3, [r7, #10]
 8002986:	460b      	mov	r3, r1
 8002988:	813b      	strh	r3, [r7, #8]
 800298a:	4613      	mov	r3, r2
 800298c:	80fb      	strh	r3, [r7, #6]
 800298e:	e014      	b.n	80029ba <ucg_DrawBox+0x46>
 8002990:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002994:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8002998:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800299c:	68f8      	ldr	r0, [r7, #12]
 800299e:	f001 f9ed 	bl	8003d7c <ucg_DrawHLine>
 80029a2:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 80029a6:	b29b      	uxth	r3, r3
 80029a8:	3b01      	subs	r3, #1
 80029aa:	b29b      	uxth	r3, r3
 80029ac:	833b      	strh	r3, [r7, #24]
 80029ae:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 80029b2:	b29b      	uxth	r3, r3
 80029b4:	3301      	adds	r3, #1
 80029b6:	b29b      	uxth	r3, r3
 80029b8:	813b      	strh	r3, [r7, #8]
 80029ba:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 80029be:	2b00      	cmp	r3, #0
 80029c0:	dce6      	bgt.n	8002990 <ucg_DrawBox+0x1c>
 80029c2:	bf00      	nop
 80029c4:	3710      	adds	r7, #16
 80029c6:	46bd      	mov	sp, r7
 80029c8:	bd80      	pop	{r7, pc}

080029ca <ucg_ClearScreen>:
 80029ca:	b580      	push	{r7, lr}
 80029cc:	b084      	sub	sp, #16
 80029ce:	af02      	add	r7, sp, #8
 80029d0:	6078      	str	r0, [r7, #4]
 80029d2:	2300      	movs	r3, #0
 80029d4:	9300      	str	r3, [sp, #0]
 80029d6:	2300      	movs	r3, #0
 80029d8:	2200      	movs	r2, #0
 80029da:	2100      	movs	r1, #0
 80029dc:	6878      	ldr	r0, [r7, #4]
 80029de:	f001 f9ec 	bl	8003dba <ucg_SetColor>
 80029e2:	6878      	ldr	r0, [r7, #4]
 80029e4:	f000 fb3b 	bl	800305e <ucg_SetMaxClipRange>
 80029e8:	687b      	ldr	r3, [r7, #4]
 80029ea:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80029ee:	687b      	ldr	r3, [r7, #4]
 80029f0:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80029f4:	9300      	str	r3, [sp, #0]
 80029f6:	4613      	mov	r3, r2
 80029f8:	2200      	movs	r2, #0
 80029fa:	2100      	movs	r1, #0
 80029fc:	6878      	ldr	r0, [r7, #4]
 80029fe:	f7ff ffb9 	bl	8002974 <ucg_DrawBox>
 8002a02:	23ff      	movs	r3, #255	; 0xff
 8002a04:	9300      	str	r3, [sp, #0]
 8002a06:	23ff      	movs	r3, #255	; 0xff
 8002a08:	22ff      	movs	r2, #255	; 0xff
 8002a0a:	2100      	movs	r1, #0
 8002a0c:	6878      	ldr	r0, [r7, #4]
 8002a0e:	f001 f9d4 	bl	8003dba <ucg_SetColor>
 8002a12:	bf00      	nop
 8002a14:	3708      	adds	r7, #8
 8002a16:	46bd      	mov	sp, r7
 8002a18:	bd80      	pop	{r7, pc}

08002a1a <ucg_ccs_init>:
 8002a1a:	b480      	push	{r7}
 8002a1c:	b083      	sub	sp, #12
 8002a1e:	af00      	add	r7, sp, #0
 8002a20:	6078      	str	r0, [r7, #4]
 8002a22:	4608      	mov	r0, r1
 8002a24:	4611      	mov	r1, r2
 8002a26:	461a      	mov	r2, r3
 8002a28:	4603      	mov	r3, r0
 8002a2a:	70fb      	strb	r3, [r7, #3]
 8002a2c:	460b      	mov	r3, r1
 8002a2e:	70bb      	strb	r3, [r7, #2]
 8002a30:	4613      	mov	r3, r2
 8002a32:	803b      	strh	r3, [r7, #0]
 8002a34:	687b      	ldr	r3, [r7, #4]
 8002a36:	78fa      	ldrb	r2, [r7, #3]
 8002a38:	705a      	strb	r2, [r3, #1]
 8002a3a:	78bb      	ldrb	r3, [r7, #2]
 8002a3c:	b29a      	uxth	r2, r3
 8002a3e:	78fb      	ldrb	r3, [r7, #3]
 8002a40:	b29b      	uxth	r3, r3
 8002a42:	1ad3      	subs	r3, r2, r3
 8002a44:	b29b      	uxth	r3, r3
 8002a46:	b21a      	sxth	r2, r3
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	809a      	strh	r2, [r3, #4]
 8002a4c:	883b      	ldrh	r3, [r7, #0]
 8002a4e:	3b01      	subs	r3, #1
 8002a50:	b29b      	uxth	r3, r3
 8002a52:	b21a      	sxth	r2, r3
 8002a54:	687b      	ldr	r3, [r7, #4]
 8002a56:	811a      	strh	r2, [r3, #8]
 8002a58:	687b      	ldr	r3, [r7, #4]
 8002a5a:	2201      	movs	r2, #1
 8002a5c:	805a      	strh	r2, [r3, #2]
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8002a64:	461a      	mov	r2, r3
 8002a66:	687b      	ldr	r3, [r7, #4]
 8002a68:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002a6c:	fb92 f3f3 	sdiv	r3, r2, r3
 8002a70:	b21a      	sxth	r2, r3
 8002a72:	687b      	ldr	r3, [r7, #4]
 8002a74:	80da      	strh	r2, [r3, #6]
 8002a76:	687b      	ldr	r3, [r7, #4]
 8002a78:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8002a7c:	2b00      	cmp	r3, #0
 8002a7e:	da0c      	bge.n	8002a9a <ucg_ccs_init+0x80>
 8002a80:	687b      	ldr	r3, [r7, #4]
 8002a82:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8002a86:	b29b      	uxth	r3, r3
 8002a88:	425b      	negs	r3, r3
 8002a8a:	b29b      	uxth	r3, r3
 8002a8c:	b21a      	sxth	r2, r3
 8002a8e:	687b      	ldr	r3, [r7, #4]
 8002a90:	809a      	strh	r2, [r3, #4]
 8002a92:	687b      	ldr	r3, [r7, #4]
 8002a94:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002a98:	805a      	strh	r2, [r3, #2]
 8002a9a:	687b      	ldr	r3, [r7, #4]
 8002a9c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8002aa0:	687a      	ldr	r2, [r7, #4]
 8002aa2:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8002aa6:	fb93 f1f2 	sdiv	r1, r3, r2
 8002aaa:	fb02 f201 	mul.w	r2, r2, r1
 8002aae:	1a9b      	subs	r3, r3, r2
 8002ab0:	b21a      	sxth	r2, r3
 8002ab2:	687b      	ldr	r3, [r7, #4]
 8002ab4:	815a      	strh	r2, [r3, #10]
 8002ab6:	687b      	ldr	r3, [r7, #4]
 8002ab8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002abc:	0fda      	lsrs	r2, r3, #31
 8002abe:	4413      	add	r3, r2
 8002ac0:	105b      	asrs	r3, r3, #1
 8002ac2:	b21a      	sxth	r2, r3
 8002ac4:	687b      	ldr	r3, [r7, #4]
 8002ac6:	819a      	strh	r2, [r3, #12]
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	78fa      	ldrb	r2, [r7, #3]
 8002acc:	701a      	strb	r2, [r3, #0]
 8002ace:	bf00      	nop
 8002ad0:	370c      	adds	r7, #12
 8002ad2:	46bd      	mov	sp, r7
 8002ad4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ad8:	4770      	bx	lr

08002ada <ucg_ccs_step>:
 8002ada:	b480      	push	{r7}
 8002adc:	b083      	sub	sp, #12
 8002ade:	af00      	add	r7, sp, #0
 8002ae0:	6078      	str	r0, [r7, #4]
 8002ae2:	687b      	ldr	r3, [r7, #4]
 8002ae4:	781a      	ldrb	r2, [r3, #0]
 8002ae6:	687b      	ldr	r3, [r7, #4]
 8002ae8:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8002aec:	b2db      	uxtb	r3, r3
 8002aee:	4413      	add	r3, r2
 8002af0:	b2da      	uxtb	r2, r3
 8002af2:	687b      	ldr	r3, [r7, #4]
 8002af4:	701a      	strb	r2, [r3, #0]
 8002af6:	687b      	ldr	r3, [r7, #4]
 8002af8:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 8002afc:	b29a      	uxth	r2, r3
 8002afe:	687b      	ldr	r3, [r7, #4]
 8002b00:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8002b04:	b29b      	uxth	r3, r3
 8002b06:	4413      	add	r3, r2
 8002b08:	b29b      	uxth	r3, r3
 8002b0a:	b21a      	sxth	r2, r3
 8002b0c:	687b      	ldr	r3, [r7, #4]
 8002b0e:	819a      	strh	r2, [r3, #12]
 8002b10:	687b      	ldr	r3, [r7, #4]
 8002b12:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8002b16:	687b      	ldr	r3, [r7, #4]
 8002b18:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002b1c:	429a      	cmp	r2, r3
 8002b1e:	db16      	blt.n	8002b4e <ucg_ccs_step+0x74>
 8002b20:	687b      	ldr	r3, [r7, #4]
 8002b22:	781a      	ldrb	r2, [r3, #0]
 8002b24:	687b      	ldr	r3, [r7, #4]
 8002b26:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8002b2a:	b2db      	uxtb	r3, r3
 8002b2c:	4413      	add	r3, r2
 8002b2e:	b2da      	uxtb	r2, r3
 8002b30:	687b      	ldr	r3, [r7, #4]
 8002b32:	701a      	strb	r2, [r3, #0]
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 8002b3a:	b29a      	uxth	r2, r3
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002b42:	b29b      	uxth	r3, r3
 8002b44:	1ad3      	subs	r3, r2, r3
 8002b46:	b29b      	uxth	r3, r3
 8002b48:	b21a      	sxth	r2, r3
 8002b4a:	687b      	ldr	r3, [r7, #4]
 8002b4c:	819a      	strh	r2, [r3, #12]
 8002b4e:	bf00      	nop
 8002b50:	370c      	adds	r7, #12
 8002b52:	46bd      	mov	sp, r7
 8002b54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b58:	4770      	bx	lr

08002b5a <ucg_ccs_seek>:
 8002b5a:	b480      	push	{r7}
 8002b5c:	b085      	sub	sp, #20
 8002b5e:	af00      	add	r7, sp, #0
 8002b60:	6078      	str	r0, [r7, #4]
 8002b62:	460b      	mov	r3, r1
 8002b64:	807b      	strh	r3, [r7, #2]
 8002b66:	687b      	ldr	r3, [r7, #4]
 8002b68:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8002b6c:	b2da      	uxtb	r2, r3
 8002b6e:	687b      	ldr	r3, [r7, #4]
 8002b70:	701a      	strb	r2, [r3, #0]
 8002b72:	687b      	ldr	r3, [r7, #4]
 8002b74:	781a      	ldrb	r2, [r3, #0]
 8002b76:	887b      	ldrh	r3, [r7, #2]
 8002b78:	b2db      	uxtb	r3, r3
 8002b7a:	fb12 f303 	smulbb	r3, r2, r3
 8002b7e:	b2da      	uxtb	r2, r3
 8002b80:	687b      	ldr	r3, [r7, #4]
 8002b82:	701a      	strb	r2, [r3, #0]
 8002b84:	687b      	ldr	r3, [r7, #4]
 8002b86:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8002b8a:	b29a      	uxth	r2, r3
 8002b8c:	887b      	ldrh	r3, [r7, #2]
 8002b8e:	fb12 f303 	smulbb	r3, r2, r3
 8002b92:	b29a      	uxth	r2, r3
 8002b94:	687b      	ldr	r3, [r7, #4]
 8002b96:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002b9a:	0fd9      	lsrs	r1, r3, #31
 8002b9c:	440b      	add	r3, r1
 8002b9e:	105b      	asrs	r3, r3, #1
 8002ba0:	b21b      	sxth	r3, r3
 8002ba2:	b29b      	uxth	r3, r3
 8002ba4:	4413      	add	r3, r2
 8002ba6:	b29b      	uxth	r3, r3
 8002ba8:	81fb      	strh	r3, [r7, #14]
 8002baa:	687b      	ldr	r3, [r7, #4]
 8002bac:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8002bb0:	2b00      	cmp	r3, #0
 8002bb2:	db0e      	blt.n	8002bd2 <ucg_ccs_seek+0x78>
 8002bb4:	687b      	ldr	r3, [r7, #4]
 8002bb6:	781a      	ldrb	r2, [r3, #0]
 8002bb8:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002bbc:	6879      	ldr	r1, [r7, #4]
 8002bbe:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8002bc2:	fb93 f3f1 	sdiv	r3, r3, r1
 8002bc6:	b2db      	uxtb	r3, r3
 8002bc8:	4413      	add	r3, r2
 8002bca:	b2da      	uxtb	r2, r3
 8002bcc:	687b      	ldr	r3, [r7, #4]
 8002bce:	701a      	strb	r2, [r3, #0]
 8002bd0:	e00d      	b.n	8002bee <ucg_ccs_seek+0x94>
 8002bd2:	687b      	ldr	r3, [r7, #4]
 8002bd4:	781a      	ldrb	r2, [r3, #0]
 8002bd6:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002bda:	6879      	ldr	r1, [r7, #4]
 8002bdc:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8002be0:	fb93 f3f1 	sdiv	r3, r3, r1
 8002be4:	b2db      	uxtb	r3, r3
 8002be6:	1ad3      	subs	r3, r2, r3
 8002be8:	b2da      	uxtb	r2, r3
 8002bea:	687b      	ldr	r3, [r7, #4]
 8002bec:	701a      	strb	r2, [r3, #0]
 8002bee:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002bf2:	687a      	ldr	r2, [r7, #4]
 8002bf4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8002bf8:	fb93 f1f2 	sdiv	r1, r3, r2
 8002bfc:	fb02 f201 	mul.w	r2, r2, r1
 8002c00:	1a9b      	subs	r3, r3, r2
 8002c02:	b21a      	sxth	r2, r3
 8002c04:	687b      	ldr	r3, [r7, #4]
 8002c06:	819a      	strh	r2, [r3, #12]
 8002c08:	687b      	ldr	r3, [r7, #4]
 8002c0a:	781a      	ldrb	r2, [r3, #0]
 8002c0c:	687b      	ldr	r3, [r7, #4]
 8002c0e:	785b      	ldrb	r3, [r3, #1]
 8002c10:	4413      	add	r3, r2
 8002c12:	b2da      	uxtb	r2, r3
 8002c14:	687b      	ldr	r3, [r7, #4]
 8002c16:	701a      	strb	r2, [r3, #0]
 8002c18:	bf00      	nop
 8002c1a:	3714      	adds	r7, #20
 8002c1c:	46bd      	mov	sp, r7
 8002c1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c22:	4770      	bx	lr

08002c24 <ucg_dev_default_cb>:
 8002c24:	b580      	push	{r7, lr}
 8002c26:	b084      	sub	sp, #16
 8002c28:	af00      	add	r7, sp, #0
 8002c2a:	60f8      	str	r0, [r7, #12]
 8002c2c:	460b      	mov	r3, r1
 8002c2e:	607a      	str	r2, [r7, #4]
 8002c30:	817b      	strh	r3, [r7, #10]
 8002c32:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002c36:	2b0c      	cmp	r3, #12
 8002c38:	d00a      	beq.n	8002c50 <ucg_dev_default_cb+0x2c>
 8002c3a:	2b17      	cmp	r3, #23
 8002c3c:	d10f      	bne.n	8002c5e <ucg_dev_default_cb+0x3a>
 8002c3e:	68fb      	ldr	r3, [r7, #12]
 8002c40:	68db      	ldr	r3, [r3, #12]
 8002c42:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8002c46:	687a      	ldr	r2, [r7, #4]
 8002c48:	68f8      	ldr	r0, [r7, #12]
 8002c4a:	4798      	blx	r3
 8002c4c:	4603      	mov	r3, r0
 8002c4e:	e007      	b.n	8002c60 <ucg_dev_default_cb+0x3c>
 8002c50:	68fb      	ldr	r3, [r7, #12]
 8002c52:	687a      	ldr	r2, [r7, #4]
 8002c54:	3370      	adds	r3, #112	; 0x70
 8002c56:	6810      	ldr	r0, [r2, #0]
 8002c58:	6851      	ldr	r1, [r2, #4]
 8002c5a:	c303      	stmia	r3!, {r0, r1}
 8002c5c:	bf00      	nop
 8002c5e:	2301      	movs	r3, #1
 8002c60:	4618      	mov	r0, r3
 8002c62:	3710      	adds	r7, #16
 8002c64:	46bd      	mov	sp, r7
 8002c66:	bd80      	pop	{r7, pc}

08002c68 <ucg_ext_none>:
 8002c68:	b480      	push	{r7}
 8002c6a:	b085      	sub	sp, #20
 8002c6c:	af00      	add	r7, sp, #0
 8002c6e:	60f8      	str	r0, [r7, #12]
 8002c70:	460b      	mov	r3, r1
 8002c72:	607a      	str	r2, [r7, #4]
 8002c74:	817b      	strh	r3, [r7, #10]
 8002c76:	2301      	movs	r3, #1
 8002c78:	4618      	mov	r0, r3
 8002c7a:	3714      	adds	r7, #20
 8002c7c:	46bd      	mov	sp, r7
 8002c7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c82:	4770      	bx	lr

08002c84 <ucg_handle_st7735_l90fx>:
 8002c84:	b590      	push	{r4, r7, lr}
 8002c86:	b085      	sub	sp, #20
 8002c88:	af00      	add	r7, sp, #0
 8002c8a:	6078      	str	r0, [r7, #4]
 8002c8c:	6878      	ldr	r0, [r7, #4]
 8002c8e:	f001 fb47 	bl	8004320 <ucg_clip_l90fx>
 8002c92:	4603      	mov	r3, r0
 8002c94:	2b00      	cmp	r3, #0
 8002c96:	d053      	beq.n	8002d40 <ucg_handle_st7735_l90fx+0xbc>
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8002c9e:	2b01      	cmp	r3, #1
 8002ca0:	d008      	beq.n	8002cb4 <ucg_handle_st7735_l90fx+0x30>
 8002ca2:	2b02      	cmp	r3, #2
 8002ca4:	d00b      	beq.n	8002cbe <ucg_handle_st7735_l90fx+0x3a>
 8002ca6:	2b00      	cmp	r3, #0
 8002ca8:	d11b      	bne.n	8002ce2 <ucg_handle_st7735_l90fx+0x5e>
 8002caa:	4928      	ldr	r1, [pc, #160]	; (8002d4c <ucg_handle_st7735_l90fx+0xc8>)
 8002cac:	6878      	ldr	r0, [r7, #4]
 8002cae:	f001 fe65 	bl	800497c <ucg_com_SendCmdSeq>
 8002cb2:	e028      	b.n	8002d06 <ucg_handle_st7735_l90fx+0x82>
 8002cb4:	4926      	ldr	r1, [pc, #152]	; (8002d50 <ucg_handle_st7735_l90fx+0xcc>)
 8002cb6:	6878      	ldr	r0, [r7, #4]
 8002cb8:	f001 fe60 	bl	800497c <ucg_com_SendCmdSeq>
 8002cbc:	e023      	b.n	8002d06 <ucg_handle_st7735_l90fx+0x82>
 8002cbe:	687b      	ldr	r3, [r7, #4]
 8002cc0:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8002cc2:	81fb      	strh	r3, [r7, #14]
 8002cc4:	89fb      	ldrh	r3, [r7, #14]
 8002cc6:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 8002cca:	b29b      	uxth	r3, r3
 8002ccc:	b21a      	sxth	r2, r3
 8002cce:	687b      	ldr	r3, [r7, #4]
 8002cd0:	849a      	strh	r2, [r3, #36]	; 0x24
 8002cd2:	4920      	ldr	r1, [pc, #128]	; (8002d54 <ucg_handle_st7735_l90fx+0xd0>)
 8002cd4:	6878      	ldr	r0, [r7, #4]
 8002cd6:	f001 fe51 	bl	800497c <ucg_com_SendCmdSeq>
 8002cda:	687b      	ldr	r3, [r7, #4]
 8002cdc:	89fa      	ldrh	r2, [r7, #14]
 8002cde:	849a      	strh	r2, [r3, #36]	; 0x24
 8002ce0:	e011      	b.n	8002d06 <ucg_handle_st7735_l90fx+0x82>
 8002ce2:	687b      	ldr	r3, [r7, #4]
 8002ce4:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002ce6:	81fb      	strh	r3, [r7, #14]
 8002ce8:	89fb      	ldrh	r3, [r7, #14]
 8002cea:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 8002cee:	b29b      	uxth	r3, r3
 8002cf0:	b21a      	sxth	r2, r3
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	84da      	strh	r2, [r3, #38]	; 0x26
 8002cf6:	4918      	ldr	r1, [pc, #96]	; (8002d58 <ucg_handle_st7735_l90fx+0xd4>)
 8002cf8:	6878      	ldr	r0, [r7, #4]
 8002cfa:	f001 fe3f 	bl	800497c <ucg_com_SendCmdSeq>
 8002cfe:	687b      	ldr	r3, [r7, #4]
 8002d00:	89fa      	ldrh	r2, [r7, #14]
 8002d02:	84da      	strh	r2, [r3, #38]	; 0x26
 8002d04:	bf00      	nop
 8002d06:	687b      	ldr	r3, [r7, #4]
 8002d08:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8002d0c:	723b      	strb	r3, [r7, #8]
 8002d0e:	687b      	ldr	r3, [r7, #4]
 8002d10:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8002d14:	727b      	strb	r3, [r7, #9]
 8002d16:	687b      	ldr	r3, [r7, #4]
 8002d18:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 8002d1c:	72bb      	strb	r3, [r7, #10]
 8002d1e:	687b      	ldr	r3, [r7, #4]
 8002d20:	69dc      	ldr	r4, [r3, #28]
 8002d22:	687b      	ldr	r3, [r7, #4]
 8002d24:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8002d28:	b29a      	uxth	r2, r3
 8002d2a:	f107 0308 	add.w	r3, r7, #8
 8002d2e:	2113      	movs	r1, #19
 8002d30:	6878      	ldr	r0, [r7, #4]
 8002d32:	47a0      	blx	r4
 8002d34:	2101      	movs	r1, #1
 8002d36:	6878      	ldr	r0, [r7, #4]
 8002d38:	f001 fd6c 	bl	8004814 <ucg_com_SetCSLineStatus>
 8002d3c:	2301      	movs	r3, #1
 8002d3e:	e000      	b.n	8002d42 <ucg_handle_st7735_l90fx+0xbe>
 8002d40:	2300      	movs	r3, #0
 8002d42:	4618      	mov	r0, r3
 8002d44:	3714      	adds	r7, #20
 8002d46:	46bd      	mov	sp, r7
 8002d48:	bd90      	pop	{r4, r7, pc}
 8002d4a:	bf00      	nop
 8002d4c:	08005648 	.word	0x08005648
 8002d50:	08005668 	.word	0x08005668
 8002d54:	0800568c 	.word	0x0800568c
 8002d58:	080056b0 	.word	0x080056b0

08002d5c <ucg_handle_st7735_l90se>:
 8002d5c:	b590      	push	{r4, r7, lr}
 8002d5e:	b087      	sub	sp, #28
 8002d60:	af00      	add	r7, sp, #0
 8002d62:	6078      	str	r0, [r7, #4]
 8002d64:	2300      	movs	r3, #0
 8002d66:	75fb      	strb	r3, [r7, #23]
 8002d68:	e01a      	b.n	8002da0 <ucg_handle_st7735_l90se+0x44>
 8002d6a:	687b      	ldr	r3, [r7, #4]
 8002d6c:	f103 0146 	add.w	r1, r3, #70	; 0x46
 8002d70:	7dfa      	ldrb	r2, [r7, #23]
 8002d72:	4613      	mov	r3, r2
 8002d74:	00db      	lsls	r3, r3, #3
 8002d76:	1a9b      	subs	r3, r3, r2
 8002d78:	005b      	lsls	r3, r3, #1
 8002d7a:	18c8      	adds	r0, r1, r3
 8002d7c:	7dfb      	ldrb	r3, [r7, #23]
 8002d7e:	687a      	ldr	r2, [r7, #4]
 8002d80:	4413      	add	r3, r2
 8002d82:	f893 103a 	ldrb.w	r1, [r3, #58]	; 0x3a
 8002d86:	7dfb      	ldrb	r3, [r7, #23]
 8002d88:	687a      	ldr	r2, [r7, #4]
 8002d8a:	4413      	add	r3, r2
 8002d8c:	f893 203d 	ldrb.w	r2, [r3, #61]	; 0x3d
 8002d90:	687b      	ldr	r3, [r7, #4]
 8002d92:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8002d96:	f7ff fe40 	bl	8002a1a <ucg_ccs_init>
 8002d9a:	7dfb      	ldrb	r3, [r7, #23]
 8002d9c:	3301      	adds	r3, #1
 8002d9e:	75fb      	strb	r3, [r7, #23]
 8002da0:	7dfb      	ldrb	r3, [r7, #23]
 8002da2:	2b02      	cmp	r3, #2
 8002da4:	d9e1      	bls.n	8002d6a <ucg_handle_st7735_l90se+0xe>
 8002da6:	6878      	ldr	r0, [r7, #4]
 8002da8:	f001 fc3a 	bl	8004620 <ucg_clip_l90se>
 8002dac:	4603      	mov	r3, r0
 8002dae:	2b00      	cmp	r3, #0
 8002db0:	d071      	beq.n	8002e96 <ucg_handle_st7735_l90se+0x13a>
 8002db2:	687b      	ldr	r3, [r7, #4]
 8002db4:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8002db8:	2b01      	cmp	r3, #1
 8002dba:	d008      	beq.n	8002dce <ucg_handle_st7735_l90se+0x72>
 8002dbc:	2b02      	cmp	r3, #2
 8002dbe:	d00b      	beq.n	8002dd8 <ucg_handle_st7735_l90se+0x7c>
 8002dc0:	2b00      	cmp	r3, #0
 8002dc2:	d11b      	bne.n	8002dfc <ucg_handle_st7735_l90se+0xa0>
 8002dc4:	4936      	ldr	r1, [pc, #216]	; (8002ea0 <ucg_handle_st7735_l90se+0x144>)
 8002dc6:	6878      	ldr	r0, [r7, #4]
 8002dc8:	f001 fdd8 	bl	800497c <ucg_com_SendCmdSeq>
 8002dcc:	e028      	b.n	8002e20 <ucg_handle_st7735_l90se+0xc4>
 8002dce:	4935      	ldr	r1, [pc, #212]	; (8002ea4 <ucg_handle_st7735_l90se+0x148>)
 8002dd0:	6878      	ldr	r0, [r7, #4]
 8002dd2:	f001 fdd3 	bl	800497c <ucg_com_SendCmdSeq>
 8002dd6:	e023      	b.n	8002e20 <ucg_handle_st7735_l90se+0xc4>
 8002dd8:	687b      	ldr	r3, [r7, #4]
 8002dda:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8002ddc:	827b      	strh	r3, [r7, #18]
 8002dde:	8a7b      	ldrh	r3, [r7, #18]
 8002de0:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 8002de4:	b29b      	uxth	r3, r3
 8002de6:	b21a      	sxth	r2, r3
 8002de8:	687b      	ldr	r3, [r7, #4]
 8002dea:	849a      	strh	r2, [r3, #36]	; 0x24
 8002dec:	492e      	ldr	r1, [pc, #184]	; (8002ea8 <ucg_handle_st7735_l90se+0x14c>)
 8002dee:	6878      	ldr	r0, [r7, #4]
 8002df0:	f001 fdc4 	bl	800497c <ucg_com_SendCmdSeq>
 8002df4:	687b      	ldr	r3, [r7, #4]
 8002df6:	8a7a      	ldrh	r2, [r7, #18]
 8002df8:	849a      	strh	r2, [r3, #36]	; 0x24
 8002dfa:	e011      	b.n	8002e20 <ucg_handle_st7735_l90se+0xc4>
 8002dfc:	687b      	ldr	r3, [r7, #4]
 8002dfe:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002e00:	827b      	strh	r3, [r7, #18]
 8002e02:	8a7b      	ldrh	r3, [r7, #18]
 8002e04:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 8002e08:	b29b      	uxth	r3, r3
 8002e0a:	b21a      	sxth	r2, r3
 8002e0c:	687b      	ldr	r3, [r7, #4]
 8002e0e:	84da      	strh	r2, [r3, #38]	; 0x26
 8002e10:	4926      	ldr	r1, [pc, #152]	; (8002eac <ucg_handle_st7735_l90se+0x150>)
 8002e12:	6878      	ldr	r0, [r7, #4]
 8002e14:	f001 fdb2 	bl	800497c <ucg_com_SendCmdSeq>
 8002e18:	687b      	ldr	r3, [r7, #4]
 8002e1a:	8a7a      	ldrh	r2, [r7, #18]
 8002e1c:	84da      	strh	r2, [r3, #38]	; 0x26
 8002e1e:	bf00      	nop
 8002e20:	2300      	movs	r3, #0
 8002e22:	82bb      	strh	r3, [r7, #20]
 8002e24:	e02a      	b.n	8002e7c <ucg_handle_st7735_l90se+0x120>
 8002e26:	687b      	ldr	r3, [r7, #4]
 8002e28:	f893 3046 	ldrb.w	r3, [r3, #70]	; 0x46
 8002e2c:	733b      	strb	r3, [r7, #12]
 8002e2e:	687b      	ldr	r3, [r7, #4]
 8002e30:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 8002e34:	737b      	strb	r3, [r7, #13]
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	f893 3062 	ldrb.w	r3, [r3, #98]	; 0x62
 8002e3c:	73bb      	strb	r3, [r7, #14]
 8002e3e:	687b      	ldr	r3, [r7, #4]
 8002e40:	69dc      	ldr	r4, [r3, #28]
 8002e42:	f107 030c 	add.w	r3, r7, #12
 8002e46:	2201      	movs	r2, #1
 8002e48:	2113      	movs	r1, #19
 8002e4a:	6878      	ldr	r0, [r7, #4]
 8002e4c:	47a0      	blx	r4
 8002e4e:	687b      	ldr	r3, [r7, #4]
 8002e50:	3346      	adds	r3, #70	; 0x46
 8002e52:	4618      	mov	r0, r3
 8002e54:	f7ff fe41 	bl	8002ada <ucg_ccs_step>
 8002e58:	687b      	ldr	r3, [r7, #4]
 8002e5a:	3346      	adds	r3, #70	; 0x46
 8002e5c:	330e      	adds	r3, #14
 8002e5e:	4618      	mov	r0, r3
 8002e60:	f7ff fe3b 	bl	8002ada <ucg_ccs_step>
 8002e64:	687b      	ldr	r3, [r7, #4]
 8002e66:	3346      	adds	r3, #70	; 0x46
 8002e68:	331c      	adds	r3, #28
 8002e6a:	4618      	mov	r0, r3
 8002e6c:	f7ff fe35 	bl	8002ada <ucg_ccs_step>
 8002e70:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 8002e74:	b29b      	uxth	r3, r3
 8002e76:	3301      	adds	r3, #1
 8002e78:	b29b      	uxth	r3, r3
 8002e7a:	82bb      	strh	r3, [r7, #20]
 8002e7c:	687b      	ldr	r3, [r7, #4]
 8002e7e:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8002e82:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8002e86:	429a      	cmp	r2, r3
 8002e88:	dbcd      	blt.n	8002e26 <ucg_handle_st7735_l90se+0xca>
 8002e8a:	2101      	movs	r1, #1
 8002e8c:	6878      	ldr	r0, [r7, #4]
 8002e8e:	f001 fcc1 	bl	8004814 <ucg_com_SetCSLineStatus>
 8002e92:	2301      	movs	r3, #1
 8002e94:	e000      	b.n	8002e98 <ucg_handle_st7735_l90se+0x13c>
 8002e96:	2300      	movs	r3, #0
 8002e98:	4618      	mov	r0, r3
 8002e9a:	371c      	adds	r7, #28
 8002e9c:	46bd      	mov	sp, r7
 8002e9e:	bd90      	pop	{r4, r7, pc}
 8002ea0:	08005648 	.word	0x08005648
 8002ea4:	08005668 	.word	0x08005668
 8002ea8:	0800568c 	.word	0x0800568c
 8002eac:	080056b0 	.word	0x080056b0

08002eb0 <ucg_dev_ic_st7735_18>:
 8002eb0:	b590      	push	{r4, r7, lr}
 8002eb2:	b087      	sub	sp, #28
 8002eb4:	af00      	add	r7, sp, #0
 8002eb6:	60f8      	str	r0, [r7, #12]
 8002eb8:	460b      	mov	r3, r1
 8002eba:	607a      	str	r2, [r7, #4]
 8002ebc:	817b      	strh	r3, [r7, #10]
 8002ebe:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002ec2:	3b0a      	subs	r3, #10
 8002ec4:	2b0b      	cmp	r3, #11
 8002ec6:	d85f      	bhi.n	8002f88 <ucg_dev_ic_st7735_18+0xd8>
 8002ec8:	a201      	add	r2, pc, #4	; (adr r2, 8002ed0 <ucg_dev_ic_st7735_18+0x20>)
 8002eca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002ece:	bf00      	nop
 8002ed0:	08002f01 	.word	0x08002f01
 8002ed4:	08002f1b 	.word	0x08002f1b
 8002ed8:	08002f89 	.word	0x08002f89
 8002edc:	08002f89 	.word	0x08002f89
 8002ee0:	08002f89 	.word	0x08002f89
 8002ee4:	08002f27 	.word	0x08002f27
 8002ee8:	08002f89 	.word	0x08002f89
 8002eec:	08002f89 	.word	0x08002f89
 8002ef0:	08002f89 	.word	0x08002f89
 8002ef4:	08002f89 	.word	0x08002f89
 8002ef8:	08002f37 	.word	0x08002f37
 8002efc:	08002f7f 	.word	0x08002f7f
 8002f00:	68fb      	ldr	r3, [r7, #12]
 8002f02:	2202      	movs	r2, #2
 8002f04:	841a      	strh	r2, [r3, #32]
 8002f06:	68fb      	ldr	r3, [r7, #12]
 8002f08:	2201      	movs	r2, #1
 8002f0a:	845a      	strh	r2, [r3, #34]	; 0x22
 8002f0c:	2242      	movs	r2, #66	; 0x42
 8002f0e:	2164      	movs	r1, #100	; 0x64
 8002f10:	68f8      	ldr	r0, [r7, #12]
 8002f12:	f001 fbce 	bl	80046b2 <ucg_com_PowerUp>
 8002f16:	4603      	mov	r3, r0
 8002f18:	e03e      	b.n	8002f98 <ucg_dev_ic_st7735_18+0xe8>
 8002f1a:	4921      	ldr	r1, [pc, #132]	; (8002fa0 <ucg_dev_ic_st7735_18+0xf0>)
 8002f1c:	68f8      	ldr	r0, [r7, #12]
 8002f1e:	f001 fd2d 	bl	800497c <ucg_com_SendCmdSeq>
 8002f22:	2301      	movs	r3, #1
 8002f24:	e038      	b.n	8002f98 <ucg_dev_ic_st7735_18+0xe8>
 8002f26:	687b      	ldr	r3, [r7, #4]
 8002f28:	2280      	movs	r2, #128	; 0x80
 8002f2a:	801a      	strh	r2, [r3, #0]
 8002f2c:	687b      	ldr	r3, [r7, #4]
 8002f2e:	2280      	movs	r2, #128	; 0x80
 8002f30:	805a      	strh	r2, [r3, #2]
 8002f32:	2301      	movs	r3, #1
 8002f34:	e030      	b.n	8002f98 <ucg_dev_ic_st7735_18+0xe8>
 8002f36:	68f8      	ldr	r0, [r7, #12]
 8002f38:	f001 f9d9 	bl	80042ee <ucg_clip_is_pixel_visible>
 8002f3c:	4603      	mov	r3, r0
 8002f3e:	2b00      	cmp	r3, #0
 8002f40:	d01b      	beq.n	8002f7a <ucg_dev_ic_st7735_18+0xca>
 8002f42:	4918      	ldr	r1, [pc, #96]	; (8002fa4 <ucg_dev_ic_st7735_18+0xf4>)
 8002f44:	68f8      	ldr	r0, [r7, #12]
 8002f46:	f001 fd19 	bl	800497c <ucg_com_SendCmdSeq>
 8002f4a:	68fb      	ldr	r3, [r7, #12]
 8002f4c:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8002f50:	753b      	strb	r3, [r7, #20]
 8002f52:	68fb      	ldr	r3, [r7, #12]
 8002f54:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8002f58:	757b      	strb	r3, [r7, #21]
 8002f5a:	68fb      	ldr	r3, [r7, #12]
 8002f5c:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 8002f60:	75bb      	strb	r3, [r7, #22]
 8002f62:	68fb      	ldr	r3, [r7, #12]
 8002f64:	69dc      	ldr	r4, [r3, #28]
 8002f66:	f107 0314 	add.w	r3, r7, #20
 8002f6a:	2201      	movs	r2, #1
 8002f6c:	2113      	movs	r1, #19
 8002f6e:	68f8      	ldr	r0, [r7, #12]
 8002f70:	47a0      	blx	r4
 8002f72:	2101      	movs	r1, #1
 8002f74:	68f8      	ldr	r0, [r7, #12]
 8002f76:	f001 fc4d 	bl	8004814 <ucg_com_SetCSLineStatus>
 8002f7a:	2301      	movs	r3, #1
 8002f7c:	e00c      	b.n	8002f98 <ucg_dev_ic_st7735_18+0xe8>
 8002f7e:	68f8      	ldr	r0, [r7, #12]
 8002f80:	f7ff fe80 	bl	8002c84 <ucg_handle_st7735_l90fx>
 8002f84:	2301      	movs	r3, #1
 8002f86:	e007      	b.n	8002f98 <ucg_dev_ic_st7735_18+0xe8>
 8002f88:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002f8c:	687a      	ldr	r2, [r7, #4]
 8002f8e:	4619      	mov	r1, r3
 8002f90:	68f8      	ldr	r0, [r7, #12]
 8002f92:	f7ff fe47 	bl	8002c24 <ucg_dev_default_cb>
 8002f96:	4603      	mov	r3, r0
 8002f98:	4618      	mov	r0, r3
 8002f9a:	371c      	adds	r7, #28
 8002f9c:	46bd      	mov	sp, r7
 8002f9e:	bd90      	pop	{r4, r7, pc}
 8002fa0:	080056d4 	.word	0x080056d4
 8002fa4:	08005628 	.word	0x08005628

08002fa8 <ucg_ext_st7735_18>:
 8002fa8:	b580      	push	{r7, lr}
 8002faa:	b084      	sub	sp, #16
 8002fac:	af00      	add	r7, sp, #0
 8002fae:	60f8      	str	r0, [r7, #12]
 8002fb0:	460b      	mov	r3, r1
 8002fb2:	607a      	str	r2, [r7, #4]
 8002fb4:	817b      	strh	r3, [r7, #10]
 8002fb6:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002fba:	2b17      	cmp	r3, #23
 8002fbc:	d103      	bne.n	8002fc6 <ucg_ext_st7735_18+0x1e>
 8002fbe:	68f8      	ldr	r0, [r7, #12]
 8002fc0:	f7ff fecc 	bl	8002d5c <ucg_handle_st7735_l90se>
 8002fc4:	bf00      	nop
 8002fc6:	2301      	movs	r3, #1
 8002fc8:	4618      	mov	r0, r3
 8002fca:	3710      	adds	r7, #16
 8002fcc:	46bd      	mov	sp, r7
 8002fce:	bd80      	pop	{r7, pc}

08002fd0 <ucg_PowerDown>:
 8002fd0:	b580      	push	{r7, lr}
 8002fd2:	b082      	sub	sp, #8
 8002fd4:	af00      	add	r7, sp, #0
 8002fd6:	6078      	str	r0, [r7, #4]
 8002fd8:	687b      	ldr	r3, [r7, #4]
 8002fda:	781b      	ldrb	r3, [r3, #0]
 8002fdc:	f003 0301 	and.w	r3, r3, #1
 8002fe0:	b2db      	uxtb	r3, r3
 8002fe2:	2b00      	cmp	r3, #0
 8002fe4:	d00a      	beq.n	8002ffc <ucg_PowerDown+0x2c>
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	689b      	ldr	r3, [r3, #8]
 8002fea:	2200      	movs	r2, #0
 8002fec:	210b      	movs	r1, #11
 8002fee:	6878      	ldr	r0, [r7, #4]
 8002ff0:	4798      	blx	r3
 8002ff2:	687a      	ldr	r2, [r7, #4]
 8002ff4:	7813      	ldrb	r3, [r2, #0]
 8002ff6:	f36f 0300 	bfc	r3, #0, #1
 8002ffa:	7013      	strb	r3, [r2, #0]
 8002ffc:	bf00      	nop
 8002ffe:	3708      	adds	r7, #8
 8003000:	46bd      	mov	sp, r7
 8003002:	bd80      	pop	{r7, pc}

08003004 <ucg_PowerUp>:
 8003004:	b580      	push	{r7, lr}
 8003006:	b084      	sub	sp, #16
 8003008:	af00      	add	r7, sp, #0
 800300a:	6078      	str	r0, [r7, #4]
 800300c:	6878      	ldr	r0, [r7, #4]
 800300e:	f7ff ffdf 	bl	8002fd0 <ucg_PowerDown>
 8003012:	687b      	ldr	r3, [r7, #4]
 8003014:	689b      	ldr	r3, [r3, #8]
 8003016:	2200      	movs	r2, #0
 8003018:	210a      	movs	r1, #10
 800301a:	6878      	ldr	r0, [r7, #4]
 800301c:	4798      	blx	r3
 800301e:	4603      	mov	r3, r0
 8003020:	81fb      	strh	r3, [r7, #14]
 8003022:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003026:	2b00      	cmp	r3, #0
 8003028:	d004      	beq.n	8003034 <ucg_PowerUp+0x30>
 800302a:	687a      	ldr	r2, [r7, #4]
 800302c:	7813      	ldrb	r3, [r2, #0]
 800302e:	f043 0301 	orr.w	r3, r3, #1
 8003032:	7013      	strb	r3, [r2, #0]
 8003034:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003038:	4618      	mov	r0, r3
 800303a:	3710      	adds	r7, #16
 800303c:	46bd      	mov	sp, r7
 800303e:	bd80      	pop	{r7, pc}

08003040 <ucg_SetClipBox>:
 8003040:	b580      	push	{r7, lr}
 8003042:	b082      	sub	sp, #8
 8003044:	af00      	add	r7, sp, #0
 8003046:	6078      	str	r0, [r7, #4]
 8003048:	6039      	str	r1, [r7, #0]
 800304a:	687b      	ldr	r3, [r7, #4]
 800304c:	689b      	ldr	r3, [r3, #8]
 800304e:	683a      	ldr	r2, [r7, #0]
 8003050:	210c      	movs	r1, #12
 8003052:	6878      	ldr	r0, [r7, #4]
 8003054:	4798      	blx	r3
 8003056:	bf00      	nop
 8003058:	3708      	adds	r7, #8
 800305a:	46bd      	mov	sp, r7
 800305c:	bd80      	pop	{r7, pc}

0800305e <ucg_SetMaxClipRange>:
 800305e:	b580      	push	{r7, lr}
 8003060:	b084      	sub	sp, #16
 8003062:	af00      	add	r7, sp, #0
 8003064:	6078      	str	r0, [r7, #4]
 8003066:	687a      	ldr	r2, [r7, #4]
 8003068:	f107 030c 	add.w	r3, r7, #12
 800306c:	3202      	adds	r2, #2
 800306e:	6810      	ldr	r0, [r2, #0]
 8003070:	6018      	str	r0, [r3, #0]
 8003072:	2300      	movs	r3, #0
 8003074:	813b      	strh	r3, [r7, #8]
 8003076:	2300      	movs	r3, #0
 8003078:	817b      	strh	r3, [r7, #10]
 800307a:	f107 0308 	add.w	r3, r7, #8
 800307e:	4619      	mov	r1, r3
 8003080:	6878      	ldr	r0, [r7, #4]
 8003082:	f7ff ffdd 	bl	8003040 <ucg_SetClipBox>
 8003086:	bf00      	nop
 8003088:	3710      	adds	r7, #16
 800308a:	46bd      	mov	sp, r7
 800308c:	bd80      	pop	{r7, pc}

0800308e <ucg_GetDimension>:
 800308e:	b580      	push	{r7, lr}
 8003090:	b082      	sub	sp, #8
 8003092:	af00      	add	r7, sp, #0
 8003094:	6078      	str	r0, [r7, #4]
 8003096:	687b      	ldr	r3, [r7, #4]
 8003098:	689b      	ldr	r3, [r3, #8]
 800309a:	687a      	ldr	r2, [r7, #4]
 800309c:	3202      	adds	r2, #2
 800309e:	210f      	movs	r1, #15
 80030a0:	6878      	ldr	r0, [r7, #4]
 80030a2:	4798      	blx	r3
 80030a4:	6878      	ldr	r0, [r7, #4]
 80030a6:	f7ff ffda 	bl	800305e <ucg_SetMaxClipRange>
 80030aa:	bf00      	nop
 80030ac:	3708      	adds	r7, #8
 80030ae:	46bd      	mov	sp, r7
 80030b0:	bd80      	pop	{r7, pc}

080030b2 <ucg_DrawL90FXWithArg>:
 80030b2:	b580      	push	{r7, lr}
 80030b4:	b082      	sub	sp, #8
 80030b6:	af00      	add	r7, sp, #0
 80030b8:	6078      	str	r0, [r7, #4]
 80030ba:	687b      	ldr	r3, [r7, #4]
 80030bc:	689b      	ldr	r3, [r3, #8]
 80030be:	687a      	ldr	r2, [r7, #4]
 80030c0:	3224      	adds	r2, #36	; 0x24
 80030c2:	2115      	movs	r1, #21
 80030c4:	6878      	ldr	r0, [r7, #4]
 80030c6:	4798      	blx	r3
 80030c8:	bf00      	nop
 80030ca:	3708      	adds	r7, #8
 80030cc:	46bd      	mov	sp, r7
 80030ce:	bd80      	pop	{r7, pc}

080030d0 <ucg_dev_st7735_18x128x128>:
 80030d0:	b580      	push	{r7, lr}
 80030d2:	b084      	sub	sp, #16
 80030d4:	af00      	add	r7, sp, #0
 80030d6:	60f8      	str	r0, [r7, #12]
 80030d8:	460b      	mov	r3, r1
 80030da:	607a      	str	r2, [r7, #4]
 80030dc:	817b      	strh	r3, [r7, #10]
 80030de:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80030e2:	2b0b      	cmp	r3, #11
 80030e4:	d015      	beq.n	8003112 <ucg_dev_st7735_18x128x128+0x42>
 80030e6:	2b0f      	cmp	r3, #15
 80030e8:	d01c      	beq.n	8003124 <ucg_dev_st7735_18x128x128+0x54>
 80030ea:	2b0a      	cmp	r3, #10
 80030ec:	d122      	bne.n	8003134 <ucg_dev_st7735_18x128x128+0x64>
 80030ee:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80030f2:	687a      	ldr	r2, [r7, #4]
 80030f4:	4619      	mov	r1, r3
 80030f6:	68f8      	ldr	r0, [r7, #12]
 80030f8:	f7ff feda 	bl	8002eb0 <ucg_dev_ic_st7735_18>
 80030fc:	4603      	mov	r3, r0
 80030fe:	2b00      	cmp	r3, #0
 8003100:	d101      	bne.n	8003106 <ucg_dev_st7735_18x128x128+0x36>
 8003102:	2300      	movs	r3, #0
 8003104:	e01e      	b.n	8003144 <ucg_dev_st7735_18x128x128+0x74>
 8003106:	4911      	ldr	r1, [pc, #68]	; (800314c <ucg_dev_st7735_18x128x128+0x7c>)
 8003108:	68f8      	ldr	r0, [r7, #12]
 800310a:	f001 fc37 	bl	800497c <ucg_com_SendCmdSeq>
 800310e:	2301      	movs	r3, #1
 8003110:	e018      	b.n	8003144 <ucg_dev_st7735_18x128x128+0x74>
 8003112:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8003116:	687a      	ldr	r2, [r7, #4]
 8003118:	4619      	mov	r1, r3
 800311a:	68f8      	ldr	r0, [r7, #12]
 800311c:	f7ff fec8 	bl	8002eb0 <ucg_dev_ic_st7735_18>
 8003120:	4603      	mov	r3, r0
 8003122:	e00f      	b.n	8003144 <ucg_dev_st7735_18x128x128+0x74>
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	2280      	movs	r2, #128	; 0x80
 8003128:	801a      	strh	r2, [r3, #0]
 800312a:	687b      	ldr	r3, [r7, #4]
 800312c:	2280      	movs	r2, #128	; 0x80
 800312e:	805a      	strh	r2, [r3, #2]
 8003130:	2301      	movs	r3, #1
 8003132:	e007      	b.n	8003144 <ucg_dev_st7735_18x128x128+0x74>
 8003134:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8003138:	687a      	ldr	r2, [r7, #4]
 800313a:	4619      	mov	r1, r3
 800313c:	68f8      	ldr	r0, [r7, #12]
 800313e:	f7ff feb7 	bl	8002eb0 <ucg_dev_ic_st7735_18>
 8003142:	4603      	mov	r3, r0
 8003144:	4618      	mov	r0, r3
 8003146:	3710      	adds	r7, #16
 8003148:	46bd      	mov	sp, r7
 800314a:	bd80      	pop	{r7, pc}
 800314c:	080056dc 	.word	0x080056dc

08003150 <ucg_font_get_byte>:
 8003150:	b480      	push	{r7}
 8003152:	b083      	sub	sp, #12
 8003154:	af00      	add	r7, sp, #0
 8003156:	6078      	str	r0, [r7, #4]
 8003158:	460b      	mov	r3, r1
 800315a:	70fb      	strb	r3, [r7, #3]
 800315c:	78fb      	ldrb	r3, [r7, #3]
 800315e:	687a      	ldr	r2, [r7, #4]
 8003160:	4413      	add	r3, r2
 8003162:	607b      	str	r3, [r7, #4]
 8003164:	687b      	ldr	r3, [r7, #4]
 8003166:	781b      	ldrb	r3, [r3, #0]
 8003168:	4618      	mov	r0, r3
 800316a:	370c      	adds	r7, #12
 800316c:	46bd      	mov	sp, r7
 800316e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003172:	4770      	bx	lr

08003174 <ucg_font_get_word>:
 8003174:	b480      	push	{r7}
 8003176:	b085      	sub	sp, #20
 8003178:	af00      	add	r7, sp, #0
 800317a:	6078      	str	r0, [r7, #4]
 800317c:	460b      	mov	r3, r1
 800317e:	70fb      	strb	r3, [r7, #3]
 8003180:	78fb      	ldrb	r3, [r7, #3]
 8003182:	687a      	ldr	r2, [r7, #4]
 8003184:	4413      	add	r3, r2
 8003186:	607b      	str	r3, [r7, #4]
 8003188:	687b      	ldr	r3, [r7, #4]
 800318a:	781b      	ldrb	r3, [r3, #0]
 800318c:	81fb      	strh	r3, [r7, #14]
 800318e:	687b      	ldr	r3, [r7, #4]
 8003190:	3301      	adds	r3, #1
 8003192:	607b      	str	r3, [r7, #4]
 8003194:	89fb      	ldrh	r3, [r7, #14]
 8003196:	021b      	lsls	r3, r3, #8
 8003198:	81fb      	strh	r3, [r7, #14]
 800319a:	687b      	ldr	r3, [r7, #4]
 800319c:	781b      	ldrb	r3, [r3, #0]
 800319e:	b29a      	uxth	r2, r3
 80031a0:	89fb      	ldrh	r3, [r7, #14]
 80031a2:	4413      	add	r3, r2
 80031a4:	81fb      	strh	r3, [r7, #14]
 80031a6:	89fb      	ldrh	r3, [r7, #14]
 80031a8:	4618      	mov	r0, r3
 80031aa:	3714      	adds	r7, #20
 80031ac:	46bd      	mov	sp, r7
 80031ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031b2:	4770      	bx	lr

080031b4 <ucg_read_font_info>:
 80031b4:	b580      	push	{r7, lr}
 80031b6:	b082      	sub	sp, #8
 80031b8:	af00      	add	r7, sp, #0
 80031ba:	6078      	str	r0, [r7, #4]
 80031bc:	6039      	str	r1, [r7, #0]
 80031be:	2100      	movs	r1, #0
 80031c0:	6838      	ldr	r0, [r7, #0]
 80031c2:	f7ff ffc5 	bl	8003150 <ucg_font_get_byte>
 80031c6:	4603      	mov	r3, r0
 80031c8:	461a      	mov	r2, r3
 80031ca:	687b      	ldr	r3, [r7, #4]
 80031cc:	701a      	strb	r2, [r3, #0]
 80031ce:	2101      	movs	r1, #1
 80031d0:	6838      	ldr	r0, [r7, #0]
 80031d2:	f7ff ffbd 	bl	8003150 <ucg_font_get_byte>
 80031d6:	4603      	mov	r3, r0
 80031d8:	461a      	mov	r2, r3
 80031da:	687b      	ldr	r3, [r7, #4]
 80031dc:	705a      	strb	r2, [r3, #1]
 80031de:	2102      	movs	r1, #2
 80031e0:	6838      	ldr	r0, [r7, #0]
 80031e2:	f7ff ffb5 	bl	8003150 <ucg_font_get_byte>
 80031e6:	4603      	mov	r3, r0
 80031e8:	461a      	mov	r2, r3
 80031ea:	687b      	ldr	r3, [r7, #4]
 80031ec:	709a      	strb	r2, [r3, #2]
 80031ee:	2103      	movs	r1, #3
 80031f0:	6838      	ldr	r0, [r7, #0]
 80031f2:	f7ff ffad 	bl	8003150 <ucg_font_get_byte>
 80031f6:	4603      	mov	r3, r0
 80031f8:	461a      	mov	r2, r3
 80031fa:	687b      	ldr	r3, [r7, #4]
 80031fc:	70da      	strb	r2, [r3, #3]
 80031fe:	2104      	movs	r1, #4
 8003200:	6838      	ldr	r0, [r7, #0]
 8003202:	f7ff ffa5 	bl	8003150 <ucg_font_get_byte>
 8003206:	4603      	mov	r3, r0
 8003208:	461a      	mov	r2, r3
 800320a:	687b      	ldr	r3, [r7, #4]
 800320c:	711a      	strb	r2, [r3, #4]
 800320e:	2105      	movs	r1, #5
 8003210:	6838      	ldr	r0, [r7, #0]
 8003212:	f7ff ff9d 	bl	8003150 <ucg_font_get_byte>
 8003216:	4603      	mov	r3, r0
 8003218:	461a      	mov	r2, r3
 800321a:	687b      	ldr	r3, [r7, #4]
 800321c:	715a      	strb	r2, [r3, #5]
 800321e:	2106      	movs	r1, #6
 8003220:	6838      	ldr	r0, [r7, #0]
 8003222:	f7ff ff95 	bl	8003150 <ucg_font_get_byte>
 8003226:	4603      	mov	r3, r0
 8003228:	461a      	mov	r2, r3
 800322a:	687b      	ldr	r3, [r7, #4]
 800322c:	719a      	strb	r2, [r3, #6]
 800322e:	2107      	movs	r1, #7
 8003230:	6838      	ldr	r0, [r7, #0]
 8003232:	f7ff ff8d 	bl	8003150 <ucg_font_get_byte>
 8003236:	4603      	mov	r3, r0
 8003238:	461a      	mov	r2, r3
 800323a:	687b      	ldr	r3, [r7, #4]
 800323c:	71da      	strb	r2, [r3, #7]
 800323e:	2108      	movs	r1, #8
 8003240:	6838      	ldr	r0, [r7, #0]
 8003242:	f7ff ff85 	bl	8003150 <ucg_font_get_byte>
 8003246:	4603      	mov	r3, r0
 8003248:	461a      	mov	r2, r3
 800324a:	687b      	ldr	r3, [r7, #4]
 800324c:	721a      	strb	r2, [r3, #8]
 800324e:	2109      	movs	r1, #9
 8003250:	6838      	ldr	r0, [r7, #0]
 8003252:	f7ff ff7d 	bl	8003150 <ucg_font_get_byte>
 8003256:	4603      	mov	r3, r0
 8003258:	b25a      	sxtb	r2, r3
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	725a      	strb	r2, [r3, #9]
 800325e:	210a      	movs	r1, #10
 8003260:	6838      	ldr	r0, [r7, #0]
 8003262:	f7ff ff75 	bl	8003150 <ucg_font_get_byte>
 8003266:	4603      	mov	r3, r0
 8003268:	b25a      	sxtb	r2, r3
 800326a:	687b      	ldr	r3, [r7, #4]
 800326c:	729a      	strb	r2, [r3, #10]
 800326e:	210b      	movs	r1, #11
 8003270:	6838      	ldr	r0, [r7, #0]
 8003272:	f7ff ff6d 	bl	8003150 <ucg_font_get_byte>
 8003276:	4603      	mov	r3, r0
 8003278:	b25a      	sxtb	r2, r3
 800327a:	687b      	ldr	r3, [r7, #4]
 800327c:	72da      	strb	r2, [r3, #11]
 800327e:	210c      	movs	r1, #12
 8003280:	6838      	ldr	r0, [r7, #0]
 8003282:	f7ff ff65 	bl	8003150 <ucg_font_get_byte>
 8003286:	4603      	mov	r3, r0
 8003288:	b25a      	sxtb	r2, r3
 800328a:	687b      	ldr	r3, [r7, #4]
 800328c:	731a      	strb	r2, [r3, #12]
 800328e:	210d      	movs	r1, #13
 8003290:	6838      	ldr	r0, [r7, #0]
 8003292:	f7ff ff5d 	bl	8003150 <ucg_font_get_byte>
 8003296:	4603      	mov	r3, r0
 8003298:	b25a      	sxtb	r2, r3
 800329a:	687b      	ldr	r3, [r7, #4]
 800329c:	735a      	strb	r2, [r3, #13]
 800329e:	210e      	movs	r1, #14
 80032a0:	6838      	ldr	r0, [r7, #0]
 80032a2:	f7ff ff55 	bl	8003150 <ucg_font_get_byte>
 80032a6:	4603      	mov	r3, r0
 80032a8:	b25a      	sxtb	r2, r3
 80032aa:	687b      	ldr	r3, [r7, #4]
 80032ac:	739a      	strb	r2, [r3, #14]
 80032ae:	210f      	movs	r1, #15
 80032b0:	6838      	ldr	r0, [r7, #0]
 80032b2:	f7ff ff4d 	bl	8003150 <ucg_font_get_byte>
 80032b6:	4603      	mov	r3, r0
 80032b8:	b25a      	sxtb	r2, r3
 80032ba:	687b      	ldr	r3, [r7, #4]
 80032bc:	73da      	strb	r2, [r3, #15]
 80032be:	2110      	movs	r1, #16
 80032c0:	6838      	ldr	r0, [r7, #0]
 80032c2:	f7ff ff45 	bl	8003150 <ucg_font_get_byte>
 80032c6:	4603      	mov	r3, r0
 80032c8:	b25a      	sxtb	r2, r3
 80032ca:	687b      	ldr	r3, [r7, #4]
 80032cc:	741a      	strb	r2, [r3, #16]
 80032ce:	2111      	movs	r1, #17
 80032d0:	6838      	ldr	r0, [r7, #0]
 80032d2:	f7ff ff4f 	bl	8003174 <ucg_font_get_word>
 80032d6:	4603      	mov	r3, r0
 80032d8:	461a      	mov	r2, r3
 80032da:	687b      	ldr	r3, [r7, #4]
 80032dc:	825a      	strh	r2, [r3, #18]
 80032de:	2113      	movs	r1, #19
 80032e0:	6838      	ldr	r0, [r7, #0]
 80032e2:	f7ff ff47 	bl	8003174 <ucg_font_get_word>
 80032e6:	4603      	mov	r3, r0
 80032e8:	461a      	mov	r2, r3
 80032ea:	687b      	ldr	r3, [r7, #4]
 80032ec:	829a      	strh	r2, [r3, #20]
 80032ee:	bf00      	nop
 80032f0:	3708      	adds	r7, #8
 80032f2:	46bd      	mov	sp, r7
 80032f4:	bd80      	pop	{r7, pc}

080032f6 <ucg_font_decode_get_unsigned_bits>:
 80032f6:	b480      	push	{r7}
 80032f8:	b085      	sub	sp, #20
 80032fa:	af00      	add	r7, sp, #0
 80032fc:	6078      	str	r0, [r7, #4]
 80032fe:	460b      	mov	r3, r1
 8003300:	70fb      	strb	r3, [r7, #3]
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	7b1b      	ldrb	r3, [r3, #12]
 8003306:	737b      	strb	r3, [r7, #13]
 8003308:	687b      	ldr	r3, [r7, #4]
 800330a:	681b      	ldr	r3, [r3, #0]
 800330c:	781b      	ldrb	r3, [r3, #0]
 800330e:	73fb      	strb	r3, [r7, #15]
 8003310:	7bfa      	ldrb	r2, [r7, #15]
 8003312:	7b7b      	ldrb	r3, [r7, #13]
 8003314:	fa42 f303 	asr.w	r3, r2, r3
 8003318:	73fb      	strb	r3, [r7, #15]
 800331a:	7b7b      	ldrb	r3, [r7, #13]
 800331c:	73bb      	strb	r3, [r7, #14]
 800331e:	7bba      	ldrb	r2, [r7, #14]
 8003320:	78fb      	ldrb	r3, [r7, #3]
 8003322:	4413      	add	r3, r2
 8003324:	73bb      	strb	r3, [r7, #14]
 8003326:	7bbb      	ldrb	r3, [r7, #14]
 8003328:	2b07      	cmp	r3, #7
 800332a:	d91a      	bls.n	8003362 <ucg_font_decode_get_unsigned_bits+0x6c>
 800332c:	2308      	movs	r3, #8
 800332e:	733b      	strb	r3, [r7, #12]
 8003330:	7b3a      	ldrb	r2, [r7, #12]
 8003332:	7b7b      	ldrb	r3, [r7, #13]
 8003334:	1ad3      	subs	r3, r2, r3
 8003336:	733b      	strb	r3, [r7, #12]
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	681b      	ldr	r3, [r3, #0]
 800333c:	1c5a      	adds	r2, r3, #1
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	601a      	str	r2, [r3, #0]
 8003342:	687b      	ldr	r3, [r7, #4]
 8003344:	681b      	ldr	r3, [r3, #0]
 8003346:	781b      	ldrb	r3, [r3, #0]
 8003348:	461a      	mov	r2, r3
 800334a:	7b3b      	ldrb	r3, [r7, #12]
 800334c:	fa02 f303 	lsl.w	r3, r2, r3
 8003350:	b25a      	sxtb	r2, r3
 8003352:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003356:	4313      	orrs	r3, r2
 8003358:	b25b      	sxtb	r3, r3
 800335a:	73fb      	strb	r3, [r7, #15]
 800335c:	7bbb      	ldrb	r3, [r7, #14]
 800335e:	3b08      	subs	r3, #8
 8003360:	73bb      	strb	r3, [r7, #14]
 8003362:	78fb      	ldrb	r3, [r7, #3]
 8003364:	f04f 32ff 	mov.w	r2, #4294967295
 8003368:	fa02 f303 	lsl.w	r3, r2, r3
 800336c:	b2db      	uxtb	r3, r3
 800336e:	43db      	mvns	r3, r3
 8003370:	b2da      	uxtb	r2, r3
 8003372:	7bfb      	ldrb	r3, [r7, #15]
 8003374:	4013      	ands	r3, r2
 8003376:	73fb      	strb	r3, [r7, #15]
 8003378:	687b      	ldr	r3, [r7, #4]
 800337a:	7bba      	ldrb	r2, [r7, #14]
 800337c:	731a      	strb	r2, [r3, #12]
 800337e:	7bfb      	ldrb	r3, [r7, #15]
 8003380:	4618      	mov	r0, r3
 8003382:	3714      	adds	r7, #20
 8003384:	46bd      	mov	sp, r7
 8003386:	f85d 7b04 	ldr.w	r7, [sp], #4
 800338a:	4770      	bx	lr

0800338c <ucg_font_decode_get_signed_bits>:
 800338c:	b580      	push	{r7, lr}
 800338e:	b084      	sub	sp, #16
 8003390:	af00      	add	r7, sp, #0
 8003392:	6078      	str	r0, [r7, #4]
 8003394:	460b      	mov	r3, r1
 8003396:	70fb      	strb	r3, [r7, #3]
 8003398:	78fb      	ldrb	r3, [r7, #3]
 800339a:	4619      	mov	r1, r3
 800339c:	6878      	ldr	r0, [r7, #4]
 800339e:	f7ff ffaa 	bl	80032f6 <ucg_font_decode_get_unsigned_bits>
 80033a2:	4603      	mov	r3, r0
 80033a4:	73fb      	strb	r3, [r7, #15]
 80033a6:	2301      	movs	r3, #1
 80033a8:	73bb      	strb	r3, [r7, #14]
 80033aa:	78fb      	ldrb	r3, [r7, #3]
 80033ac:	3b01      	subs	r3, #1
 80033ae:	70fb      	strb	r3, [r7, #3]
 80033b0:	f997 200e 	ldrsb.w	r2, [r7, #14]
 80033b4:	78fb      	ldrb	r3, [r7, #3]
 80033b6:	fa02 f303 	lsl.w	r3, r2, r3
 80033ba:	73bb      	strb	r3, [r7, #14]
 80033bc:	7bfa      	ldrb	r2, [r7, #15]
 80033be:	7bbb      	ldrb	r3, [r7, #14]
 80033c0:	1ad3      	subs	r3, r2, r3
 80033c2:	b2db      	uxtb	r3, r3
 80033c4:	73fb      	strb	r3, [r7, #15]
 80033c6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80033ca:	4618      	mov	r0, r3
 80033cc:	3710      	adds	r7, #16
 80033ce:	46bd      	mov	sp, r7
 80033d0:	bd80      	pop	{r7, pc}

080033d2 <ucg_add_vector_y>:
 80033d2:	b490      	push	{r4, r7}
 80033d4:	b082      	sub	sp, #8
 80033d6:	af00      	add	r7, sp, #0
 80033d8:	4604      	mov	r4, r0
 80033da:	4608      	mov	r0, r1
 80033dc:	4611      	mov	r1, r2
 80033de:	461a      	mov	r2, r3
 80033e0:	4623      	mov	r3, r4
 80033e2:	80fb      	strh	r3, [r7, #6]
 80033e4:	4603      	mov	r3, r0
 80033e6:	717b      	strb	r3, [r7, #5]
 80033e8:	460b      	mov	r3, r1
 80033ea:	713b      	strb	r3, [r7, #4]
 80033ec:	4613      	mov	r3, r2
 80033ee:	70fb      	strb	r3, [r7, #3]
 80033f0:	78fb      	ldrb	r3, [r7, #3]
 80033f2:	2b01      	cmp	r3, #1
 80033f4:	d00b      	beq.n	800340e <ucg_add_vector_y+0x3c>
 80033f6:	2b02      	cmp	r3, #2
 80033f8:	d011      	beq.n	800341e <ucg_add_vector_y+0x4c>
 80033fa:	2b00      	cmp	r3, #0
 80033fc:	d117      	bne.n	800342e <ucg_add_vector_y+0x5c>
 80033fe:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8003402:	b29a      	uxth	r2, r3
 8003404:	88fb      	ldrh	r3, [r7, #6]
 8003406:	4413      	add	r3, r2
 8003408:	b29b      	uxth	r3, r3
 800340a:	80fb      	strh	r3, [r7, #6]
 800340c:	e017      	b.n	800343e <ucg_add_vector_y+0x6c>
 800340e:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8003412:	b29a      	uxth	r2, r3
 8003414:	88fb      	ldrh	r3, [r7, #6]
 8003416:	4413      	add	r3, r2
 8003418:	b29b      	uxth	r3, r3
 800341a:	80fb      	strh	r3, [r7, #6]
 800341c:	e00f      	b.n	800343e <ucg_add_vector_y+0x6c>
 800341e:	88fa      	ldrh	r2, [r7, #6]
 8003420:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8003424:	b29b      	uxth	r3, r3
 8003426:	1ad3      	subs	r3, r2, r3
 8003428:	b29b      	uxth	r3, r3
 800342a:	80fb      	strh	r3, [r7, #6]
 800342c:	e007      	b.n	800343e <ucg_add_vector_y+0x6c>
 800342e:	88fa      	ldrh	r2, [r7, #6]
 8003430:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8003434:	b29b      	uxth	r3, r3
 8003436:	1ad3      	subs	r3, r2, r3
 8003438:	b29b      	uxth	r3, r3
 800343a:	80fb      	strh	r3, [r7, #6]
 800343c:	bf00      	nop
 800343e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003442:	4618      	mov	r0, r3
 8003444:	3708      	adds	r7, #8
 8003446:	46bd      	mov	sp, r7
 8003448:	bc90      	pop	{r4, r7}
 800344a:	4770      	bx	lr

0800344c <ucg_add_vector_x>:
 800344c:	b490      	push	{r4, r7}
 800344e:	b082      	sub	sp, #8
 8003450:	af00      	add	r7, sp, #0
 8003452:	4604      	mov	r4, r0
 8003454:	4608      	mov	r0, r1
 8003456:	4611      	mov	r1, r2
 8003458:	461a      	mov	r2, r3
 800345a:	4623      	mov	r3, r4
 800345c:	80fb      	strh	r3, [r7, #6]
 800345e:	4603      	mov	r3, r0
 8003460:	717b      	strb	r3, [r7, #5]
 8003462:	460b      	mov	r3, r1
 8003464:	713b      	strb	r3, [r7, #4]
 8003466:	4613      	mov	r3, r2
 8003468:	70fb      	strb	r3, [r7, #3]
 800346a:	78fb      	ldrb	r3, [r7, #3]
 800346c:	2b01      	cmp	r3, #1
 800346e:	d00b      	beq.n	8003488 <ucg_add_vector_x+0x3c>
 8003470:	2b02      	cmp	r3, #2
 8003472:	d011      	beq.n	8003498 <ucg_add_vector_x+0x4c>
 8003474:	2b00      	cmp	r3, #0
 8003476:	d117      	bne.n	80034a8 <ucg_add_vector_x+0x5c>
 8003478:	f997 3005 	ldrsb.w	r3, [r7, #5]
 800347c:	b29a      	uxth	r2, r3
 800347e:	88fb      	ldrh	r3, [r7, #6]
 8003480:	4413      	add	r3, r2
 8003482:	b29b      	uxth	r3, r3
 8003484:	80fb      	strh	r3, [r7, #6]
 8003486:	e017      	b.n	80034b8 <ucg_add_vector_x+0x6c>
 8003488:	88fa      	ldrh	r2, [r7, #6]
 800348a:	f997 3004 	ldrsb.w	r3, [r7, #4]
 800348e:	b29b      	uxth	r3, r3
 8003490:	1ad3      	subs	r3, r2, r3
 8003492:	b29b      	uxth	r3, r3
 8003494:	80fb      	strh	r3, [r7, #6]
 8003496:	e00f      	b.n	80034b8 <ucg_add_vector_x+0x6c>
 8003498:	88fa      	ldrh	r2, [r7, #6]
 800349a:	f997 3005 	ldrsb.w	r3, [r7, #5]
 800349e:	b29b      	uxth	r3, r3
 80034a0:	1ad3      	subs	r3, r2, r3
 80034a2:	b29b      	uxth	r3, r3
 80034a4:	80fb      	strh	r3, [r7, #6]
 80034a6:	e007      	b.n	80034b8 <ucg_add_vector_x+0x6c>
 80034a8:	f997 3004 	ldrsb.w	r3, [r7, #4]
 80034ac:	b29a      	uxth	r2, r3
 80034ae:	88fb      	ldrh	r3, [r7, #6]
 80034b0:	4413      	add	r3, r2
 80034b2:	b29b      	uxth	r3, r3
 80034b4:	80fb      	strh	r3, [r7, #6]
 80034b6:	bf00      	nop
 80034b8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80034bc:	4618      	mov	r0, r3
 80034be:	3708      	adds	r7, #8
 80034c0:	46bd      	mov	sp, r7
 80034c2:	bc90      	pop	{r4, r7}
 80034c4:	4770      	bx	lr

080034c6 <ucg_font_decode_len>:
 80034c6:	b590      	push	{r4, r7, lr}
 80034c8:	b089      	sub	sp, #36	; 0x24
 80034ca:	af02      	add	r7, sp, #8
 80034cc:	6078      	str	r0, [r7, #4]
 80034ce:	460b      	mov	r3, r1
 80034d0:	70fb      	strb	r3, [r7, #3]
 80034d2:	4613      	mov	r3, r2
 80034d4:	70bb      	strb	r3, [r7, #2]
 80034d6:	687b      	ldr	r3, [r7, #4]
 80034d8:	3380      	adds	r3, #128	; 0x80
 80034da:	613b      	str	r3, [r7, #16]
 80034dc:	78fb      	ldrb	r3, [r7, #3]
 80034de:	75fb      	strb	r3, [r7, #23]
 80034e0:	693b      	ldr	r3, [r7, #16]
 80034e2:	f993 3008 	ldrsb.w	r3, [r3, #8]
 80034e6:	757b      	strb	r3, [r7, #21]
 80034e8:	693b      	ldr	r3, [r7, #16]
 80034ea:	f993 3009 	ldrsb.w	r3, [r3, #9]
 80034ee:	753b      	strb	r3, [r7, #20]
 80034f0:	693b      	ldr	r3, [r7, #16]
 80034f2:	f993 300a 	ldrsb.w	r3, [r3, #10]
 80034f6:	73fb      	strb	r3, [r7, #15]
 80034f8:	7bfa      	ldrb	r2, [r7, #15]
 80034fa:	7d7b      	ldrb	r3, [r7, #21]
 80034fc:	1ad3      	subs	r3, r2, r3
 80034fe:	73fb      	strb	r3, [r7, #15]
 8003500:	7bfb      	ldrb	r3, [r7, #15]
 8003502:	75bb      	strb	r3, [r7, #22]
 8003504:	7dfa      	ldrb	r2, [r7, #23]
 8003506:	7bfb      	ldrb	r3, [r7, #15]
 8003508:	429a      	cmp	r2, r3
 800350a:	d201      	bcs.n	8003510 <ucg_font_decode_len+0x4a>
 800350c:	7dfb      	ldrb	r3, [r7, #23]
 800350e:	75bb      	strb	r3, [r7, #22]
 8003510:	693b      	ldr	r3, [r7, #16]
 8003512:	889b      	ldrh	r3, [r3, #4]
 8003514:	81bb      	strh	r3, [r7, #12]
 8003516:	693b      	ldr	r3, [r7, #16]
 8003518:	88db      	ldrh	r3, [r3, #6]
 800351a:	817b      	strh	r3, [r7, #10]
 800351c:	f997 1015 	ldrsb.w	r1, [r7, #21]
 8003520:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8003524:	693b      	ldr	r3, [r7, #16]
 8003526:	7b9b      	ldrb	r3, [r3, #14]
 8003528:	f9b7 000c 	ldrsh.w	r0, [r7, #12]
 800352c:	f7ff ff8e 	bl	800344c <ucg_add_vector_x>
 8003530:	4603      	mov	r3, r0
 8003532:	81bb      	strh	r3, [r7, #12]
 8003534:	f997 1015 	ldrsb.w	r1, [r7, #21]
 8003538:	f997 2014 	ldrsb.w	r2, [r7, #20]
 800353c:	693b      	ldr	r3, [r7, #16]
 800353e:	7b9b      	ldrb	r3, [r3, #14]
 8003540:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8003544:	f7ff ff45 	bl	80033d2 <ucg_add_vector_y>
 8003548:	4603      	mov	r3, r0
 800354a:	817b      	strh	r3, [r7, #10]
 800354c:	78bb      	ldrb	r3, [r7, #2]
 800354e:	2b00      	cmp	r3, #0
 8003550:	d011      	beq.n	8003576 <ucg_font_decode_len+0xb0>
 8003552:	7dbb      	ldrb	r3, [r7, #22]
 8003554:	b21c      	sxth	r4, r3
 8003556:	693b      	ldr	r3, [r7, #16]
 8003558:	7b9b      	ldrb	r3, [r3, #14]
 800355a:	b21b      	sxth	r3, r3
 800355c:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8003560:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 8003564:	2200      	movs	r2, #0
 8003566:	9201      	str	r2, [sp, #4]
 8003568:	9300      	str	r3, [sp, #0]
 800356a:	4623      	mov	r3, r4
 800356c:	4602      	mov	r2, r0
 800356e:	6878      	ldr	r0, [r7, #4]
 8003570:	f000 fbc0 	bl	8003cf4 <ucg_Draw90Line>
 8003574:	e014      	b.n	80035a0 <ucg_font_decode_len+0xda>
 8003576:	693b      	ldr	r3, [r7, #16]
 8003578:	7b5b      	ldrb	r3, [r3, #13]
 800357a:	2b00      	cmp	r3, #0
 800357c:	d110      	bne.n	80035a0 <ucg_font_decode_len+0xda>
 800357e:	7dbb      	ldrb	r3, [r7, #22]
 8003580:	b21c      	sxth	r4, r3
 8003582:	693b      	ldr	r3, [r7, #16]
 8003584:	7b9b      	ldrb	r3, [r3, #14]
 8003586:	b21b      	sxth	r3, r3
 8003588:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 800358c:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 8003590:	2201      	movs	r2, #1
 8003592:	9201      	str	r2, [sp, #4]
 8003594:	9300      	str	r3, [sp, #0]
 8003596:	4623      	mov	r3, r4
 8003598:	4602      	mov	r2, r0
 800359a:	6878      	ldr	r0, [r7, #4]
 800359c:	f000 fbaa 	bl	8003cf4 <ucg_Draw90Line>
 80035a0:	7dfa      	ldrb	r2, [r7, #23]
 80035a2:	7bfb      	ldrb	r3, [r7, #15]
 80035a4:	429a      	cmp	r2, r3
 80035a6:	d309      	bcc.n	80035bc <ucg_font_decode_len+0xf6>
 80035a8:	7dfa      	ldrb	r2, [r7, #23]
 80035aa:	7bfb      	ldrb	r3, [r7, #15]
 80035ac:	1ad3      	subs	r3, r2, r3
 80035ae:	75fb      	strb	r3, [r7, #23]
 80035b0:	2300      	movs	r3, #0
 80035b2:	757b      	strb	r3, [r7, #21]
 80035b4:	7d3b      	ldrb	r3, [r7, #20]
 80035b6:	3301      	adds	r3, #1
 80035b8:	753b      	strb	r3, [r7, #20]
 80035ba:	e799      	b.n	80034f0 <ucg_font_decode_len+0x2a>
 80035bc:	bf00      	nop
 80035be:	7d7a      	ldrb	r2, [r7, #21]
 80035c0:	7dfb      	ldrb	r3, [r7, #23]
 80035c2:	4413      	add	r3, r2
 80035c4:	757b      	strb	r3, [r7, #21]
 80035c6:	f997 2015 	ldrsb.w	r2, [r7, #21]
 80035ca:	693b      	ldr	r3, [r7, #16]
 80035cc:	721a      	strb	r2, [r3, #8]
 80035ce:	f997 2014 	ldrsb.w	r2, [r7, #20]
 80035d2:	693b      	ldr	r3, [r7, #16]
 80035d4:	725a      	strb	r2, [r3, #9]
 80035d6:	bf00      	nop
 80035d8:	371c      	adds	r7, #28
 80035da:	46bd      	mov	sp, r7
 80035dc:	bd90      	pop	{r4, r7, pc}

080035de <ucg_font_setup_decode>:
 80035de:	b580      	push	{r7, lr}
 80035e0:	b084      	sub	sp, #16
 80035e2:	af00      	add	r7, sp, #0
 80035e4:	6078      	str	r0, [r7, #4]
 80035e6:	6039      	str	r1, [r7, #0]
 80035e8:	687b      	ldr	r3, [r7, #4]
 80035ea:	3380      	adds	r3, #128	; 0x80
 80035ec:	60fb      	str	r3, [r7, #12]
 80035ee:	68fb      	ldr	r3, [r7, #12]
 80035f0:	683a      	ldr	r2, [r7, #0]
 80035f2:	601a      	str	r2, [r3, #0]
 80035f4:	68fb      	ldr	r3, [r7, #12]
 80035f6:	2200      	movs	r2, #0
 80035f8:	731a      	strb	r2, [r3, #12]
 80035fa:	68fb      	ldr	r3, [r7, #12]
 80035fc:	681b      	ldr	r3, [r3, #0]
 80035fe:	1c5a      	adds	r2, r3, #1
 8003600:	68fb      	ldr	r3, [r7, #12]
 8003602:	601a      	str	r2, [r3, #0]
 8003604:	68fb      	ldr	r3, [r7, #12]
 8003606:	681b      	ldr	r3, [r3, #0]
 8003608:	1c5a      	adds	r2, r3, #1
 800360a:	68fb      	ldr	r3, [r7, #12]
 800360c:	601a      	str	r2, [r3, #0]
 800360e:	687b      	ldr	r3, [r7, #4]
 8003610:	f893 3094 	ldrb.w	r3, [r3, #148]	; 0x94
 8003614:	4619      	mov	r1, r3
 8003616:	68f8      	ldr	r0, [r7, #12]
 8003618:	f7ff fe6d 	bl	80032f6 <ucg_font_decode_get_unsigned_bits>
 800361c:	4603      	mov	r3, r0
 800361e:	b25a      	sxtb	r2, r3
 8003620:	68fb      	ldr	r3, [r7, #12]
 8003622:	729a      	strb	r2, [r3, #10]
 8003624:	687b      	ldr	r3, [r7, #4]
 8003626:	f893 3095 	ldrb.w	r3, [r3, #149]	; 0x95
 800362a:	4619      	mov	r1, r3
 800362c:	68f8      	ldr	r0, [r7, #12]
 800362e:	f7ff fe62 	bl	80032f6 <ucg_font_decode_get_unsigned_bits>
 8003632:	4603      	mov	r3, r0
 8003634:	b25a      	sxtb	r2, r3
 8003636:	68fb      	ldr	r3, [r7, #12]
 8003638:	72da      	strb	r2, [r3, #11]
 800363a:	bf00      	nop
 800363c:	3710      	adds	r7, #16
 800363e:	46bd      	mov	sp, r7
 8003640:	bd80      	pop	{r7, pc}

08003642 <ucg_font_decode_glyph>:
 8003642:	b580      	push	{r7, lr}
 8003644:	b084      	sub	sp, #16
 8003646:	af00      	add	r7, sp, #0
 8003648:	6078      	str	r0, [r7, #4]
 800364a:	6039      	str	r1, [r7, #0]
 800364c:	6839      	ldr	r1, [r7, #0]
 800364e:	6878      	ldr	r0, [r7, #4]
 8003650:	f7ff ffc5 	bl	80035de <ucg_font_setup_decode>
 8003654:	687b      	ldr	r3, [r7, #4]
 8003656:	f893 308b 	ldrb.w	r3, [r3, #139]	; 0x8b
 800365a:	73fb      	strb	r3, [r7, #15]
 800365c:	687b      	ldr	r3, [r7, #4]
 800365e:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8003662:	687b      	ldr	r3, [r7, #4]
 8003664:	f893 3096 	ldrb.w	r3, [r3, #150]	; 0x96
 8003668:	4619      	mov	r1, r3
 800366a:	4610      	mov	r0, r2
 800366c:	f7ff fe8e 	bl	800338c <ucg_font_decode_get_signed_bits>
 8003670:	4603      	mov	r3, r0
 8003672:	73bb      	strb	r3, [r7, #14]
 8003674:	687b      	ldr	r3, [r7, #4]
 8003676:	f103 0280 	add.w	r2, r3, #128	; 0x80
 800367a:	687b      	ldr	r3, [r7, #4]
 800367c:	f893 3097 	ldrb.w	r3, [r3, #151]	; 0x97
 8003680:	4619      	mov	r1, r3
 8003682:	4610      	mov	r0, r2
 8003684:	f7ff fe82 	bl	800338c <ucg_font_decode_get_signed_bits>
 8003688:	4603      	mov	r3, r0
 800368a:	737b      	strb	r3, [r7, #13]
 800368c:	687b      	ldr	r3, [r7, #4]
 800368e:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8003692:	687b      	ldr	r3, [r7, #4]
 8003694:	f893 3098 	ldrb.w	r3, [r3, #152]	; 0x98
 8003698:	4619      	mov	r1, r3
 800369a:	4610      	mov	r0, r2
 800369c:	f7ff fe76 	bl	800338c <ucg_font_decode_get_signed_bits>
 80036a0:	4603      	mov	r3, r0
 80036a2:	733b      	strb	r3, [r7, #12]
 80036a4:	687b      	ldr	r3, [r7, #4]
 80036a6:	f993 308a 	ldrsb.w	r3, [r3, #138]	; 0x8a
 80036aa:	2b00      	cmp	r3, #0
 80036ac:	dd69      	ble.n	8003782 <ucg_font_decode_glyph+0x140>
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	f9b3 0084 	ldrsh.w	r0, [r3, #132]	; 0x84
 80036b4:	7bfa      	ldrb	r2, [r7, #15]
 80036b6:	7b7b      	ldrb	r3, [r7, #13]
 80036b8:	4413      	add	r3, r2
 80036ba:	b2db      	uxtb	r3, r3
 80036bc:	425b      	negs	r3, r3
 80036be:	b2db      	uxtb	r3, r3
 80036c0:	b25a      	sxtb	r2, r3
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	f893 308e 	ldrb.w	r3, [r3, #142]	; 0x8e
 80036c8:	f997 100e 	ldrsb.w	r1, [r7, #14]
 80036cc:	f7ff febe 	bl	800344c <ucg_add_vector_x>
 80036d0:	4603      	mov	r3, r0
 80036d2:	461a      	mov	r2, r3
 80036d4:	687b      	ldr	r3, [r7, #4]
 80036d6:	f8a3 2084 	strh.w	r2, [r3, #132]	; 0x84
 80036da:	687b      	ldr	r3, [r7, #4]
 80036dc:	f9b3 0086 	ldrsh.w	r0, [r3, #134]	; 0x86
 80036e0:	7bfa      	ldrb	r2, [r7, #15]
 80036e2:	7b7b      	ldrb	r3, [r7, #13]
 80036e4:	4413      	add	r3, r2
 80036e6:	b2db      	uxtb	r3, r3
 80036e8:	425b      	negs	r3, r3
 80036ea:	b2db      	uxtb	r3, r3
 80036ec:	b25a      	sxtb	r2, r3
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	f893 308e 	ldrb.w	r3, [r3, #142]	; 0x8e
 80036f4:	f997 100e 	ldrsb.w	r1, [r7, #14]
 80036f8:	f7ff fe6b 	bl	80033d2 <ucg_add_vector_y>
 80036fc:	4603      	mov	r3, r0
 80036fe:	461a      	mov	r2, r3
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	f8a3 2086 	strh.w	r2, [r3, #134]	; 0x86
 8003706:	687b      	ldr	r3, [r7, #4]
 8003708:	2200      	movs	r2, #0
 800370a:	f883 2088 	strb.w	r2, [r3, #136]	; 0x88
 800370e:	687b      	ldr	r3, [r7, #4]
 8003710:	2200      	movs	r2, #0
 8003712:	f883 2089 	strb.w	r2, [r3, #137]	; 0x89
 8003716:	687b      	ldr	r3, [r7, #4]
 8003718:	f103 0280 	add.w	r2, r3, #128	; 0x80
 800371c:	687b      	ldr	r3, [r7, #4]
 800371e:	f893 3092 	ldrb.w	r3, [r3, #146]	; 0x92
 8003722:	4619      	mov	r1, r3
 8003724:	4610      	mov	r0, r2
 8003726:	f7ff fde6 	bl	80032f6 <ucg_font_decode_get_unsigned_bits>
 800372a:	4603      	mov	r3, r0
 800372c:	72fb      	strb	r3, [r7, #11]
 800372e:	687b      	ldr	r3, [r7, #4]
 8003730:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8003734:	687b      	ldr	r3, [r7, #4]
 8003736:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 800373a:	4619      	mov	r1, r3
 800373c:	4610      	mov	r0, r2
 800373e:	f7ff fdda 	bl	80032f6 <ucg_font_decode_get_unsigned_bits>
 8003742:	4603      	mov	r3, r0
 8003744:	72bb      	strb	r3, [r7, #10]
 8003746:	7afb      	ldrb	r3, [r7, #11]
 8003748:	2200      	movs	r2, #0
 800374a:	4619      	mov	r1, r3
 800374c:	6878      	ldr	r0, [r7, #4]
 800374e:	f7ff feba 	bl	80034c6 <ucg_font_decode_len>
 8003752:	7abb      	ldrb	r3, [r7, #10]
 8003754:	2201      	movs	r2, #1
 8003756:	4619      	mov	r1, r3
 8003758:	6878      	ldr	r0, [r7, #4]
 800375a:	f7ff feb4 	bl	80034c6 <ucg_font_decode_len>
 800375e:	687b      	ldr	r3, [r7, #4]
 8003760:	3380      	adds	r3, #128	; 0x80
 8003762:	2101      	movs	r1, #1
 8003764:	4618      	mov	r0, r3
 8003766:	f7ff fdc6 	bl	80032f6 <ucg_font_decode_get_unsigned_bits>
 800376a:	4603      	mov	r3, r0
 800376c:	2b00      	cmp	r3, #0
 800376e:	d1ea      	bne.n	8003746 <ucg_font_decode_glyph+0x104>
 8003770:	687b      	ldr	r3, [r7, #4]
 8003772:	f993 3089 	ldrsb.w	r3, [r3, #137]	; 0x89
 8003776:	f997 200f 	ldrsb.w	r2, [r7, #15]
 800377a:	429a      	cmp	r2, r3
 800377c:	dd00      	ble.n	8003780 <ucg_font_decode_glyph+0x13e>
 800377e:	e7ca      	b.n	8003716 <ucg_font_decode_glyph+0xd4>
 8003780:	bf00      	nop
 8003782:	f997 300c 	ldrsb.w	r3, [r7, #12]
 8003786:	4618      	mov	r0, r3
 8003788:	3710      	adds	r7, #16
 800378a:	46bd      	mov	sp, r7
 800378c:	bd80      	pop	{r7, pc}

0800378e <ucg_font_get_glyph_data>:
 800378e:	b480      	push	{r7}
 8003790:	b085      	sub	sp, #20
 8003792:	af00      	add	r7, sp, #0
 8003794:	6078      	str	r0, [r7, #4]
 8003796:	460b      	mov	r3, r1
 8003798:	70fb      	strb	r3, [r7, #3]
 800379a:	687b      	ldr	r3, [r7, #4]
 800379c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800379e:	60fb      	str	r3, [r7, #12]
 80037a0:	68fb      	ldr	r3, [r7, #12]
 80037a2:	3315      	adds	r3, #21
 80037a4:	60fb      	str	r3, [r7, #12]
 80037a6:	78fb      	ldrb	r3, [r7, #3]
 80037a8:	2b60      	cmp	r3, #96	; 0x60
 80037aa:	d907      	bls.n	80037bc <ucg_font_get_glyph_data+0x2e>
 80037ac:	687b      	ldr	r3, [r7, #4]
 80037ae:	f8b3 30a4 	ldrh.w	r3, [r3, #164]	; 0xa4
 80037b2:	461a      	mov	r2, r3
 80037b4:	68fb      	ldr	r3, [r7, #12]
 80037b6:	4413      	add	r3, r2
 80037b8:	60fb      	str	r3, [r7, #12]
 80037ba:	e009      	b.n	80037d0 <ucg_font_get_glyph_data+0x42>
 80037bc:	78fb      	ldrb	r3, [r7, #3]
 80037be:	2b40      	cmp	r3, #64	; 0x40
 80037c0:	d906      	bls.n	80037d0 <ucg_font_get_glyph_data+0x42>
 80037c2:	687b      	ldr	r3, [r7, #4]
 80037c4:	f8b3 30a2 	ldrh.w	r3, [r3, #162]	; 0xa2
 80037c8:	461a      	mov	r2, r3
 80037ca:	68fb      	ldr	r3, [r7, #12]
 80037cc:	4413      	add	r3, r2
 80037ce:	60fb      	str	r3, [r7, #12]
 80037d0:	68fb      	ldr	r3, [r7, #12]
 80037d2:	3301      	adds	r3, #1
 80037d4:	781b      	ldrb	r3, [r3, #0]
 80037d6:	2b00      	cmp	r3, #0
 80037d8:	d00e      	beq.n	80037f8 <ucg_font_get_glyph_data+0x6a>
 80037da:	68fb      	ldr	r3, [r7, #12]
 80037dc:	781b      	ldrb	r3, [r3, #0]
 80037de:	78fa      	ldrb	r2, [r7, #3]
 80037e0:	429a      	cmp	r2, r3
 80037e2:	d101      	bne.n	80037e8 <ucg_font_get_glyph_data+0x5a>
 80037e4:	68fb      	ldr	r3, [r7, #12]
 80037e6:	e009      	b.n	80037fc <ucg_font_get_glyph_data+0x6e>
 80037e8:	68fb      	ldr	r3, [r7, #12]
 80037ea:	3301      	adds	r3, #1
 80037ec:	781b      	ldrb	r3, [r3, #0]
 80037ee:	461a      	mov	r2, r3
 80037f0:	68fb      	ldr	r3, [r7, #12]
 80037f2:	4413      	add	r3, r2
 80037f4:	60fb      	str	r3, [r7, #12]
 80037f6:	e7eb      	b.n	80037d0 <ucg_font_get_glyph_data+0x42>
 80037f8:	bf00      	nop
 80037fa:	2300      	movs	r3, #0
 80037fc:	4618      	mov	r0, r3
 80037fe:	3714      	adds	r7, #20
 8003800:	46bd      	mov	sp, r7
 8003802:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003806:	4770      	bx	lr

08003808 <ucg_font_draw_glyph>:
 8003808:	b580      	push	{r7, lr}
 800380a:	b086      	sub	sp, #24
 800380c:	af00      	add	r7, sp, #0
 800380e:	60f8      	str	r0, [r7, #12]
 8003810:	4608      	mov	r0, r1
 8003812:	4611      	mov	r1, r2
 8003814:	461a      	mov	r2, r3
 8003816:	4603      	mov	r3, r0
 8003818:	817b      	strh	r3, [r7, #10]
 800381a:	460b      	mov	r3, r1
 800381c:	813b      	strh	r3, [r7, #8]
 800381e:	4613      	mov	r3, r2
 8003820:	71fb      	strb	r3, [r7, #7]
 8003822:	2300      	movs	r3, #0
 8003824:	82fb      	strh	r3, [r7, #22]
 8003826:	68fb      	ldr	r3, [r7, #12]
 8003828:	897a      	ldrh	r2, [r7, #10]
 800382a:	f8a3 2084 	strh.w	r2, [r3, #132]	; 0x84
 800382e:	68fb      	ldr	r3, [r7, #12]
 8003830:	893a      	ldrh	r2, [r7, #8]
 8003832:	f8a3 2086 	strh.w	r2, [r3, #134]	; 0x86
 8003836:	68fb      	ldr	r3, [r7, #12]
 8003838:	79fa      	ldrb	r2, [r7, #7]
 800383a:	f883 208e 	strb.w	r2, [r3, #142]	; 0x8e
 800383e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8003842:	4619      	mov	r1, r3
 8003844:	68f8      	ldr	r0, [r7, #12]
 8003846:	f7ff ffa2 	bl	800378e <ucg_font_get_glyph_data>
 800384a:	6138      	str	r0, [r7, #16]
 800384c:	693b      	ldr	r3, [r7, #16]
 800384e:	2b00      	cmp	r3, #0
 8003850:	d005      	beq.n	800385e <ucg_font_draw_glyph+0x56>
 8003852:	6939      	ldr	r1, [r7, #16]
 8003854:	68f8      	ldr	r0, [r7, #12]
 8003856:	f7ff fef4 	bl	8003642 <ucg_font_decode_glyph>
 800385a:	4603      	mov	r3, r0
 800385c:	82fb      	strh	r3, [r7, #22]
 800385e:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8003862:	4618      	mov	r0, r3
 8003864:	3718      	adds	r7, #24
 8003866:	46bd      	mov	sp, r7
 8003868:	bd80      	pop	{r7, pc}

0800386a <ucg_SetFontMode>:
 800386a:	b480      	push	{r7}
 800386c:	b083      	sub	sp, #12
 800386e:	af00      	add	r7, sp, #0
 8003870:	6078      	str	r0, [r7, #4]
 8003872:	460b      	mov	r3, r1
 8003874:	70fb      	strb	r3, [r7, #3]
 8003876:	687b      	ldr	r3, [r7, #4]
 8003878:	78fa      	ldrb	r2, [r7, #3]
 800387a:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 800387e:	bf00      	nop
 8003880:	370c      	adds	r7, #12
 8003882:	46bd      	mov	sp, r7
 8003884:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003888:	4770      	bx	lr
	...

0800388c <ucg_DrawGlyph>:
 800388c:	b580      	push	{r7, lr}
 800388e:	b086      	sub	sp, #24
 8003890:	af02      	add	r7, sp, #8
 8003892:	60f8      	str	r0, [r7, #12]
 8003894:	4608      	mov	r0, r1
 8003896:	4611      	mov	r1, r2
 8003898:	461a      	mov	r2, r3
 800389a:	4603      	mov	r3, r0
 800389c:	817b      	strh	r3, [r7, #10]
 800389e:	460b      	mov	r3, r1
 80038a0:	813b      	strh	r3, [r7, #8]
 80038a2:	4613      	mov	r3, r2
 80038a4:	71fb      	strb	r3, [r7, #7]
 80038a6:	79fb      	ldrb	r3, [r7, #7]
 80038a8:	2b03      	cmp	r3, #3
 80038aa:	d837      	bhi.n	800391c <ucg_DrawGlyph+0x90>
 80038ac:	a201      	add	r2, pc, #4	; (adr r2, 80038b4 <ucg_DrawGlyph+0x28>)
 80038ae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80038b2:	bf00      	nop
 80038b4:	080038c5 	.word	0x080038c5
 80038b8:	080038db 	.word	0x080038db
 80038bc:	080038f1 	.word	0x080038f1
 80038c0:	08003907 	.word	0x08003907
 80038c4:	68fb      	ldr	r3, [r7, #12]
 80038c6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80038c8:	68f8      	ldr	r0, [r7, #12]
 80038ca:	4798      	blx	r3
 80038cc:	4603      	mov	r3, r0
 80038ce:	b29a      	uxth	r2, r3
 80038d0:	893b      	ldrh	r3, [r7, #8]
 80038d2:	4413      	add	r3, r2
 80038d4:	b29b      	uxth	r3, r3
 80038d6:	813b      	strh	r3, [r7, #8]
 80038d8:	e020      	b.n	800391c <ucg_DrawGlyph+0x90>
 80038da:	68fb      	ldr	r3, [r7, #12]
 80038dc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80038de:	68f8      	ldr	r0, [r7, #12]
 80038e0:	4798      	blx	r3
 80038e2:	4603      	mov	r3, r0
 80038e4:	897a      	ldrh	r2, [r7, #10]
 80038e6:	b29b      	uxth	r3, r3
 80038e8:	1ad3      	subs	r3, r2, r3
 80038ea:	b29b      	uxth	r3, r3
 80038ec:	817b      	strh	r3, [r7, #10]
 80038ee:	e015      	b.n	800391c <ucg_DrawGlyph+0x90>
 80038f0:	68fb      	ldr	r3, [r7, #12]
 80038f2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80038f4:	68f8      	ldr	r0, [r7, #12]
 80038f6:	4798      	blx	r3
 80038f8:	4603      	mov	r3, r0
 80038fa:	893a      	ldrh	r2, [r7, #8]
 80038fc:	b29b      	uxth	r3, r3
 80038fe:	1ad3      	subs	r3, r2, r3
 8003900:	b29b      	uxth	r3, r3
 8003902:	813b      	strh	r3, [r7, #8]
 8003904:	e00a      	b.n	800391c <ucg_DrawGlyph+0x90>
 8003906:	68fb      	ldr	r3, [r7, #12]
 8003908:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800390a:	68f8      	ldr	r0, [r7, #12]
 800390c:	4798      	blx	r3
 800390e:	4603      	mov	r3, r0
 8003910:	b29a      	uxth	r2, r3
 8003912:	897b      	ldrh	r3, [r7, #10]
 8003914:	4413      	add	r3, r2
 8003916:	b29b      	uxth	r3, r3
 8003918:	817b      	strh	r3, [r7, #10]
 800391a:	bf00      	nop
 800391c:	79f8      	ldrb	r0, [r7, #7]
 800391e:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8003922:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8003926:	7e3b      	ldrb	r3, [r7, #24]
 8003928:	9300      	str	r3, [sp, #0]
 800392a:	4603      	mov	r3, r0
 800392c:	68f8      	ldr	r0, [r7, #12]
 800392e:	f7ff ff6b 	bl	8003808 <ucg_font_draw_glyph>
 8003932:	4603      	mov	r3, r0
 8003934:	4618      	mov	r0, r3
 8003936:	3710      	adds	r7, #16
 8003938:	46bd      	mov	sp, r7
 800393a:	bd80      	pop	{r7, pc}

0800393c <task_drawString>:
 800393c:	b580      	push	{r7, lr}
 800393e:	b086      	sub	sp, #24
 8003940:	af02      	add	r7, sp, #8
 8003942:	6078      	str	r0, [r7, #4]
 8003944:	2300      	movs	r3, #0
 8003946:	81fb      	strh	r3, [r7, #14]
 8003948:	687b      	ldr	r3, [r7, #4]
 800394a:	60bb      	str	r3, [r7, #8]
 800394c:	4b45      	ldr	r3, [pc, #276]	; (8003a64 <task_drawString+0x128>)
 800394e:	781b      	ldrb	r3, [r3, #0]
 8003950:	2b00      	cmp	r3, #0
 8003952:	d002      	beq.n	800395a <task_drawString+0x1e>
 8003954:	2b01      	cmp	r3, #1
 8003956:	d01e      	beq.n	8003996 <task_drawString+0x5a>
 8003958:	e07b      	b.n	8003a52 <task_drawString+0x116>
 800395a:	4843      	ldr	r0, [pc, #268]	; (8003a68 <task_drawString+0x12c>)
 800395c:	f000 fb4f 	bl	8003ffe <bufNumItems>
 8003960:	4603      	mov	r3, r0
 8003962:	2b00      	cmp	r3, #0
 8003964:	d007      	beq.n	8003976 <task_drawString+0x3a>
 8003966:	4941      	ldr	r1, [pc, #260]	; (8003a6c <task_drawString+0x130>)
 8003968:	483f      	ldr	r0, [pc, #252]	; (8003a68 <task_drawString+0x12c>)
 800396a:	f000 fbe1 	bl	8004130 <bufDeDat>
 800396e:	4b3d      	ldr	r3, [pc, #244]	; (8003a64 <task_drawString+0x128>)
 8003970:	2201      	movs	r2, #1
 8003972:	701a      	strb	r2, [r3, #0]
 8003974:	e071      	b.n	8003a5a <task_drawString+0x11e>
 8003976:	4b3e      	ldr	r3, [pc, #248]	; (8003a70 <task_drawString+0x134>)
 8003978:	781b      	ldrb	r3, [r3, #0]
 800397a:	2bff      	cmp	r3, #255	; 0xff
 800397c:	d007      	beq.n	800398e <task_drawString+0x52>
 800397e:	4b3c      	ldr	r3, [pc, #240]	; (8003a70 <task_drawString+0x134>)
 8003980:	781b      	ldrb	r3, [r3, #0]
 8003982:	4618      	mov	r0, r3
 8003984:	f7fe fd28 	bl	80023d8 <TimerStop>
 8003988:	4b39      	ldr	r3, [pc, #228]	; (8003a70 <task_drawString+0x134>)
 800398a:	22ff      	movs	r2, #255	; 0xff
 800398c:	701a      	strb	r2, [r3, #0]
 800398e:	4b35      	ldr	r3, [pc, #212]	; (8003a64 <task_drawString+0x128>)
 8003990:	2200      	movs	r2, #0
 8003992:	701a      	strb	r2, [r3, #0]
 8003994:	e061      	b.n	8003a5a <task_drawString+0x11e>
 8003996:	4b35      	ldr	r3, [pc, #212]	; (8003a6c <task_drawString+0x130>)
 8003998:	689b      	ldr	r3, [r3, #8]
 800399a:	781b      	ldrb	r3, [r3, #0]
 800399c:	2b00      	cmp	r3, #0
 800399e:	d054      	beq.n	8003a4a <task_drawString+0x10e>
 80039a0:	4b32      	ldr	r3, [pc, #200]	; (8003a6c <task_drawString+0x130>)
 80039a2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80039a6:	4b31      	ldr	r3, [pc, #196]	; (8003a6c <task_drawString+0x130>)
 80039a8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80039ac:	4b2f      	ldr	r3, [pc, #188]	; (8003a6c <task_drawString+0x130>)
 80039ae:	7918      	ldrb	r0, [r3, #4]
 80039b0:	4b2e      	ldr	r3, [pc, #184]	; (8003a6c <task_drawString+0x130>)
 80039b2:	689b      	ldr	r3, [r3, #8]
 80039b4:	781b      	ldrb	r3, [r3, #0]
 80039b6:	9300      	str	r3, [sp, #0]
 80039b8:	4603      	mov	r3, r0
 80039ba:	68b8      	ldr	r0, [r7, #8]
 80039bc:	f7ff ff66 	bl	800388c <ucg_DrawGlyph>
 80039c0:	4603      	mov	r3, r0
 80039c2:	81fb      	strh	r3, [r7, #14]
 80039c4:	4b29      	ldr	r3, [pc, #164]	; (8003a6c <task_drawString+0x130>)
 80039c6:	791b      	ldrb	r3, [r3, #4]
 80039c8:	2b03      	cmp	r3, #3
 80039ca:	d837      	bhi.n	8003a3c <task_drawString+0x100>
 80039cc:	a201      	add	r2, pc, #4	; (adr r2, 80039d4 <task_drawString+0x98>)
 80039ce:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80039d2:	bf00      	nop
 80039d4:	080039e5 	.word	0x080039e5
 80039d8:	080039fb 	.word	0x080039fb
 80039dc:	08003a11 	.word	0x08003a11
 80039e0:	08003a27 	.word	0x08003a27
 80039e4:	4b21      	ldr	r3, [pc, #132]	; (8003a6c <task_drawString+0x130>)
 80039e6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80039ea:	b29a      	uxth	r2, r3
 80039ec:	89fb      	ldrh	r3, [r7, #14]
 80039ee:	4413      	add	r3, r2
 80039f0:	b29b      	uxth	r3, r3
 80039f2:	b21a      	sxth	r2, r3
 80039f4:	4b1d      	ldr	r3, [pc, #116]	; (8003a6c <task_drawString+0x130>)
 80039f6:	801a      	strh	r2, [r3, #0]
 80039f8:	e021      	b.n	8003a3e <task_drawString+0x102>
 80039fa:	4b1c      	ldr	r3, [pc, #112]	; (8003a6c <task_drawString+0x130>)
 80039fc:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8003a00:	b29a      	uxth	r2, r3
 8003a02:	89fb      	ldrh	r3, [r7, #14]
 8003a04:	4413      	add	r3, r2
 8003a06:	b29b      	uxth	r3, r3
 8003a08:	b21a      	sxth	r2, r3
 8003a0a:	4b18      	ldr	r3, [pc, #96]	; (8003a6c <task_drawString+0x130>)
 8003a0c:	805a      	strh	r2, [r3, #2]
 8003a0e:	e016      	b.n	8003a3e <task_drawString+0x102>
 8003a10:	4b16      	ldr	r3, [pc, #88]	; (8003a6c <task_drawString+0x130>)
 8003a12:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003a16:	b29a      	uxth	r2, r3
 8003a18:	89fb      	ldrh	r3, [r7, #14]
 8003a1a:	1ad3      	subs	r3, r2, r3
 8003a1c:	b29b      	uxth	r3, r3
 8003a1e:	b21a      	sxth	r2, r3
 8003a20:	4b12      	ldr	r3, [pc, #72]	; (8003a6c <task_drawString+0x130>)
 8003a22:	801a      	strh	r2, [r3, #0]
 8003a24:	e00b      	b.n	8003a3e <task_drawString+0x102>
 8003a26:	4b11      	ldr	r3, [pc, #68]	; (8003a6c <task_drawString+0x130>)
 8003a28:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8003a2c:	b29a      	uxth	r2, r3
 8003a2e:	89fb      	ldrh	r3, [r7, #14]
 8003a30:	1ad3      	subs	r3, r2, r3
 8003a32:	b29b      	uxth	r3, r3
 8003a34:	b21a      	sxth	r2, r3
 8003a36:	4b0d      	ldr	r3, [pc, #52]	; (8003a6c <task_drawString+0x130>)
 8003a38:	805a      	strh	r2, [r3, #2]
 8003a3a:	e000      	b.n	8003a3e <task_drawString+0x102>
 8003a3c:	bf00      	nop
 8003a3e:	4b0b      	ldr	r3, [pc, #44]	; (8003a6c <task_drawString+0x130>)
 8003a40:	689b      	ldr	r3, [r3, #8]
 8003a42:	3301      	adds	r3, #1
 8003a44:	4a09      	ldr	r2, [pc, #36]	; (8003a6c <task_drawString+0x130>)
 8003a46:	6093      	str	r3, [r2, #8]
 8003a48:	e007      	b.n	8003a5a <task_drawString+0x11e>
 8003a4a:	4b06      	ldr	r3, [pc, #24]	; (8003a64 <task_drawString+0x128>)
 8003a4c:	2200      	movs	r2, #0
 8003a4e:	701a      	strb	r2, [r3, #0]
 8003a50:	e003      	b.n	8003a5a <task_drawString+0x11e>
 8003a52:	4b04      	ldr	r3, [pc, #16]	; (8003a64 <task_drawString+0x128>)
 8003a54:	2200      	movs	r2, #0
 8003a56:	701a      	strb	r2, [r3, #0]
 8003a58:	bf00      	nop
 8003a5a:	bf00      	nop
 8003a5c:	3710      	adds	r7, #16
 8003a5e:	46bd      	mov	sp, r7
 8003a60:	bd80      	pop	{r7, pc}
 8003a62:	bf00      	nop
 8003a64:	20001594 	.word	0x20001594
 8003a68:	20000584 	.word	0x20000584
 8003a6c:	200016e0 	.word	0x200016e0
 8003a70:	20000059 	.word	0x20000059

08003a74 <ucg_DrawString>:
 8003a74:	b580      	push	{r7, lr}
 8003a76:	b08a      	sub	sp, #40	; 0x28
 8003a78:	af02      	add	r7, sp, #8
 8003a7a:	60f8      	str	r0, [r7, #12]
 8003a7c:	4608      	mov	r0, r1
 8003a7e:	4611      	mov	r1, r2
 8003a80:	461a      	mov	r2, r3
 8003a82:	4603      	mov	r3, r0
 8003a84:	817b      	strh	r3, [r7, #10]
 8003a86:	460b      	mov	r3, r1
 8003a88:	813b      	strh	r3, [r7, #8]
 8003a8a:	4613      	mov	r3, r2
 8003a8c:	71fb      	strb	r3, [r7, #7]
 8003a8e:	2300      	movs	r3, #0
 8003a90:	83fb      	strh	r3, [r7, #30]
 8003a92:	897b      	ldrh	r3, [r7, #10]
 8003a94:	823b      	strh	r3, [r7, #16]
 8003a96:	893b      	ldrh	r3, [r7, #8]
 8003a98:	827b      	strh	r3, [r7, #18]
 8003a9a:	79fb      	ldrb	r3, [r7, #7]
 8003a9c:	753b      	strb	r3, [r7, #20]
 8003a9e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003aa0:	61bb      	str	r3, [r7, #24]
 8003aa2:	f107 0310 	add.w	r3, r7, #16
 8003aa6:	4619      	mov	r1, r3
 8003aa8:	480c      	ldr	r0, [pc, #48]	; (8003adc <ucg_DrawString+0x68>)
 8003aaa:	f000 faf3 	bl	8004094 <bufEnDat>
 8003aae:	4b0c      	ldr	r3, [pc, #48]	; (8003ae0 <ucg_DrawString+0x6c>)
 8003ab0:	781b      	ldrb	r3, [r3, #0]
 8003ab2:	2bff      	cmp	r3, #255	; 0xff
 8003ab4:	d10b      	bne.n	8003ace <ucg_DrawString+0x5a>
 8003ab6:	68fb      	ldr	r3, [r7, #12]
 8003ab8:	9300      	str	r3, [sp, #0]
 8003aba:	4b0a      	ldr	r3, [pc, #40]	; (8003ae4 <ucg_DrawString+0x70>)
 8003abc:	22ff      	movs	r2, #255	; 0xff
 8003abe:	211e      	movs	r1, #30
 8003ac0:	4809      	ldr	r0, [pc, #36]	; (8003ae8 <ucg_DrawString+0x74>)
 8003ac2:	f7fe fc27 	bl	8002314 <TimerStart>
 8003ac6:	4603      	mov	r3, r0
 8003ac8:	461a      	mov	r2, r3
 8003aca:	4b05      	ldr	r3, [pc, #20]	; (8003ae0 <ucg_DrawString+0x6c>)
 8003acc:	701a      	strb	r2, [r3, #0]
 8003ace:	f9b7 301e 	ldrsh.w	r3, [r7, #30]
 8003ad2:	4618      	mov	r0, r3
 8003ad4:	3720      	adds	r7, #32
 8003ad6:	46bd      	mov	sp, r7
 8003ad8:	bd80      	pop	{r7, pc}
 8003ada:	bf00      	nop
 8003adc:	20000584 	.word	0x20000584
 8003ae0:	20000059 	.word	0x20000059
 8003ae4:	0800393d 	.word	0x0800393d
 8003ae8:	08005618 	.word	0x08005618

08003aec <ucg_UpdateRefHeight>:
 8003aec:	b480      	push	{r7}
 8003aee:	b083      	sub	sp, #12
 8003af0:	af00      	add	r7, sp, #0
 8003af2:	6078      	str	r0, [r7, #4]
 8003af4:	687b      	ldr	r3, [r7, #4]
 8003af6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8003af8:	2b00      	cmp	r3, #0
 8003afa:	d05d      	beq.n	8003bb8 <ucg_UpdateRefHeight+0xcc>
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	f993 209d 	ldrsb.w	r2, [r3, #157]	; 0x9d
 8003b02:	687b      	ldr	r3, [r7, #4]
 8003b04:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 8003b08:	687b      	ldr	r3, [r7, #4]
 8003b0a:	f993 209e 	ldrsb.w	r2, [r3, #158]	; 0x9e
 8003b0e:	687b      	ldr	r3, [r7, #4]
 8003b10:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 8003b14:	687b      	ldr	r3, [r7, #4]
 8003b16:	f893 30ab 	ldrb.w	r3, [r3, #171]	; 0xab
 8003b1a:	2b00      	cmp	r3, #0
 8003b1c:	d04d      	beq.n	8003bba <ucg_UpdateRefHeight+0xce>
 8003b1e:	687b      	ldr	r3, [r7, #4]
 8003b20:	f893 30ab 	ldrb.w	r3, [r3, #171]	; 0xab
 8003b24:	2b01      	cmp	r3, #1
 8003b26:	d11c      	bne.n	8003b62 <ucg_UpdateRefHeight+0x76>
 8003b28:	687b      	ldr	r3, [r7, #4]
 8003b2a:	f993 20ac 	ldrsb.w	r2, [r3, #172]	; 0xac
 8003b2e:	687b      	ldr	r3, [r7, #4]
 8003b30:	f993 309f 	ldrsb.w	r3, [r3, #159]	; 0x9f
 8003b34:	429a      	cmp	r2, r3
 8003b36:	da05      	bge.n	8003b44 <ucg_UpdateRefHeight+0x58>
 8003b38:	687b      	ldr	r3, [r7, #4]
 8003b3a:	f993 209f 	ldrsb.w	r2, [r3, #159]	; 0x9f
 8003b3e:	687b      	ldr	r3, [r7, #4]
 8003b40:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 8003b44:	687b      	ldr	r3, [r7, #4]
 8003b46:	f993 20ad 	ldrsb.w	r2, [r3, #173]	; 0xad
 8003b4a:	687b      	ldr	r3, [r7, #4]
 8003b4c:	f993 30a0 	ldrsb.w	r3, [r3, #160]	; 0xa0
 8003b50:	429a      	cmp	r2, r3
 8003b52:	dd32      	ble.n	8003bba <ucg_UpdateRefHeight+0xce>
 8003b54:	687b      	ldr	r3, [r7, #4]
 8003b56:	f993 20a0 	ldrsb.w	r2, [r3, #160]	; 0xa0
 8003b5a:	687b      	ldr	r3, [r7, #4]
 8003b5c:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 8003b60:	e02b      	b.n	8003bba <ucg_UpdateRefHeight+0xce>
 8003b62:	687b      	ldr	r3, [r7, #4]
 8003b64:	f993 30ac 	ldrsb.w	r3, [r3, #172]	; 0xac
 8003b68:	461a      	mov	r2, r3
 8003b6a:	687b      	ldr	r3, [r7, #4]
 8003b6c:	f993 309a 	ldrsb.w	r3, [r3, #154]	; 0x9a
 8003b70:	4619      	mov	r1, r3
 8003b72:	687b      	ldr	r3, [r7, #4]
 8003b74:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 8003b78:	440b      	add	r3, r1
 8003b7a:	429a      	cmp	r2, r3
 8003b7c:	da0d      	bge.n	8003b9a <ucg_UpdateRefHeight+0xae>
 8003b7e:	687b      	ldr	r3, [r7, #4]
 8003b80:	f993 309a 	ldrsb.w	r3, [r3, #154]	; 0x9a
 8003b84:	b2da      	uxtb	r2, r3
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 8003b8c:	b2db      	uxtb	r3, r3
 8003b8e:	4413      	add	r3, r2
 8003b90:	b2db      	uxtb	r3, r3
 8003b92:	b25a      	sxtb	r2, r3
 8003b94:	687b      	ldr	r3, [r7, #4]
 8003b96:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 8003b9a:	687b      	ldr	r3, [r7, #4]
 8003b9c:	f993 20ad 	ldrsb.w	r2, [r3, #173]	; 0xad
 8003ba0:	687b      	ldr	r3, [r7, #4]
 8003ba2:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 8003ba6:	429a      	cmp	r2, r3
 8003ba8:	dd07      	ble.n	8003bba <ucg_UpdateRefHeight+0xce>
 8003baa:	687b      	ldr	r3, [r7, #4]
 8003bac:	f993 209c 	ldrsb.w	r2, [r3, #156]	; 0x9c
 8003bb0:	687b      	ldr	r3, [r7, #4]
 8003bb2:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 8003bb6:	e000      	b.n	8003bba <ucg_UpdateRefHeight+0xce>
 8003bb8:	bf00      	nop
 8003bba:	370c      	adds	r7, #12
 8003bbc:	46bd      	mov	sp, r7
 8003bbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bc2:	4770      	bx	lr

08003bc4 <ucg_font_calc_vref_font>:
 8003bc4:	b480      	push	{r7}
 8003bc6:	b083      	sub	sp, #12
 8003bc8:	af00      	add	r7, sp, #0
 8003bca:	6078      	str	r0, [r7, #4]
 8003bcc:	2300      	movs	r3, #0
 8003bce:	4618      	mov	r0, r3
 8003bd0:	370c      	adds	r7, #12
 8003bd2:	46bd      	mov	sp, r7
 8003bd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bd8:	4770      	bx	lr
	...

08003bdc <ucg_SetFontPosBaseline>:
 8003bdc:	b480      	push	{r7}
 8003bde:	b083      	sub	sp, #12
 8003be0:	af00      	add	r7, sp, #0
 8003be2:	6078      	str	r0, [r7, #4]
 8003be4:	687b      	ldr	r3, [r7, #4]
 8003be6:	4a04      	ldr	r2, [pc, #16]	; (8003bf8 <ucg_SetFontPosBaseline+0x1c>)
 8003be8:	67da      	str	r2, [r3, #124]	; 0x7c
 8003bea:	bf00      	nop
 8003bec:	370c      	adds	r7, #12
 8003bee:	46bd      	mov	sp, r7
 8003bf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bf4:	4770      	bx	lr
 8003bf6:	bf00      	nop
 8003bf8:	08003bc5 	.word	0x08003bc5

08003bfc <ucg_SetFont>:
 8003bfc:	b580      	push	{r7, lr}
 8003bfe:	b082      	sub	sp, #8
 8003c00:	af00      	add	r7, sp, #0
 8003c02:	6078      	str	r0, [r7, #4]
 8003c04:	6039      	str	r1, [r7, #0]
 8003c06:	687b      	ldr	r3, [r7, #4]
 8003c08:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8003c0a:	683a      	ldr	r2, [r7, #0]
 8003c0c:	429a      	cmp	r2, r3
 8003c0e:	d012      	beq.n	8003c36 <ucg_SetFont+0x3a>
 8003c10:	687b      	ldr	r3, [r7, #4]
 8003c12:	683a      	ldr	r2, [r7, #0]
 8003c14:	679a      	str	r2, [r3, #120]	; 0x78
 8003c16:	687b      	ldr	r3, [r7, #4]
 8003c18:	3390      	adds	r3, #144	; 0x90
 8003c1a:	6839      	ldr	r1, [r7, #0]
 8003c1c:	4618      	mov	r0, r3
 8003c1e:	f7ff fac9 	bl	80031b4 <ucg_read_font_info>
 8003c22:	6878      	ldr	r0, [r7, #4]
 8003c24:	f7ff ff62 	bl	8003aec <ucg_UpdateRefHeight>
 8003c28:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003c2c:	220c      	movs	r2, #12
 8003c2e:	4904      	ldr	r1, [pc, #16]	; (8003c40 <ucg_SetFont+0x44>)
 8003c30:	4804      	ldr	r0, [pc, #16]	; (8003c44 <ucg_SetFont+0x48>)
 8003c32:	f000 f9c9 	bl	8003fc8 <bufInit>
 8003c36:	bf00      	nop
 8003c38:	3708      	adds	r7, #8
 8003c3a:	46bd      	mov	sp, r7
 8003c3c:	bd80      	pop	{r7, pc}
 8003c3e:	bf00      	nop
 8003c40:	20000584 	.word	0x20000584
 8003c44:	20000594 	.word	0x20000594

08003c48 <ucg_init_struct>:
 8003c48:	b480      	push	{r7}
 8003c4a:	b083      	sub	sp, #12
 8003c4c:	af00      	add	r7, sp, #0
 8003c4e:	6078      	str	r0, [r7, #4]
 8003c50:	687a      	ldr	r2, [r7, #4]
 8003c52:	7813      	ldrb	r3, [r2, #0]
 8003c54:	f36f 0300 	bfc	r3, #0, #1
 8003c58:	7013      	strb	r3, [r2, #0]
 8003c5a:	687b      	ldr	r3, [r7, #4]
 8003c5c:	2200      	movs	r2, #0
 8003c5e:	611a      	str	r2, [r3, #16]
 8003c60:	687b      	ldr	r3, [r7, #4]
 8003c62:	2201      	movs	r2, #1
 8003c64:	865a      	strh	r2, [r3, #50]	; 0x32
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	2200      	movs	r2, #0
 8003c6a:	679a      	str	r2, [r3, #120]	; 0x78
 8003c6c:	687b      	ldr	r3, [r7, #4]
 8003c6e:	2201      	movs	r2, #1
 8003c70:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 8003c74:	687b      	ldr	r3, [r7, #4]
 8003c76:	2200      	movs	r2, #0
 8003c78:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8003c7c:	687b      	ldr	r3, [r7, #4]
 8003c7e:	2200      	movs	r2, #0
 8003c80:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8003c84:	687b      	ldr	r3, [r7, #4]
 8003c86:	2200      	movs	r2, #0
 8003c88:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 8003c8c:	bf00      	nop
 8003c8e:	370c      	adds	r7, #12
 8003c90:	46bd      	mov	sp, r7
 8003c92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c96:	4770      	bx	lr

08003c98 <ucg_Init>:
 8003c98:	b580      	push	{r7, lr}
 8003c9a:	b086      	sub	sp, #24
 8003c9c:	af00      	add	r7, sp, #0
 8003c9e:	60f8      	str	r0, [r7, #12]
 8003ca0:	60b9      	str	r1, [r7, #8]
 8003ca2:	607a      	str	r2, [r7, #4]
 8003ca4:	603b      	str	r3, [r7, #0]
 8003ca6:	68f8      	ldr	r0, [r7, #12]
 8003ca8:	f7ff ffce 	bl	8003c48 <ucg_init_struct>
 8003cac:	687b      	ldr	r3, [r7, #4]
 8003cae:	2b00      	cmp	r3, #0
 8003cb0:	d103      	bne.n	8003cba <ucg_Init+0x22>
 8003cb2:	68fb      	ldr	r3, [r7, #12]
 8003cb4:	4a0e      	ldr	r2, [pc, #56]	; (8003cf0 <ucg_Init+0x58>)
 8003cb6:	60da      	str	r2, [r3, #12]
 8003cb8:	e002      	b.n	8003cc0 <ucg_Init+0x28>
 8003cba:	68fb      	ldr	r3, [r7, #12]
 8003cbc:	687a      	ldr	r2, [r7, #4]
 8003cbe:	60da      	str	r2, [r3, #12]
 8003cc0:	68fb      	ldr	r3, [r7, #12]
 8003cc2:	68ba      	ldr	r2, [r7, #8]
 8003cc4:	609a      	str	r2, [r3, #8]
 8003cc6:	68fb      	ldr	r3, [r7, #12]
 8003cc8:	683a      	ldr	r2, [r7, #0]
 8003cca:	61da      	str	r2, [r3, #28]
 8003ccc:	68f8      	ldr	r0, [r7, #12]
 8003cce:	f7ff ff85 	bl	8003bdc <ucg_SetFontPosBaseline>
 8003cd2:	68f8      	ldr	r0, [r7, #12]
 8003cd4:	f7ff f996 	bl	8003004 <ucg_PowerUp>
 8003cd8:	4603      	mov	r3, r0
 8003cda:	82fb      	strh	r3, [r7, #22]
 8003cdc:	68f8      	ldr	r0, [r7, #12]
 8003cde:	f7ff f9d6 	bl	800308e <ucg_GetDimension>
 8003ce2:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8003ce6:	4618      	mov	r0, r3
 8003ce8:	3718      	adds	r7, #24
 8003cea:	46bd      	mov	sp, r7
 8003cec:	bd80      	pop	{r7, pc}
 8003cee:	bf00      	nop
 8003cf0:	08002c69 	.word	0x08002c69

08003cf4 <ucg_Draw90Line>:
 8003cf4:	b580      	push	{r7, lr}
 8003cf6:	b084      	sub	sp, #16
 8003cf8:	af00      	add	r7, sp, #0
 8003cfa:	60f8      	str	r0, [r7, #12]
 8003cfc:	4608      	mov	r0, r1
 8003cfe:	4611      	mov	r1, r2
 8003d00:	461a      	mov	r2, r3
 8003d02:	4603      	mov	r3, r0
 8003d04:	817b      	strh	r3, [r7, #10]
 8003d06:	460b      	mov	r3, r1
 8003d08:	813b      	strh	r3, [r7, #8]
 8003d0a:	4613      	mov	r3, r2
 8003d0c:	80fb      	strh	r3, [r7, #6]
 8003d0e:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 8003d12:	68f9      	ldr	r1, [r7, #12]
 8003d14:	4613      	mov	r3, r2
 8003d16:	005b      	lsls	r3, r3, #1
 8003d18:	4413      	add	r3, r2
 8003d1a:	440b      	add	r3, r1
 8003d1c:	333a      	adds	r3, #58	; 0x3a
 8003d1e:	781a      	ldrb	r2, [r3, #0]
 8003d20:	68fb      	ldr	r3, [r7, #12]
 8003d22:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8003d26:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 8003d2a:	68f9      	ldr	r1, [r7, #12]
 8003d2c:	4613      	mov	r3, r2
 8003d2e:	005b      	lsls	r3, r3, #1
 8003d30:	4413      	add	r3, r2
 8003d32:	440b      	add	r3, r1
 8003d34:	333b      	adds	r3, #59	; 0x3b
 8003d36:	781a      	ldrb	r2, [r3, #0]
 8003d38:	68fb      	ldr	r3, [r7, #12]
 8003d3a:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 8003d3e:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 8003d42:	68f9      	ldr	r1, [r7, #12]
 8003d44:	4613      	mov	r3, r2
 8003d46:	005b      	lsls	r3, r3, #1
 8003d48:	4413      	add	r3, r2
 8003d4a:	440b      	add	r3, r1
 8003d4c:	333c      	adds	r3, #60	; 0x3c
 8003d4e:	781a      	ldrb	r2, [r3, #0]
 8003d50:	68fb      	ldr	r3, [r7, #12]
 8003d52:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 8003d56:	68fb      	ldr	r3, [r7, #12]
 8003d58:	897a      	ldrh	r2, [r7, #10]
 8003d5a:	849a      	strh	r2, [r3, #36]	; 0x24
 8003d5c:	68fb      	ldr	r3, [r7, #12]
 8003d5e:	893a      	ldrh	r2, [r7, #8]
 8003d60:	84da      	strh	r2, [r3, #38]	; 0x26
 8003d62:	68fb      	ldr	r3, [r7, #12]
 8003d64:	88fa      	ldrh	r2, [r7, #6]
 8003d66:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003d68:	68fb      	ldr	r3, [r7, #12]
 8003d6a:	8b3a      	ldrh	r2, [r7, #24]
 8003d6c:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003d6e:	68f8      	ldr	r0, [r7, #12]
 8003d70:	f7ff f99f 	bl	80030b2 <ucg_DrawL90FXWithArg>
 8003d74:	bf00      	nop
 8003d76:	3710      	adds	r7, #16
 8003d78:	46bd      	mov	sp, r7
 8003d7a:	bd80      	pop	{r7, pc}

08003d7c <ucg_DrawHLine>:
 8003d7c:	b580      	push	{r7, lr}
 8003d7e:	b086      	sub	sp, #24
 8003d80:	af02      	add	r7, sp, #8
 8003d82:	60f8      	str	r0, [r7, #12]
 8003d84:	4608      	mov	r0, r1
 8003d86:	4611      	mov	r1, r2
 8003d88:	461a      	mov	r2, r3
 8003d8a:	4603      	mov	r3, r0
 8003d8c:	817b      	strh	r3, [r7, #10]
 8003d8e:	460b      	mov	r3, r1
 8003d90:	813b      	strh	r3, [r7, #8]
 8003d92:	4613      	mov	r3, r2
 8003d94:	80fb      	strh	r3, [r7, #6]
 8003d96:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 8003d9a:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8003d9e:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8003da2:	2300      	movs	r3, #0
 8003da4:	9301      	str	r3, [sp, #4]
 8003da6:	2300      	movs	r3, #0
 8003da8:	9300      	str	r3, [sp, #0]
 8003daa:	4603      	mov	r3, r0
 8003dac:	68f8      	ldr	r0, [r7, #12]
 8003dae:	f7ff ffa1 	bl	8003cf4 <ucg_Draw90Line>
 8003db2:	bf00      	nop
 8003db4:	3710      	adds	r7, #16
 8003db6:	46bd      	mov	sp, r7
 8003db8:	bd80      	pop	{r7, pc}

08003dba <ucg_SetColor>:
 8003dba:	b480      	push	{r7}
 8003dbc:	b083      	sub	sp, #12
 8003dbe:	af00      	add	r7, sp, #0
 8003dc0:	6078      	str	r0, [r7, #4]
 8003dc2:	4608      	mov	r0, r1
 8003dc4:	4611      	mov	r1, r2
 8003dc6:	461a      	mov	r2, r3
 8003dc8:	4603      	mov	r3, r0
 8003dca:	70fb      	strb	r3, [r7, #3]
 8003dcc:	460b      	mov	r3, r1
 8003dce:	70bb      	strb	r3, [r7, #2]
 8003dd0:	4613      	mov	r3, r2
 8003dd2:	707b      	strb	r3, [r7, #1]
 8003dd4:	78fa      	ldrb	r2, [r7, #3]
 8003dd6:	6879      	ldr	r1, [r7, #4]
 8003dd8:	4613      	mov	r3, r2
 8003dda:	005b      	lsls	r3, r3, #1
 8003ddc:	4413      	add	r3, r2
 8003dde:	440b      	add	r3, r1
 8003de0:	333a      	adds	r3, #58	; 0x3a
 8003de2:	78ba      	ldrb	r2, [r7, #2]
 8003de4:	701a      	strb	r2, [r3, #0]
 8003de6:	78fa      	ldrb	r2, [r7, #3]
 8003de8:	6879      	ldr	r1, [r7, #4]
 8003dea:	4613      	mov	r3, r2
 8003dec:	005b      	lsls	r3, r3, #1
 8003dee:	4413      	add	r3, r2
 8003df0:	440b      	add	r3, r1
 8003df2:	333b      	adds	r3, #59	; 0x3b
 8003df4:	787a      	ldrb	r2, [r7, #1]
 8003df6:	701a      	strb	r2, [r3, #0]
 8003df8:	78fa      	ldrb	r2, [r7, #3]
 8003dfa:	6879      	ldr	r1, [r7, #4]
 8003dfc:	4613      	mov	r3, r2
 8003dfe:	005b      	lsls	r3, r3, #1
 8003e00:	4413      	add	r3, r2
 8003e02:	440b      	add	r3, r1
 8003e04:	333c      	adds	r3, #60	; 0x3c
 8003e06:	7c3a      	ldrb	r2, [r7, #16]
 8003e08:	701a      	strb	r2, [r3, #0]
 8003e0a:	bf00      	nop
 8003e0c:	370c      	adds	r7, #12
 8003e0e:	46bd      	mov	sp, r7
 8003e10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e14:	4770      	bx	lr

08003e16 <ucg_UndoRotate>:
 8003e16:	b580      	push	{r7, lr}
 8003e18:	b082      	sub	sp, #8
 8003e1a:	af00      	add	r7, sp, #0
 8003e1c:	6078      	str	r0, [r7, #4]
 8003e1e:	687b      	ldr	r3, [r7, #4]
 8003e20:	691b      	ldr	r3, [r3, #16]
 8003e22:	2b00      	cmp	r3, #0
 8003e24:	d006      	beq.n	8003e34 <ucg_UndoRotate+0x1e>
 8003e26:	687b      	ldr	r3, [r7, #4]
 8003e28:	691a      	ldr	r2, [r3, #16]
 8003e2a:	687b      	ldr	r3, [r7, #4]
 8003e2c:	609a      	str	r2, [r3, #8]
 8003e2e:	687b      	ldr	r3, [r7, #4]
 8003e30:	2200      	movs	r2, #0
 8003e32:	611a      	str	r2, [r3, #16]
 8003e34:	6878      	ldr	r0, [r7, #4]
 8003e36:	f7ff f92a 	bl	800308e <ucg_GetDimension>
 8003e3a:	6878      	ldr	r0, [r7, #4]
 8003e3c:	f7ff f90f 	bl	800305e <ucg_SetMaxClipRange>
 8003e40:	bf00      	nop
 8003e42:	3708      	adds	r7, #8
 8003e44:	46bd      	mov	sp, r7
 8003e46:	bd80      	pop	{r7, pc}

08003e48 <ucg_rotate_270_xy>:
 8003e48:	b480      	push	{r7}
 8003e4a:	b085      	sub	sp, #20
 8003e4c:	af00      	add	r7, sp, #0
 8003e4e:	6078      	str	r0, [r7, #4]
 8003e50:	6039      	str	r1, [r7, #0]
 8003e52:	683b      	ldr	r3, [r7, #0]
 8003e54:	885b      	ldrh	r3, [r3, #2]
 8003e56:	81fb      	strh	r3, [r7, #14]
 8003e58:	687b      	ldr	r3, [r7, #4]
 8003e5a:	8adb      	ldrh	r3, [r3, #22]
 8003e5c:	81bb      	strh	r3, [r7, #12]
 8003e5e:	89ba      	ldrh	r2, [r7, #12]
 8003e60:	683b      	ldr	r3, [r7, #0]
 8003e62:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003e66:	b29b      	uxth	r3, r3
 8003e68:	1ad3      	subs	r3, r2, r3
 8003e6a:	b29b      	uxth	r3, r3
 8003e6c:	81bb      	strh	r3, [r7, #12]
 8003e6e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003e72:	b29b      	uxth	r3, r3
 8003e74:	3b01      	subs	r3, #1
 8003e76:	b29b      	uxth	r3, r3
 8003e78:	81bb      	strh	r3, [r7, #12]
 8003e7a:	683b      	ldr	r3, [r7, #0]
 8003e7c:	89ba      	ldrh	r2, [r7, #12]
 8003e7e:	805a      	strh	r2, [r3, #2]
 8003e80:	683b      	ldr	r3, [r7, #0]
 8003e82:	89fa      	ldrh	r2, [r7, #14]
 8003e84:	801a      	strh	r2, [r3, #0]
 8003e86:	bf00      	nop
 8003e88:	3714      	adds	r7, #20
 8003e8a:	46bd      	mov	sp, r7
 8003e8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e90:	4770      	bx	lr
	...

08003e94 <ucg_dev_rotate270>:
 8003e94:	b580      	push	{r7, lr}
 8003e96:	b086      	sub	sp, #24
 8003e98:	af00      	add	r7, sp, #0
 8003e9a:	60f8      	str	r0, [r7, #12]
 8003e9c:	460b      	mov	r3, r1
 8003e9e:	607a      	str	r2, [r7, #4]
 8003ea0:	817b      	strh	r3, [r7, #10]
 8003ea2:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8003ea6:	3b0c      	subs	r3, #12
 8003ea8:	2b0b      	cmp	r3, #11
 8003eaa:	d867      	bhi.n	8003f7c <ucg_dev_rotate270+0xe8>
 8003eac:	a201      	add	r2, pc, #4	; (adr r2, 8003eb4 <ucg_dev_rotate270+0x20>)
 8003eae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003eb2:	bf00      	nop
 8003eb4:	08003f0d 	.word	0x08003f0d
 8003eb8:	08003f7d 	.word	0x08003f7d
 8003ebc:	08003f7d 	.word	0x08003f7d
 8003ec0:	08003ee5 	.word	0x08003ee5
 8003ec4:	08003f7d 	.word	0x08003f7d
 8003ec8:	08003f7d 	.word	0x08003f7d
 8003ecc:	08003f7d 	.word	0x08003f7d
 8003ed0:	08003f7d 	.word	0x08003f7d
 8003ed4:	08003f4d 	.word	0x08003f4d
 8003ed8:	08003f4d 	.word	0x08003f4d
 8003edc:	08003f7d 	.word	0x08003f7d
 8003ee0:	08003f4d 	.word	0x08003f4d
 8003ee4:	68fb      	ldr	r3, [r7, #12]
 8003ee6:	691b      	ldr	r3, [r3, #16]
 8003ee8:	68fa      	ldr	r2, [r7, #12]
 8003eea:	3214      	adds	r2, #20
 8003eec:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8003ef0:	68f8      	ldr	r0, [r7, #12]
 8003ef2:	4798      	blx	r3
 8003ef4:	68fb      	ldr	r3, [r7, #12]
 8003ef6:	f9b3 2014 	ldrsh.w	r2, [r3, #20]
 8003efa:	687b      	ldr	r3, [r7, #4]
 8003efc:	805a      	strh	r2, [r3, #2]
 8003efe:	68fb      	ldr	r3, [r7, #12]
 8003f00:	f9b3 2016 	ldrsh.w	r2, [r3, #22]
 8003f04:	687b      	ldr	r3, [r7, #4]
 8003f06:	801a      	strh	r2, [r3, #0]
 8003f08:	2301      	movs	r3, #1
 8003f0a:	e03f      	b.n	8003f8c <ucg_dev_rotate270+0xf8>
 8003f0c:	687b      	ldr	r3, [r7, #4]
 8003f0e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003f12:	b29a      	uxth	r2, r3
 8003f14:	687b      	ldr	r3, [r7, #4]
 8003f16:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8003f1a:	b29b      	uxth	r3, r3
 8003f1c:	4413      	add	r3, r2
 8003f1e:	b29b      	uxth	r3, r3
 8003f20:	3b01      	subs	r3, #1
 8003f22:	b29b      	uxth	r3, r3
 8003f24:	b21a      	sxth	r2, r3
 8003f26:	687b      	ldr	r3, [r7, #4]
 8003f28:	801a      	strh	r2, [r3, #0]
 8003f2a:	687b      	ldr	r3, [r7, #4]
 8003f2c:	4619      	mov	r1, r3
 8003f2e:	68f8      	ldr	r0, [r7, #12]
 8003f30:	f7ff ff8a 	bl	8003e48 <ucg_rotate_270_xy>
 8003f34:	687b      	ldr	r3, [r7, #4]
 8003f36:	889b      	ldrh	r3, [r3, #4]
 8003f38:	82fb      	strh	r3, [r7, #22]
 8003f3a:	687b      	ldr	r3, [r7, #4]
 8003f3c:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 8003f40:	687b      	ldr	r3, [r7, #4]
 8003f42:	809a      	strh	r2, [r3, #4]
 8003f44:	687b      	ldr	r3, [r7, #4]
 8003f46:	8afa      	ldrh	r2, [r7, #22]
 8003f48:	80da      	strh	r2, [r3, #6]
 8003f4a:	e017      	b.n	8003f7c <ucg_dev_rotate270+0xe8>
 8003f4c:	68fb      	ldr	r3, [r7, #12]
 8003f4e:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8003f52:	b29b      	uxth	r3, r3
 8003f54:	3303      	adds	r3, #3
 8003f56:	b29b      	uxth	r3, r3
 8003f58:	b21a      	sxth	r2, r3
 8003f5a:	68fb      	ldr	r3, [r7, #12]
 8003f5c:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003f5e:	68fb      	ldr	r3, [r7, #12]
 8003f60:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8003f64:	f003 0303 	and.w	r3, r3, #3
 8003f68:	b21a      	sxth	r2, r3
 8003f6a:	68fb      	ldr	r3, [r7, #12]
 8003f6c:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003f6e:	68fb      	ldr	r3, [r7, #12]
 8003f70:	3324      	adds	r3, #36	; 0x24
 8003f72:	4619      	mov	r1, r3
 8003f74:	68f8      	ldr	r0, [r7, #12]
 8003f76:	f7ff ff67 	bl	8003e48 <ucg_rotate_270_xy>
 8003f7a:	bf00      	nop
 8003f7c:	68fb      	ldr	r3, [r7, #12]
 8003f7e:	691b      	ldr	r3, [r3, #16]
 8003f80:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8003f84:	687a      	ldr	r2, [r7, #4]
 8003f86:	68f8      	ldr	r0, [r7, #12]
 8003f88:	4798      	blx	r3
 8003f8a:	4603      	mov	r3, r0
 8003f8c:	4618      	mov	r0, r3
 8003f8e:	3718      	adds	r7, #24
 8003f90:	46bd      	mov	sp, r7
 8003f92:	bd80      	pop	{r7, pc}

08003f94 <ucg_SetRotate270>:
 8003f94:	b580      	push	{r7, lr}
 8003f96:	b082      	sub	sp, #8
 8003f98:	af00      	add	r7, sp, #0
 8003f9a:	6078      	str	r0, [r7, #4]
 8003f9c:	6878      	ldr	r0, [r7, #4]
 8003f9e:	f7ff ff3a 	bl	8003e16 <ucg_UndoRotate>
 8003fa2:	687b      	ldr	r3, [r7, #4]
 8003fa4:	689a      	ldr	r2, [r3, #8]
 8003fa6:	687b      	ldr	r3, [r7, #4]
 8003fa8:	611a      	str	r2, [r3, #16]
 8003faa:	687b      	ldr	r3, [r7, #4]
 8003fac:	4a05      	ldr	r2, [pc, #20]	; (8003fc4 <ucg_SetRotate270+0x30>)
 8003fae:	609a      	str	r2, [r3, #8]
 8003fb0:	6878      	ldr	r0, [r7, #4]
 8003fb2:	f7ff f86c 	bl	800308e <ucg_GetDimension>
 8003fb6:	6878      	ldr	r0, [r7, #4]
 8003fb8:	f7ff f851 	bl	800305e <ucg_SetMaxClipRange>
 8003fbc:	bf00      	nop
 8003fbe:	3708      	adds	r7, #8
 8003fc0:	46bd      	mov	sp, r7
 8003fc2:	bd80      	pop	{r7, pc}
 8003fc4:	08003e95 	.word	0x08003e95

08003fc8 <bufInit>:
 8003fc8:	b580      	push	{r7, lr}
 8003fca:	b084      	sub	sp, #16
 8003fcc:	af00      	add	r7, sp, #0
 8003fce:	60f8      	str	r0, [r7, #12]
 8003fd0:	60b9      	str	r1, [r7, #8]
 8003fd2:	4611      	mov	r1, r2
 8003fd4:	461a      	mov	r2, r3
 8003fd6:	460b      	mov	r3, r1
 8003fd8:	71fb      	strb	r3, [r7, #7]
 8003fda:	4613      	mov	r3, r2
 8003fdc:	80bb      	strh	r3, [r7, #4]
 8003fde:	68bb      	ldr	r3, [r7, #8]
 8003fe0:	88ba      	ldrh	r2, [r7, #4]
 8003fe2:	801a      	strh	r2, [r3, #0]
 8003fe4:	68bb      	ldr	r3, [r7, #8]
 8003fe6:	79fa      	ldrb	r2, [r7, #7]
 8003fe8:	711a      	strb	r2, [r3, #4]
 8003fea:	68bb      	ldr	r3, [r7, #8]
 8003fec:	68fa      	ldr	r2, [r7, #12]
 8003fee:	60da      	str	r2, [r3, #12]
 8003ff0:	68b8      	ldr	r0, [r7, #8]
 8003ff2:	f000 f836 	bl	8004062 <bufFlush>
 8003ff6:	bf00      	nop
 8003ff8:	3710      	adds	r7, #16
 8003ffa:	46bd      	mov	sp, r7
 8003ffc:	bd80      	pop	{r7, pc}

08003ffe <bufNumItems>:
 8003ffe:	b480      	push	{r7}
 8004000:	b083      	sub	sp, #12
 8004002:	af00      	add	r7, sp, #0
 8004004:	6078      	str	r0, [r7, #4]
 8004006:	687b      	ldr	r3, [r7, #4]
 8004008:	885b      	ldrh	r3, [r3, #2]
 800400a:	4618      	mov	r0, r3
 800400c:	370c      	adds	r7, #12
 800400e:	46bd      	mov	sp, r7
 8004010:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004014:	4770      	bx	lr

08004016 <bufIsFull>:
 8004016:	b480      	push	{r7}
 8004018:	b083      	sub	sp, #12
 800401a:	af00      	add	r7, sp, #0
 800401c:	6078      	str	r0, [r7, #4]
 800401e:	687b      	ldr	r3, [r7, #4]
 8004020:	885a      	ldrh	r2, [r3, #2]
 8004022:	687b      	ldr	r3, [r7, #4]
 8004024:	881b      	ldrh	r3, [r3, #0]
 8004026:	429a      	cmp	r2, r3
 8004028:	bf2c      	ite	cs
 800402a:	2301      	movcs	r3, #1
 800402c:	2300      	movcc	r3, #0
 800402e:	b2db      	uxtb	r3, r3
 8004030:	4618      	mov	r0, r3
 8004032:	370c      	adds	r7, #12
 8004034:	46bd      	mov	sp, r7
 8004036:	f85d 7b04 	ldr.w	r7, [sp], #4
 800403a:	4770      	bx	lr

0800403c <bufIsEmpty>:
 800403c:	b480      	push	{r7}
 800403e:	b083      	sub	sp, #12
 8004040:	af00      	add	r7, sp, #0
 8004042:	6078      	str	r0, [r7, #4]
 8004044:	687b      	ldr	r3, [r7, #4]
 8004046:	88da      	ldrh	r2, [r3, #6]
 8004048:	687b      	ldr	r3, [r7, #4]
 800404a:	891b      	ldrh	r3, [r3, #8]
 800404c:	429a      	cmp	r2, r3
 800404e:	bf0c      	ite	eq
 8004050:	2301      	moveq	r3, #1
 8004052:	2300      	movne	r3, #0
 8004054:	b2db      	uxtb	r3, r3
 8004056:	4618      	mov	r0, r3
 8004058:	370c      	adds	r7, #12
 800405a:	46bd      	mov	sp, r7
 800405c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004060:	4770      	bx	lr

08004062 <bufFlush>:
 8004062:	b580      	push	{r7, lr}
 8004064:	b082      	sub	sp, #8
 8004066:	af00      	add	r7, sp, #0
 8004068:	6078      	str	r0, [r7, #4]
 800406a:	687b      	ldr	r3, [r7, #4]
 800406c:	2200      	movs	r2, #0
 800406e:	80da      	strh	r2, [r3, #6]
 8004070:	687b      	ldr	r3, [r7, #4]
 8004072:	2200      	movs	r2, #0
 8004074:	811a      	strh	r2, [r3, #8]
 8004076:	687b      	ldr	r3, [r7, #4]
 8004078:	2200      	movs	r2, #0
 800407a:	805a      	strh	r2, [r3, #2]
 800407c:	687b      	ldr	r3, [r7, #4]
 800407e:	68d8      	ldr	r0, [r3, #12]
 8004080:	687b      	ldr	r3, [r7, #4]
 8004082:	881b      	ldrh	r3, [r3, #0]
 8004084:	461a      	mov	r2, r3
 8004086:	2100      	movs	r1, #0
 8004088:	f000 f894 	bl	80041b4 <memsetl>
 800408c:	bf00      	nop
 800408e:	3708      	adds	r7, #8
 8004090:	46bd      	mov	sp, r7
 8004092:	bd80      	pop	{r7, pc}

08004094 <bufEnDat>:
 8004094:	b580      	push	{r7, lr}
 8004096:	b084      	sub	sp, #16
 8004098:	af00      	add	r7, sp, #0
 800409a:	6078      	str	r0, [r7, #4]
 800409c:	6039      	str	r1, [r7, #0]
 800409e:	b672      	cpsid	i
 80040a0:	2300      	movs	r3, #0
 80040a2:	73fb      	strb	r3, [r7, #15]
 80040a4:	e021      	b.n	80040ea <bufEnDat+0x56>
 80040a6:	7bfb      	ldrb	r3, [r7, #15]
 80040a8:	683a      	ldr	r2, [r7, #0]
 80040aa:	441a      	add	r2, r3
 80040ac:	687b      	ldr	r3, [r7, #4]
 80040ae:	68db      	ldr	r3, [r3, #12]
 80040b0:	6879      	ldr	r1, [r7, #4]
 80040b2:	88c9      	ldrh	r1, [r1, #6]
 80040b4:	440b      	add	r3, r1
 80040b6:	7812      	ldrb	r2, [r2, #0]
 80040b8:	701a      	strb	r2, [r3, #0]
 80040ba:	687b      	ldr	r3, [r7, #4]
 80040bc:	88db      	ldrh	r3, [r3, #6]
 80040be:	3301      	adds	r3, #1
 80040c0:	b29b      	uxth	r3, r3
 80040c2:	b21a      	sxth	r2, r3
 80040c4:	687b      	ldr	r3, [r7, #4]
 80040c6:	881b      	ldrh	r3, [r3, #0]
 80040c8:	3b01      	subs	r3, #1
 80040ca:	b29b      	uxth	r3, r3
 80040cc:	b21b      	sxth	r3, r3
 80040ce:	4013      	ands	r3, r2
 80040d0:	b21b      	sxth	r3, r3
 80040d2:	b29a      	uxth	r2, r3
 80040d4:	687b      	ldr	r3, [r7, #4]
 80040d6:	80da      	strh	r2, [r3, #6]
 80040d8:	687b      	ldr	r3, [r7, #4]
 80040da:	885b      	ldrh	r3, [r3, #2]
 80040dc:	3301      	adds	r3, #1
 80040de:	b29a      	uxth	r2, r3
 80040e0:	687b      	ldr	r3, [r7, #4]
 80040e2:	805a      	strh	r2, [r3, #2]
 80040e4:	7bfb      	ldrb	r3, [r7, #15]
 80040e6:	3301      	adds	r3, #1
 80040e8:	73fb      	strb	r3, [r7, #15]
 80040ea:	687b      	ldr	r3, [r7, #4]
 80040ec:	791b      	ldrb	r3, [r3, #4]
 80040ee:	7bfa      	ldrb	r2, [r7, #15]
 80040f0:	429a      	cmp	r2, r3
 80040f2:	d3d8      	bcc.n	80040a6 <bufEnDat+0x12>
 80040f4:	6878      	ldr	r0, [r7, #4]
 80040f6:	f7ff ff8e 	bl	8004016 <bufIsFull>
 80040fa:	4603      	mov	r3, r0
 80040fc:	2b00      	cmp	r3, #0
 80040fe:	d011      	beq.n	8004124 <bufEnDat+0x90>
 8004100:	687b      	ldr	r3, [r7, #4]
 8004102:	891a      	ldrh	r2, [r3, #8]
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	791b      	ldrb	r3, [r3, #4]
 8004108:	b29b      	uxth	r3, r3
 800410a:	4413      	add	r3, r2
 800410c:	b29b      	uxth	r3, r3
 800410e:	b21a      	sxth	r2, r3
 8004110:	687b      	ldr	r3, [r7, #4]
 8004112:	881b      	ldrh	r3, [r3, #0]
 8004114:	3b01      	subs	r3, #1
 8004116:	b29b      	uxth	r3, r3
 8004118:	b21b      	sxth	r3, r3
 800411a:	4013      	ands	r3, r2
 800411c:	b21b      	sxth	r3, r3
 800411e:	b29a      	uxth	r2, r3
 8004120:	687b      	ldr	r3, [r7, #4]
 8004122:	811a      	strh	r2, [r3, #8]
 8004124:	b662      	cpsie	i
 8004126:	2300      	movs	r3, #0
 8004128:	4618      	mov	r0, r3
 800412a:	3710      	adds	r7, #16
 800412c:	46bd      	mov	sp, r7
 800412e:	bd80      	pop	{r7, pc}

08004130 <bufDeDat>:
 8004130:	b580      	push	{r7, lr}
 8004132:	b084      	sub	sp, #16
 8004134:	af00      	add	r7, sp, #0
 8004136:	6078      	str	r0, [r7, #4]
 8004138:	6039      	str	r1, [r7, #0]
 800413a:	b672      	cpsid	i
 800413c:	6878      	ldr	r0, [r7, #4]
 800413e:	f7ff ff7d 	bl	800403c <bufIsEmpty>
 8004142:	4603      	mov	r3, r0
 8004144:	2b00      	cmp	r3, #0
 8004146:	d005      	beq.n	8004154 <bufDeDat+0x24>
 8004148:	687b      	ldr	r3, [r7, #4]
 800414a:	2200      	movs	r2, #0
 800414c:	805a      	strh	r2, [r3, #2]
 800414e:	b662      	cpsie	i
 8004150:	2302      	movs	r3, #2
 8004152:	e02b      	b.n	80041ac <bufDeDat+0x7c>
 8004154:	2300      	movs	r3, #0
 8004156:	73fb      	strb	r3, [r7, #15]
 8004158:	e021      	b.n	800419e <bufDeDat+0x6e>
 800415a:	687b      	ldr	r3, [r7, #4]
 800415c:	68db      	ldr	r3, [r3, #12]
 800415e:	687a      	ldr	r2, [r7, #4]
 8004160:	8912      	ldrh	r2, [r2, #8]
 8004162:	441a      	add	r2, r3
 8004164:	7bfb      	ldrb	r3, [r7, #15]
 8004166:	6839      	ldr	r1, [r7, #0]
 8004168:	440b      	add	r3, r1
 800416a:	7812      	ldrb	r2, [r2, #0]
 800416c:	701a      	strb	r2, [r3, #0]
 800416e:	687b      	ldr	r3, [r7, #4]
 8004170:	891b      	ldrh	r3, [r3, #8]
 8004172:	3301      	adds	r3, #1
 8004174:	b29b      	uxth	r3, r3
 8004176:	b21a      	sxth	r2, r3
 8004178:	687b      	ldr	r3, [r7, #4]
 800417a:	881b      	ldrh	r3, [r3, #0]
 800417c:	3b01      	subs	r3, #1
 800417e:	b29b      	uxth	r3, r3
 8004180:	b21b      	sxth	r3, r3
 8004182:	4013      	ands	r3, r2
 8004184:	b21b      	sxth	r3, r3
 8004186:	b29a      	uxth	r2, r3
 8004188:	687b      	ldr	r3, [r7, #4]
 800418a:	811a      	strh	r2, [r3, #8]
 800418c:	687b      	ldr	r3, [r7, #4]
 800418e:	885b      	ldrh	r3, [r3, #2]
 8004190:	3b01      	subs	r3, #1
 8004192:	b29a      	uxth	r2, r3
 8004194:	687b      	ldr	r3, [r7, #4]
 8004196:	805a      	strh	r2, [r3, #2]
 8004198:	7bfb      	ldrb	r3, [r7, #15]
 800419a:	3301      	adds	r3, #1
 800419c:	73fb      	strb	r3, [r7, #15]
 800419e:	687b      	ldr	r3, [r7, #4]
 80041a0:	791b      	ldrb	r3, [r3, #4]
 80041a2:	7bfa      	ldrb	r2, [r7, #15]
 80041a4:	429a      	cmp	r2, r3
 80041a6:	d3d8      	bcc.n	800415a <bufDeDat+0x2a>
 80041a8:	b662      	cpsie	i
 80041aa:	2300      	movs	r3, #0
 80041ac:	4618      	mov	r0, r3
 80041ae:	3710      	adds	r7, #16
 80041b0:	46bd      	mov	sp, r7
 80041b2:	bd80      	pop	{r7, pc}

080041b4 <memsetl>:
 80041b4:	b480      	push	{r7}
 80041b6:	b083      	sub	sp, #12
 80041b8:	af00      	add	r7, sp, #0
 80041ba:	6078      	str	r0, [r7, #4]
 80041bc:	460b      	mov	r3, r1
 80041be:	70fb      	strb	r3, [r7, #3]
 80041c0:	4613      	mov	r3, r2
 80041c2:	803b      	strh	r3, [r7, #0]
 80041c4:	e004      	b.n	80041d0 <memsetl+0x1c>
 80041c6:	687b      	ldr	r3, [r7, #4]
 80041c8:	1c5a      	adds	r2, r3, #1
 80041ca:	607a      	str	r2, [r7, #4]
 80041cc:	78fa      	ldrb	r2, [r7, #3]
 80041ce:	701a      	strb	r2, [r3, #0]
 80041d0:	883b      	ldrh	r3, [r7, #0]
 80041d2:	1e5a      	subs	r2, r3, #1
 80041d4:	803a      	strh	r2, [r7, #0]
 80041d6:	2b00      	cmp	r3, #0
 80041d8:	d1f5      	bne.n	80041c6 <memsetl+0x12>
 80041da:	bf00      	nop
 80041dc:	370c      	adds	r7, #12
 80041de:	46bd      	mov	sp, r7
 80041e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041e4:	4770      	bx	lr

080041e6 <ucg_clip_is_x_visible>:
 80041e6:	b480      	push	{r7}
 80041e8:	b085      	sub	sp, #20
 80041ea:	af00      	add	r7, sp, #0
 80041ec:	6078      	str	r0, [r7, #4]
 80041ee:	687b      	ldr	r3, [r7, #4]
 80041f0:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 80041f2:	81fb      	strh	r3, [r7, #14]
 80041f4:	89fa      	ldrh	r2, [r7, #14]
 80041f6:	687b      	ldr	r3, [r7, #4]
 80041f8:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 80041fc:	b29b      	uxth	r3, r3
 80041fe:	1ad3      	subs	r3, r2, r3
 8004200:	b29b      	uxth	r3, r3
 8004202:	81fb      	strh	r3, [r7, #14]
 8004204:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004208:	2b00      	cmp	r3, #0
 800420a:	da01      	bge.n	8004210 <ucg_clip_is_x_visible+0x2a>
 800420c:	2300      	movs	r3, #0
 800420e:	e009      	b.n	8004224 <ucg_clip_is_x_visible+0x3e>
 8004210:	687b      	ldr	r3, [r7, #4]
 8004212:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 8004216:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 800421a:	429a      	cmp	r2, r3
 800421c:	db01      	blt.n	8004222 <ucg_clip_is_x_visible+0x3c>
 800421e:	2300      	movs	r3, #0
 8004220:	e000      	b.n	8004224 <ucg_clip_is_x_visible+0x3e>
 8004222:	2301      	movs	r3, #1
 8004224:	4618      	mov	r0, r3
 8004226:	3714      	adds	r7, #20
 8004228:	46bd      	mov	sp, r7
 800422a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800422e:	4770      	bx	lr

08004230 <ucg_clip_is_y_visible>:
 8004230:	b480      	push	{r7}
 8004232:	b085      	sub	sp, #20
 8004234:	af00      	add	r7, sp, #0
 8004236:	6078      	str	r0, [r7, #4]
 8004238:	687b      	ldr	r3, [r7, #4]
 800423a:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800423c:	81fb      	strh	r3, [r7, #14]
 800423e:	89fa      	ldrh	r2, [r7, #14]
 8004240:	687b      	ldr	r3, [r7, #4]
 8004242:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 8004246:	b29b      	uxth	r3, r3
 8004248:	1ad3      	subs	r3, r2, r3
 800424a:	b29b      	uxth	r3, r3
 800424c:	81fb      	strh	r3, [r7, #14]
 800424e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004252:	2b00      	cmp	r3, #0
 8004254:	da01      	bge.n	800425a <ucg_clip_is_y_visible+0x2a>
 8004256:	2300      	movs	r3, #0
 8004258:	e009      	b.n	800426e <ucg_clip_is_y_visible+0x3e>
 800425a:	687b      	ldr	r3, [r7, #4]
 800425c:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 8004260:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8004264:	429a      	cmp	r2, r3
 8004266:	db01      	blt.n	800426c <ucg_clip_is_y_visible+0x3c>
 8004268:	2300      	movs	r3, #0
 800426a:	e000      	b.n	800426e <ucg_clip_is_y_visible+0x3e>
 800426c:	2301      	movs	r3, #1
 800426e:	4618      	mov	r0, r3
 8004270:	3714      	adds	r7, #20
 8004272:	46bd      	mov	sp, r7
 8004274:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004278:	4770      	bx	lr

0800427a <ucg_clip_intersection>:
 800427a:	b480      	push	{r7}
 800427c:	b087      	sub	sp, #28
 800427e:	af00      	add	r7, sp, #0
 8004280:	60f8      	str	r0, [r7, #12]
 8004282:	60b9      	str	r1, [r7, #8]
 8004284:	4611      	mov	r1, r2
 8004286:	461a      	mov	r2, r3
 8004288:	460b      	mov	r3, r1
 800428a:	80fb      	strh	r3, [r7, #6]
 800428c:	4613      	mov	r3, r2
 800428e:	80bb      	strh	r3, [r7, #4]
 8004290:	68fb      	ldr	r3, [r7, #12]
 8004292:	881b      	ldrh	r3, [r3, #0]
 8004294:	82fb      	strh	r3, [r7, #22]
 8004296:	68bb      	ldr	r3, [r7, #8]
 8004298:	881b      	ldrh	r3, [r3, #0]
 800429a:	82bb      	strh	r3, [r7, #20]
 800429c:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 80042a0:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80042a4:	429a      	cmp	r2, r3
 80042a6:	db01      	blt.n	80042ac <ucg_clip_intersection+0x32>
 80042a8:	2300      	movs	r3, #0
 80042aa:	e01a      	b.n	80042e2 <ucg_clip_intersection+0x68>
 80042ac:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 80042b0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80042b4:	429a      	cmp	r2, r3
 80042b6:	dc01      	bgt.n	80042bc <ucg_clip_intersection+0x42>
 80042b8:	2300      	movs	r3, #0
 80042ba:	e012      	b.n	80042e2 <ucg_clip_intersection+0x68>
 80042bc:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 80042c0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80042c4:	429a      	cmp	r2, r3
 80042c6:	da02      	bge.n	80042ce <ucg_clip_intersection+0x54>
 80042c8:	68fb      	ldr	r3, [r7, #12]
 80042ca:	88fa      	ldrh	r2, [r7, #6]
 80042cc:	801a      	strh	r2, [r3, #0]
 80042ce:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 80042d2:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80042d6:	429a      	cmp	r2, r3
 80042d8:	dd02      	ble.n	80042e0 <ucg_clip_intersection+0x66>
 80042da:	68bb      	ldr	r3, [r7, #8]
 80042dc:	88ba      	ldrh	r2, [r7, #4]
 80042de:	801a      	strh	r2, [r3, #0]
 80042e0:	2301      	movs	r3, #1
 80042e2:	4618      	mov	r0, r3
 80042e4:	371c      	adds	r7, #28
 80042e6:	46bd      	mov	sp, r7
 80042e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042ec:	4770      	bx	lr

080042ee <ucg_clip_is_pixel_visible>:
 80042ee:	b580      	push	{r7, lr}
 80042f0:	b082      	sub	sp, #8
 80042f2:	af00      	add	r7, sp, #0
 80042f4:	6078      	str	r0, [r7, #4]
 80042f6:	6878      	ldr	r0, [r7, #4]
 80042f8:	f7ff ff75 	bl	80041e6 <ucg_clip_is_x_visible>
 80042fc:	4603      	mov	r3, r0
 80042fe:	2b00      	cmp	r3, #0
 8004300:	d101      	bne.n	8004306 <ucg_clip_is_pixel_visible+0x18>
 8004302:	2300      	movs	r3, #0
 8004304:	e008      	b.n	8004318 <ucg_clip_is_pixel_visible+0x2a>
 8004306:	6878      	ldr	r0, [r7, #4]
 8004308:	f7ff ff92 	bl	8004230 <ucg_clip_is_y_visible>
 800430c:	4603      	mov	r3, r0
 800430e:	2b00      	cmp	r3, #0
 8004310:	d101      	bne.n	8004316 <ucg_clip_is_pixel_visible+0x28>
 8004312:	2300      	movs	r3, #0
 8004314:	e000      	b.n	8004318 <ucg_clip_is_pixel_visible+0x2a>
 8004316:	2301      	movs	r3, #1
 8004318:	4618      	mov	r0, r3
 800431a:	3708      	adds	r7, #8
 800431c:	46bd      	mov	sp, r7
 800431e:	bd80      	pop	{r7, pc}

08004320 <ucg_clip_l90fx>:
 8004320:	b590      	push	{r4, r7, lr}
 8004322:	b085      	sub	sp, #20
 8004324:	af00      	add	r7, sp, #0
 8004326:	6078      	str	r0, [r7, #4]
 8004328:	687b      	ldr	r3, [r7, #4]
 800432a:	2200      	movs	r2, #0
 800432c:	861a      	strh	r2, [r3, #48]	; 0x30
 800432e:	687b      	ldr	r3, [r7, #4]
 8004330:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8004334:	2b03      	cmp	r3, #3
 8004336:	f200 816d 	bhi.w	8004614 <ucg_clip_l90fx+0x2f4>
 800433a:	a201      	add	r2, pc, #4	; (adr r2, 8004340 <ucg_clip_l90fx+0x20>)
 800433c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004340:	08004351 	.word	0x08004351
 8004344:	080043f7 	.word	0x080043f7
 8004348:	0800449d 	.word	0x0800449d
 800434c:	08004559 	.word	0x08004559
 8004350:	6878      	ldr	r0, [r7, #4]
 8004352:	f7ff ff6d 	bl	8004230 <ucg_clip_is_y_visible>
 8004356:	4603      	mov	r3, r0
 8004358:	2b00      	cmp	r3, #0
 800435a:	d101      	bne.n	8004360 <ucg_clip_l90fx+0x40>
 800435c:	2300      	movs	r3, #0
 800435e:	e15a      	b.n	8004616 <ucg_clip_l90fx+0x2f6>
 8004360:	687b      	ldr	r3, [r7, #4]
 8004362:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8004366:	81fb      	strh	r3, [r7, #14]
 8004368:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800436c:	81bb      	strh	r3, [r7, #12]
 800436e:	687b      	ldr	r3, [r7, #4]
 8004370:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8004374:	b29a      	uxth	r2, r3
 8004376:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800437a:	b29b      	uxth	r3, r3
 800437c:	4413      	add	r3, r2
 800437e:	b29b      	uxth	r3, r3
 8004380:	b21b      	sxth	r3, r3
 8004382:	81bb      	strh	r3, [r7, #12]
 8004384:	687b      	ldr	r3, [r7, #4]
 8004386:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	; 0x70
 800438a:	687b      	ldr	r3, [r7, #4]
 800438c:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 8004390:	b29a      	uxth	r2, r3
 8004392:	687b      	ldr	r3, [r7, #4]
 8004394:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 8004398:	b29b      	uxth	r3, r3
 800439a:	4413      	add	r3, r2
 800439c:	b29b      	uxth	r3, r3
 800439e:	b21b      	sxth	r3, r3
 80043a0:	f107 010c 	add.w	r1, r7, #12
 80043a4:	f107 000e 	add.w	r0, r7, #14
 80043a8:	4622      	mov	r2, r4
 80043aa:	f7ff ff66 	bl	800427a <ucg_clip_intersection>
 80043ae:	4603      	mov	r3, r0
 80043b0:	2b00      	cmp	r3, #0
 80043b2:	d101      	bne.n	80043b8 <ucg_clip_l90fx+0x98>
 80043b4:	2300      	movs	r3, #0
 80043b6:	e12e      	b.n	8004616 <ucg_clip_l90fx+0x2f6>
 80043b8:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80043bc:	b29a      	uxth	r2, r3
 80043be:	687b      	ldr	r3, [r7, #4]
 80043c0:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 80043c4:	b29b      	uxth	r3, r3
 80043c6:	1ad3      	subs	r3, r2, r3
 80043c8:	b29b      	uxth	r3, r3
 80043ca:	b21a      	sxth	r2, r3
 80043cc:	687b      	ldr	r3, [r7, #4]
 80043ce:	861a      	strh	r2, [r3, #48]	; 0x30
 80043d0:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 80043d4:	687b      	ldr	r3, [r7, #4]
 80043d6:	849a      	strh	r2, [r3, #36]	; 0x24
 80043d8:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80043dc:	b29a      	uxth	r2, r3
 80043de:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80043e2:	b29b      	uxth	r3, r3
 80043e4:	1ad3      	subs	r3, r2, r3
 80043e6:	b29b      	uxth	r3, r3
 80043e8:	b21b      	sxth	r3, r3
 80043ea:	81bb      	strh	r3, [r7, #12]
 80043ec:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 80043f0:	687b      	ldr	r3, [r7, #4]
 80043f2:	859a      	strh	r2, [r3, #44]	; 0x2c
 80043f4:	e10e      	b.n	8004614 <ucg_clip_l90fx+0x2f4>
 80043f6:	6878      	ldr	r0, [r7, #4]
 80043f8:	f7ff fef5 	bl	80041e6 <ucg_clip_is_x_visible>
 80043fc:	4603      	mov	r3, r0
 80043fe:	2b00      	cmp	r3, #0
 8004400:	d101      	bne.n	8004406 <ucg_clip_l90fx+0xe6>
 8004402:	2300      	movs	r3, #0
 8004404:	e107      	b.n	8004616 <ucg_clip_l90fx+0x2f6>
 8004406:	687b      	ldr	r3, [r7, #4]
 8004408:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 800440c:	81fb      	strh	r3, [r7, #14]
 800440e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004412:	81bb      	strh	r3, [r7, #12]
 8004414:	687b      	ldr	r3, [r7, #4]
 8004416:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 800441a:	b29a      	uxth	r2, r3
 800441c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004420:	b29b      	uxth	r3, r3
 8004422:	4413      	add	r3, r2
 8004424:	b29b      	uxth	r3, r3
 8004426:	b21b      	sxth	r3, r3
 8004428:	81bb      	strh	r3, [r7, #12]
 800442a:	687b      	ldr	r3, [r7, #4]
 800442c:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	; 0x72
 8004430:	687b      	ldr	r3, [r7, #4]
 8004432:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 8004436:	b29a      	uxth	r2, r3
 8004438:	687b      	ldr	r3, [r7, #4]
 800443a:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 800443e:	b29b      	uxth	r3, r3
 8004440:	4413      	add	r3, r2
 8004442:	b29b      	uxth	r3, r3
 8004444:	b21b      	sxth	r3, r3
 8004446:	f107 010c 	add.w	r1, r7, #12
 800444a:	f107 000e 	add.w	r0, r7, #14
 800444e:	4622      	mov	r2, r4
 8004450:	f7ff ff13 	bl	800427a <ucg_clip_intersection>
 8004454:	4603      	mov	r3, r0
 8004456:	2b00      	cmp	r3, #0
 8004458:	d101      	bne.n	800445e <ucg_clip_l90fx+0x13e>
 800445a:	2300      	movs	r3, #0
 800445c:	e0db      	b.n	8004616 <ucg_clip_l90fx+0x2f6>
 800445e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004462:	b29a      	uxth	r2, r3
 8004464:	687b      	ldr	r3, [r7, #4]
 8004466:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 800446a:	b29b      	uxth	r3, r3
 800446c:	1ad3      	subs	r3, r2, r3
 800446e:	b29b      	uxth	r3, r3
 8004470:	b21a      	sxth	r2, r3
 8004472:	687b      	ldr	r3, [r7, #4]
 8004474:	861a      	strh	r2, [r3, #48]	; 0x30
 8004476:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 800447a:	687b      	ldr	r3, [r7, #4]
 800447c:	84da      	strh	r2, [r3, #38]	; 0x26
 800447e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004482:	b29a      	uxth	r2, r3
 8004484:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004488:	b29b      	uxth	r3, r3
 800448a:	1ad3      	subs	r3, r2, r3
 800448c:	b29b      	uxth	r3, r3
 800448e:	b21b      	sxth	r3, r3
 8004490:	81bb      	strh	r3, [r7, #12]
 8004492:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8004496:	687b      	ldr	r3, [r7, #4]
 8004498:	859a      	strh	r2, [r3, #44]	; 0x2c
 800449a:	e0bb      	b.n	8004614 <ucg_clip_l90fx+0x2f4>
 800449c:	6878      	ldr	r0, [r7, #4]
 800449e:	f7ff fec7 	bl	8004230 <ucg_clip_is_y_visible>
 80044a2:	4603      	mov	r3, r0
 80044a4:	2b00      	cmp	r3, #0
 80044a6:	d101      	bne.n	80044ac <ucg_clip_l90fx+0x18c>
 80044a8:	2300      	movs	r3, #0
 80044aa:	e0b4      	b.n	8004616 <ucg_clip_l90fx+0x2f6>
 80044ac:	687b      	ldr	r3, [r7, #4]
 80044ae:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 80044b2:	81bb      	strh	r3, [r7, #12]
 80044b4:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80044b8:	b29b      	uxth	r3, r3
 80044ba:	3301      	adds	r3, #1
 80044bc:	b29b      	uxth	r3, r3
 80044be:	b21b      	sxth	r3, r3
 80044c0:	81bb      	strh	r3, [r7, #12]
 80044c2:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80044c6:	81fb      	strh	r3, [r7, #14]
 80044c8:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80044cc:	b29a      	uxth	r2, r3
 80044ce:	687b      	ldr	r3, [r7, #4]
 80044d0:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 80044d4:	b29b      	uxth	r3, r3
 80044d6:	1ad3      	subs	r3, r2, r3
 80044d8:	b29b      	uxth	r3, r3
 80044da:	b21b      	sxth	r3, r3
 80044dc:	81fb      	strh	r3, [r7, #14]
 80044de:	687b      	ldr	r3, [r7, #4]
 80044e0:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	; 0x70
 80044e4:	687b      	ldr	r3, [r7, #4]
 80044e6:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 80044ea:	b29a      	uxth	r2, r3
 80044ec:	687b      	ldr	r3, [r7, #4]
 80044ee:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 80044f2:	b29b      	uxth	r3, r3
 80044f4:	4413      	add	r3, r2
 80044f6:	b29b      	uxth	r3, r3
 80044f8:	b21b      	sxth	r3, r3
 80044fa:	f107 010c 	add.w	r1, r7, #12
 80044fe:	f107 000e 	add.w	r0, r7, #14
 8004502:	4622      	mov	r2, r4
 8004504:	f7ff feb9 	bl	800427a <ucg_clip_intersection>
 8004508:	4603      	mov	r3, r0
 800450a:	2b00      	cmp	r3, #0
 800450c:	d101      	bne.n	8004512 <ucg_clip_l90fx+0x1f2>
 800450e:	2300      	movs	r3, #0
 8004510:	e081      	b.n	8004616 <ucg_clip_l90fx+0x2f6>
 8004512:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004516:	b29a      	uxth	r2, r3
 8004518:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800451c:	b29b      	uxth	r3, r3
 800451e:	1ad3      	subs	r3, r2, r3
 8004520:	b29b      	uxth	r3, r3
 8004522:	b21a      	sxth	r2, r3
 8004524:	687b      	ldr	r3, [r7, #4]
 8004526:	859a      	strh	r2, [r3, #44]	; 0x2c
 8004528:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800452c:	b29b      	uxth	r3, r3
 800452e:	3b01      	subs	r3, #1
 8004530:	b29b      	uxth	r3, r3
 8004532:	b21b      	sxth	r3, r3
 8004534:	81bb      	strh	r3, [r7, #12]
 8004536:	687b      	ldr	r3, [r7, #4]
 8004538:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 800453c:	b29a      	uxth	r2, r3
 800453e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004542:	b29b      	uxth	r3, r3
 8004544:	1ad3      	subs	r3, r2, r3
 8004546:	b29b      	uxth	r3, r3
 8004548:	b21a      	sxth	r2, r3
 800454a:	687b      	ldr	r3, [r7, #4]
 800454c:	861a      	strh	r2, [r3, #48]	; 0x30
 800454e:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8004552:	687b      	ldr	r3, [r7, #4]
 8004554:	849a      	strh	r2, [r3, #36]	; 0x24
 8004556:	e05d      	b.n	8004614 <ucg_clip_l90fx+0x2f4>
 8004558:	6878      	ldr	r0, [r7, #4]
 800455a:	f7ff fe44 	bl	80041e6 <ucg_clip_is_x_visible>
 800455e:	4603      	mov	r3, r0
 8004560:	2b00      	cmp	r3, #0
 8004562:	d101      	bne.n	8004568 <ucg_clip_l90fx+0x248>
 8004564:	2300      	movs	r3, #0
 8004566:	e056      	b.n	8004616 <ucg_clip_l90fx+0x2f6>
 8004568:	687b      	ldr	r3, [r7, #4]
 800456a:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 800456e:	81bb      	strh	r3, [r7, #12]
 8004570:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004574:	b29b      	uxth	r3, r3
 8004576:	3301      	adds	r3, #1
 8004578:	b29b      	uxth	r3, r3
 800457a:	b21b      	sxth	r3, r3
 800457c:	81bb      	strh	r3, [r7, #12]
 800457e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004582:	81fb      	strh	r3, [r7, #14]
 8004584:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004588:	b29a      	uxth	r2, r3
 800458a:	687b      	ldr	r3, [r7, #4]
 800458c:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8004590:	b29b      	uxth	r3, r3
 8004592:	1ad3      	subs	r3, r2, r3
 8004594:	b29b      	uxth	r3, r3
 8004596:	b21b      	sxth	r3, r3
 8004598:	81fb      	strh	r3, [r7, #14]
 800459a:	687b      	ldr	r3, [r7, #4]
 800459c:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	; 0x72
 80045a0:	687b      	ldr	r3, [r7, #4]
 80045a2:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 80045a6:	b29a      	uxth	r2, r3
 80045a8:	687b      	ldr	r3, [r7, #4]
 80045aa:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 80045ae:	b29b      	uxth	r3, r3
 80045b0:	4413      	add	r3, r2
 80045b2:	b29b      	uxth	r3, r3
 80045b4:	b21b      	sxth	r3, r3
 80045b6:	f107 010c 	add.w	r1, r7, #12
 80045ba:	f107 000e 	add.w	r0, r7, #14
 80045be:	4622      	mov	r2, r4
 80045c0:	f7ff fe5b 	bl	800427a <ucg_clip_intersection>
 80045c4:	4603      	mov	r3, r0
 80045c6:	2b00      	cmp	r3, #0
 80045c8:	d101      	bne.n	80045ce <ucg_clip_l90fx+0x2ae>
 80045ca:	2300      	movs	r3, #0
 80045cc:	e023      	b.n	8004616 <ucg_clip_l90fx+0x2f6>
 80045ce:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80045d2:	b29a      	uxth	r2, r3
 80045d4:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80045d8:	b29b      	uxth	r3, r3
 80045da:	1ad3      	subs	r3, r2, r3
 80045dc:	b29b      	uxth	r3, r3
 80045de:	b21a      	sxth	r2, r3
 80045e0:	687b      	ldr	r3, [r7, #4]
 80045e2:	859a      	strh	r2, [r3, #44]	; 0x2c
 80045e4:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80045e8:	b29b      	uxth	r3, r3
 80045ea:	3b01      	subs	r3, #1
 80045ec:	b29b      	uxth	r3, r3
 80045ee:	b21b      	sxth	r3, r3
 80045f0:	81bb      	strh	r3, [r7, #12]
 80045f2:	687b      	ldr	r3, [r7, #4]
 80045f4:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 80045f8:	b29a      	uxth	r2, r3
 80045fa:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80045fe:	b29b      	uxth	r3, r3
 8004600:	1ad3      	subs	r3, r2, r3
 8004602:	b29b      	uxth	r3, r3
 8004604:	b21a      	sxth	r2, r3
 8004606:	687b      	ldr	r3, [r7, #4]
 8004608:	861a      	strh	r2, [r3, #48]	; 0x30
 800460a:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 800460e:	687b      	ldr	r3, [r7, #4]
 8004610:	84da      	strh	r2, [r3, #38]	; 0x26
 8004612:	bf00      	nop
 8004614:	2301      	movs	r3, #1
 8004616:	4618      	mov	r0, r3
 8004618:	3714      	adds	r7, #20
 800461a:	46bd      	mov	sp, r7
 800461c:	bd90      	pop	{r4, r7, pc}
 800461e:	bf00      	nop

08004620 <ucg_clip_l90se>:
 8004620:	b580      	push	{r7, lr}
 8004622:	b084      	sub	sp, #16
 8004624:	af00      	add	r7, sp, #0
 8004626:	6078      	str	r0, [r7, #4]
 8004628:	6878      	ldr	r0, [r7, #4]
 800462a:	f7ff fe79 	bl	8004320 <ucg_clip_l90fx>
 800462e:	4603      	mov	r3, r0
 8004630:	2b00      	cmp	r3, #0
 8004632:	d101      	bne.n	8004638 <ucg_clip_l90se+0x18>
 8004634:	2300      	movs	r3, #0
 8004636:	e019      	b.n	800466c <ucg_clip_l90se+0x4c>
 8004638:	2300      	movs	r3, #0
 800463a:	73fb      	strb	r3, [r7, #15]
 800463c:	e012      	b.n	8004664 <ucg_clip_l90se+0x44>
 800463e:	687b      	ldr	r3, [r7, #4]
 8004640:	f103 0146 	add.w	r1, r3, #70	; 0x46
 8004644:	7bfa      	ldrb	r2, [r7, #15]
 8004646:	4613      	mov	r3, r2
 8004648:	00db      	lsls	r3, r3, #3
 800464a:	1a9b      	subs	r3, r3, r2
 800464c:	005b      	lsls	r3, r3, #1
 800464e:	18ca      	adds	r2, r1, r3
 8004650:	687b      	ldr	r3, [r7, #4]
 8004652:	f9b3 3030 	ldrsh.w	r3, [r3, #48]	; 0x30
 8004656:	4619      	mov	r1, r3
 8004658:	4610      	mov	r0, r2
 800465a:	f7fe fa7e 	bl	8002b5a <ucg_ccs_seek>
 800465e:	7bfb      	ldrb	r3, [r7, #15]
 8004660:	3301      	adds	r3, #1
 8004662:	73fb      	strb	r3, [r7, #15]
 8004664:	7bfb      	ldrb	r3, [r7, #15]
 8004666:	2b02      	cmp	r3, #2
 8004668:	d9e9      	bls.n	800463e <ucg_clip_l90se+0x1e>
 800466a:	2301      	movs	r3, #1
 800466c:	4618      	mov	r0, r3
 800466e:	3710      	adds	r7, #16
 8004670:	46bd      	mov	sp, r7
 8004672:	bd80      	pop	{r7, pc}

08004674 <ucg_com_PowerDown>:
 8004674:	b590      	push	{r4, r7, lr}
 8004676:	b083      	sub	sp, #12
 8004678:	af00      	add	r7, sp, #0
 800467a:	6078      	str	r0, [r7, #4]
 800467c:	687b      	ldr	r3, [r7, #4]
 800467e:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8004682:	f003 0308 	and.w	r3, r3, #8
 8004686:	2b00      	cmp	r3, #0
 8004688:	d006      	beq.n	8004698 <ucg_com_PowerDown+0x24>
 800468a:	687b      	ldr	r3, [r7, #4]
 800468c:	69dc      	ldr	r4, [r3, #28]
 800468e:	2300      	movs	r3, #0
 8004690:	2200      	movs	r2, #0
 8004692:	210b      	movs	r1, #11
 8004694:	6878      	ldr	r0, [r7, #4]
 8004696:	47a0      	blx	r4
 8004698:	687b      	ldr	r3, [r7, #4]
 800469a:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 800469e:	f023 0308 	bic.w	r3, r3, #8
 80046a2:	b2da      	uxtb	r2, r3
 80046a4:	687b      	ldr	r3, [r7, #4]
 80046a6:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 80046aa:	bf00      	nop
 80046ac:	370c      	adds	r7, #12
 80046ae:	46bd      	mov	sp, r7
 80046b0:	bd90      	pop	{r4, r7, pc}

080046b2 <ucg_com_PowerUp>:
 80046b2:	b590      	push	{r4, r7, lr}
 80046b4:	b085      	sub	sp, #20
 80046b6:	af00      	add	r7, sp, #0
 80046b8:	6078      	str	r0, [r7, #4]
 80046ba:	460b      	mov	r3, r1
 80046bc:	807b      	strh	r3, [r7, #2]
 80046be:	4613      	mov	r3, r2
 80046c0:	803b      	strh	r3, [r7, #0]
 80046c2:	887b      	ldrh	r3, [r7, #2]
 80046c4:	813b      	strh	r3, [r7, #8]
 80046c6:	883b      	ldrh	r3, [r7, #0]
 80046c8:	817b      	strh	r3, [r7, #10]
 80046ca:	6878      	ldr	r0, [r7, #4]
 80046cc:	f7ff ffd2 	bl	8004674 <ucg_com_PowerDown>
 80046d0:	687b      	ldr	r3, [r7, #4]
 80046d2:	2200      	movs	r2, #0
 80046d4:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 80046d8:	687b      	ldr	r3, [r7, #4]
 80046da:	69dc      	ldr	r4, [r3, #28]
 80046dc:	f107 0308 	add.w	r3, r7, #8
 80046e0:	2200      	movs	r2, #0
 80046e2:	210a      	movs	r1, #10
 80046e4:	6878      	ldr	r0, [r7, #4]
 80046e6:	47a0      	blx	r4
 80046e8:	4603      	mov	r3, r0
 80046ea:	81fb      	strh	r3, [r7, #14]
 80046ec:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80046f0:	2b00      	cmp	r3, #0
 80046f2:	d008      	beq.n	8004706 <ucg_com_PowerUp+0x54>
 80046f4:	687b      	ldr	r3, [r7, #4]
 80046f6:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 80046fa:	f043 0308 	orr.w	r3, r3, #8
 80046fe:	b2da      	uxtb	r2, r3
 8004700:	687b      	ldr	r3, [r7, #4]
 8004702:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8004706:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800470a:	4618      	mov	r0, r3
 800470c:	3714      	adds	r7, #20
 800470e:	46bd      	mov	sp, r7
 8004710:	bd90      	pop	{r4, r7, pc}

08004712 <ucg_com_SetLineStatus>:
 8004712:	b590      	push	{r4, r7, lr}
 8004714:	b083      	sub	sp, #12
 8004716:	af00      	add	r7, sp, #0
 8004718:	6078      	str	r0, [r7, #4]
 800471a:	4608      	mov	r0, r1
 800471c:	4611      	mov	r1, r2
 800471e:	461a      	mov	r2, r3
 8004720:	4603      	mov	r3, r0
 8004722:	70fb      	strb	r3, [r7, #3]
 8004724:	460b      	mov	r3, r1
 8004726:	70bb      	strb	r3, [r7, #2]
 8004728:	4613      	mov	r3, r2
 800472a:	707b      	strb	r3, [r7, #1]
 800472c:	78fb      	ldrb	r3, [r7, #3]
 800472e:	2b00      	cmp	r3, #0
 8004730:	d131      	bne.n	8004796 <ucg_com_SetLineStatus+0x84>
 8004732:	687b      	ldr	r3, [r7, #4]
 8004734:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8004738:	78bb      	ldrb	r3, [r7, #2]
 800473a:	4013      	ands	r3, r2
 800473c:	b2db      	uxtb	r3, r3
 800473e:	2b00      	cmp	r3, #0
 8004740:	d008      	beq.n	8004754 <ucg_com_SetLineStatus+0x42>
 8004742:	687b      	ldr	r3, [r7, #4]
 8004744:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 8004748:	78bb      	ldrb	r3, [r7, #2]
 800474a:	4013      	ands	r3, r2
 800474c:	b2db      	uxtb	r3, r3
 800474e:	78ba      	ldrb	r2, [r7, #2]
 8004750:	429a      	cmp	r2, r3
 8004752:	d14b      	bne.n	80047ec <ucg_com_SetLineStatus+0xda>
 8004754:	687b      	ldr	r3, [r7, #4]
 8004756:	69dc      	ldr	r4, [r3, #28]
 8004758:	787b      	ldrb	r3, [r7, #1]
 800475a:	b219      	sxth	r1, r3
 800475c:	78fb      	ldrb	r3, [r7, #3]
 800475e:	b29a      	uxth	r2, r3
 8004760:	2300      	movs	r3, #0
 8004762:	6878      	ldr	r0, [r7, #4]
 8004764:	47a0      	blx	r4
 8004766:	687b      	ldr	r3, [r7, #4]
 8004768:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 800476c:	b25a      	sxtb	r2, r3
 800476e:	f997 3002 	ldrsb.w	r3, [r7, #2]
 8004772:	43db      	mvns	r3, r3
 8004774:	b25b      	sxtb	r3, r3
 8004776:	4013      	ands	r3, r2
 8004778:	b25b      	sxtb	r3, r3
 800477a:	b2da      	uxtb	r2, r3
 800477c:	687b      	ldr	r3, [r7, #4]
 800477e:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8004782:	687b      	ldr	r3, [r7, #4]
 8004784:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8004788:	78bb      	ldrb	r3, [r7, #2]
 800478a:	4313      	orrs	r3, r2
 800478c:	b2da      	uxtb	r2, r3
 800478e:	687b      	ldr	r3, [r7, #4]
 8004790:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8004794:	e02a      	b.n	80047ec <ucg_com_SetLineStatus+0xda>
 8004796:	687b      	ldr	r3, [r7, #4]
 8004798:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 800479c:	78bb      	ldrb	r3, [r7, #2]
 800479e:	4013      	ands	r3, r2
 80047a0:	b2db      	uxtb	r3, r3
 80047a2:	2b00      	cmp	r3, #0
 80047a4:	d007      	beq.n	80047b6 <ucg_com_SetLineStatus+0xa4>
 80047a6:	687b      	ldr	r3, [r7, #4]
 80047a8:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 80047ac:	78bb      	ldrb	r3, [r7, #2]
 80047ae:	4013      	ands	r3, r2
 80047b0:	b2db      	uxtb	r3, r3
 80047b2:	2b00      	cmp	r3, #0
 80047b4:	d11a      	bne.n	80047ec <ucg_com_SetLineStatus+0xda>
 80047b6:	687b      	ldr	r3, [r7, #4]
 80047b8:	69dc      	ldr	r4, [r3, #28]
 80047ba:	787b      	ldrb	r3, [r7, #1]
 80047bc:	b219      	sxth	r1, r3
 80047be:	78fb      	ldrb	r3, [r7, #3]
 80047c0:	b29a      	uxth	r2, r3
 80047c2:	2300      	movs	r3, #0
 80047c4:	6878      	ldr	r0, [r7, #4]
 80047c6:	47a0      	blx	r4
 80047c8:	687b      	ldr	r3, [r7, #4]
 80047ca:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 80047ce:	78bb      	ldrb	r3, [r7, #2]
 80047d0:	4313      	orrs	r3, r2
 80047d2:	b2da      	uxtb	r2, r3
 80047d4:	687b      	ldr	r3, [r7, #4]
 80047d6:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 80047da:	687b      	ldr	r3, [r7, #4]
 80047dc:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 80047e0:	78bb      	ldrb	r3, [r7, #2]
 80047e2:	4313      	orrs	r3, r2
 80047e4:	b2da      	uxtb	r2, r3
 80047e6:	687b      	ldr	r3, [r7, #4]
 80047e8:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 80047ec:	bf00      	nop
 80047ee:	370c      	adds	r7, #12
 80047f0:	46bd      	mov	sp, r7
 80047f2:	bd90      	pop	{r4, r7, pc}

080047f4 <ucg_com_SetResetLineStatus>:
 80047f4:	b580      	push	{r7, lr}
 80047f6:	b082      	sub	sp, #8
 80047f8:	af00      	add	r7, sp, #0
 80047fa:	6078      	str	r0, [r7, #4]
 80047fc:	460b      	mov	r3, r1
 80047fe:	70fb      	strb	r3, [r7, #3]
 8004800:	78f9      	ldrb	r1, [r7, #3]
 8004802:	230d      	movs	r3, #13
 8004804:	2204      	movs	r2, #4
 8004806:	6878      	ldr	r0, [r7, #4]
 8004808:	f7ff ff83 	bl	8004712 <ucg_com_SetLineStatus>
 800480c:	bf00      	nop
 800480e:	3708      	adds	r7, #8
 8004810:	46bd      	mov	sp, r7
 8004812:	bd80      	pop	{r7, pc}

08004814 <ucg_com_SetCSLineStatus>:
 8004814:	b580      	push	{r7, lr}
 8004816:	b082      	sub	sp, #8
 8004818:	af00      	add	r7, sp, #0
 800481a:	6078      	str	r0, [r7, #4]
 800481c:	460b      	mov	r3, r1
 800481e:	70fb      	strb	r3, [r7, #3]
 8004820:	78f9      	ldrb	r1, [r7, #3]
 8004822:	230e      	movs	r3, #14
 8004824:	2202      	movs	r2, #2
 8004826:	6878      	ldr	r0, [r7, #4]
 8004828:	f7ff ff73 	bl	8004712 <ucg_com_SetLineStatus>
 800482c:	bf00      	nop
 800482e:	3708      	adds	r7, #8
 8004830:	46bd      	mov	sp, r7
 8004832:	bd80      	pop	{r7, pc}

08004834 <ucg_com_SetCDLineStatus>:
 8004834:	b580      	push	{r7, lr}
 8004836:	b082      	sub	sp, #8
 8004838:	af00      	add	r7, sp, #0
 800483a:	6078      	str	r0, [r7, #4]
 800483c:	460b      	mov	r3, r1
 800483e:	70fb      	strb	r3, [r7, #3]
 8004840:	78f9      	ldrb	r1, [r7, #3]
 8004842:	230f      	movs	r3, #15
 8004844:	2201      	movs	r2, #1
 8004846:	6878      	ldr	r0, [r7, #4]
 8004848:	f7ff ff63 	bl	8004712 <ucg_com_SetLineStatus>
 800484c:	bf00      	nop
 800484e:	3708      	adds	r7, #8
 8004850:	46bd      	mov	sp, r7
 8004852:	bd80      	pop	{r7, pc}

08004854 <ucg_com_DelayMicroseconds>:
 8004854:	b590      	push	{r4, r7, lr}
 8004856:	b083      	sub	sp, #12
 8004858:	af00      	add	r7, sp, #0
 800485a:	6078      	str	r0, [r7, #4]
 800485c:	460b      	mov	r3, r1
 800485e:	807b      	strh	r3, [r7, #2]
 8004860:	687b      	ldr	r3, [r7, #4]
 8004862:	69dc      	ldr	r4, [r3, #28]
 8004864:	887a      	ldrh	r2, [r7, #2]
 8004866:	2300      	movs	r3, #0
 8004868:	210c      	movs	r1, #12
 800486a:	6878      	ldr	r0, [r7, #4]
 800486c:	47a0      	blx	r4
 800486e:	bf00      	nop
 8004870:	370c      	adds	r7, #12
 8004872:	46bd      	mov	sp, r7
 8004874:	bd90      	pop	{r4, r7, pc}

08004876 <ucg_com_DelayMilliseconds>:
 8004876:	b580      	push	{r7, lr}
 8004878:	b082      	sub	sp, #8
 800487a:	af00      	add	r7, sp, #0
 800487c:	6078      	str	r0, [r7, #4]
 800487e:	460b      	mov	r3, r1
 8004880:	807b      	strh	r3, [r7, #2]
 8004882:	e007      	b.n	8004894 <ucg_com_DelayMilliseconds+0x1e>
 8004884:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8004888:	6878      	ldr	r0, [r7, #4]
 800488a:	f7ff ffe3 	bl	8004854 <ucg_com_DelayMicroseconds>
 800488e:	887b      	ldrh	r3, [r7, #2]
 8004890:	3b01      	subs	r3, #1
 8004892:	807b      	strh	r3, [r7, #2]
 8004894:	887b      	ldrh	r3, [r7, #2]
 8004896:	2b00      	cmp	r3, #0
 8004898:	d1f4      	bne.n	8004884 <ucg_com_DelayMilliseconds+0xe>
 800489a:	bf00      	nop
 800489c:	3708      	adds	r7, #8
 800489e:	46bd      	mov	sp, r7
 80048a0:	bd80      	pop	{r7, pc}

080048a2 <ucg_com_SendByte>:
 80048a2:	b590      	push	{r4, r7, lr}
 80048a4:	b083      	sub	sp, #12
 80048a6:	af00      	add	r7, sp, #0
 80048a8:	6078      	str	r0, [r7, #4]
 80048aa:	460b      	mov	r3, r1
 80048ac:	70fb      	strb	r3, [r7, #3]
 80048ae:	687b      	ldr	r3, [r7, #4]
 80048b0:	69dc      	ldr	r4, [r3, #28]
 80048b2:	78fb      	ldrb	r3, [r7, #3]
 80048b4:	b29a      	uxth	r2, r3
 80048b6:	2300      	movs	r3, #0
 80048b8:	2110      	movs	r1, #16
 80048ba:	6878      	ldr	r0, [r7, #4]
 80048bc:	47a0      	blx	r4
 80048be:	bf00      	nop
 80048c0:	370c      	adds	r7, #12
 80048c2:	46bd      	mov	sp, r7
 80048c4:	bd90      	pop	{r4, r7, pc}

080048c6 <ucg_com_SendStringP>:
 80048c6:	b590      	push	{r4, r7, lr}
 80048c8:	b087      	sub	sp, #28
 80048ca:	af00      	add	r7, sp, #0
 80048cc:	60f8      	str	r0, [r7, #12]
 80048ce:	460b      	mov	r3, r1
 80048d0:	607a      	str	r2, [r7, #4]
 80048d2:	817b      	strh	r3, [r7, #10]
 80048d4:	e010      	b.n	80048f8 <ucg_com_SendStringP+0x32>
 80048d6:	687b      	ldr	r3, [r7, #4]
 80048d8:	781b      	ldrb	r3, [r3, #0]
 80048da:	75fb      	strb	r3, [r7, #23]
 80048dc:	68fb      	ldr	r3, [r7, #12]
 80048de:	69dc      	ldr	r4, [r3, #28]
 80048e0:	7dfb      	ldrb	r3, [r7, #23]
 80048e2:	b29a      	uxth	r2, r3
 80048e4:	2300      	movs	r3, #0
 80048e6:	2110      	movs	r1, #16
 80048e8:	68f8      	ldr	r0, [r7, #12]
 80048ea:	47a0      	blx	r4
 80048ec:	687b      	ldr	r3, [r7, #4]
 80048ee:	3301      	adds	r3, #1
 80048f0:	607b      	str	r3, [r7, #4]
 80048f2:	897b      	ldrh	r3, [r7, #10]
 80048f4:	3b01      	subs	r3, #1
 80048f6:	817b      	strh	r3, [r7, #10]
 80048f8:	897b      	ldrh	r3, [r7, #10]
 80048fa:	2b00      	cmp	r3, #0
 80048fc:	d1eb      	bne.n	80048d6 <ucg_com_SendStringP+0x10>
 80048fe:	bf00      	nop
 8004900:	371c      	adds	r7, #28
 8004902:	46bd      	mov	sp, r7
 8004904:	bd90      	pop	{r4, r7, pc}

08004906 <ucg_com_SendCmdArg>:
 8004906:	b580      	push	{r7, lr}
 8004908:	b084      	sub	sp, #16
 800490a:	af00      	add	r7, sp, #0
 800490c:	60f8      	str	r0, [r7, #12]
 800490e:	60b9      	str	r1, [r7, #8]
 8004910:	4611      	mov	r1, r2
 8004912:	461a      	mov	r2, r3
 8004914:	460b      	mov	r3, r1
 8004916:	71fb      	strb	r3, [r7, #7]
 8004918:	4613      	mov	r3, r2
 800491a:	71bb      	strb	r3, [r7, #6]
 800491c:	68fb      	ldr	r3, [r7, #12]
 800491e:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8004922:	085b      	lsrs	r3, r3, #1
 8004924:	b2db      	uxtb	r3, r3
 8004926:	f003 0301 	and.w	r3, r3, #1
 800492a:	b2db      	uxtb	r3, r3
 800492c:	4619      	mov	r1, r3
 800492e:	68f8      	ldr	r0, [r7, #12]
 8004930:	f7ff ff80 	bl	8004834 <ucg_com_SetCDLineStatus>
 8004934:	79fb      	ldrb	r3, [r7, #7]
 8004936:	b29b      	uxth	r3, r3
 8004938:	68ba      	ldr	r2, [r7, #8]
 800493a:	4619      	mov	r1, r3
 800493c:	68f8      	ldr	r0, [r7, #12]
 800493e:	f7ff ffc2 	bl	80048c6 <ucg_com_SendStringP>
 8004942:	79bb      	ldrb	r3, [r7, #6]
 8004944:	2b00      	cmp	r3, #0
 8004946:	d014      	beq.n	8004972 <ucg_com_SendCmdArg+0x6c>
 8004948:	79fb      	ldrb	r3, [r7, #7]
 800494a:	68ba      	ldr	r2, [r7, #8]
 800494c:	4413      	add	r3, r2
 800494e:	60bb      	str	r3, [r7, #8]
 8004950:	68fb      	ldr	r3, [r7, #12]
 8004952:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8004956:	f003 0301 	and.w	r3, r3, #1
 800495a:	b2db      	uxtb	r3, r3
 800495c:	4619      	mov	r1, r3
 800495e:	68f8      	ldr	r0, [r7, #12]
 8004960:	f7ff ff68 	bl	8004834 <ucg_com_SetCDLineStatus>
 8004964:	79bb      	ldrb	r3, [r7, #6]
 8004966:	b29b      	uxth	r3, r3
 8004968:	68ba      	ldr	r2, [r7, #8]
 800496a:	4619      	mov	r1, r3
 800496c:	68f8      	ldr	r0, [r7, #12]
 800496e:	f7ff ffaa 	bl	80048c6 <ucg_com_SendStringP>
 8004972:	bf00      	nop
 8004974:	3710      	adds	r7, #16
 8004976:	46bd      	mov	sp, r7
 8004978:	bd80      	pop	{r7, pc}
	...

0800497c <ucg_com_SendCmdSeq>:
 800497c:	b580      	push	{r7, lr}
 800497e:	b084      	sub	sp, #16
 8004980:	af00      	add	r7, sp, #0
 8004982:	6078      	str	r0, [r7, #4]
 8004984:	6039      	str	r1, [r7, #0]
 8004986:	683b      	ldr	r3, [r7, #0]
 8004988:	781b      	ldrb	r3, [r3, #0]
 800498a:	73fb      	strb	r3, [r7, #15]
 800498c:	7bfb      	ldrb	r3, [r7, #15]
 800498e:	091b      	lsrs	r3, r3, #4
 8004990:	73bb      	strb	r3, [r7, #14]
 8004992:	7bfb      	ldrb	r3, [r7, #15]
 8004994:	f003 030f 	and.w	r3, r3, #15
 8004998:	737b      	strb	r3, [r7, #13]
 800499a:	7bbb      	ldrb	r3, [r7, #14]
 800499c:	2b0f      	cmp	r3, #15
 800499e:	f200 8124 	bhi.w	8004bea <ucg_com_SendCmdSeq+0x26e>
 80049a2:	a201      	add	r2, pc, #4	; (adr r2, 80049a8 <ucg_com_SendCmdSeq+0x2c>)
 80049a4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80049a8:	08004beb 	.word	0x08004beb
 80049ac:	080049e9 	.word	0x080049e9
 80049b0:	080049e9 	.word	0x080049e9
 80049b4:	080049e9 	.word	0x080049e9
 80049b8:	08004beb 	.word	0x08004beb
 80049bc:	08004beb 	.word	0x08004beb
 80049c0:	08004a09 	.word	0x08004a09
 80049c4:	08004a3b 	.word	0x08004a3b
 80049c8:	08004a7f 	.word	0x08004a7f
 80049cc:	08004aab 	.word	0x08004aab
 80049d0:	08004ad7 	.word	0x08004ad7
 80049d4:	08004b37 	.word	0x08004b37
 80049d8:	08004beb 	.word	0x08004beb
 80049dc:	08004beb 	.word	0x08004beb
 80049e0:	08004beb 	.word	0x08004beb
 80049e4:	08004b97 	.word	0x08004b97
 80049e8:	683b      	ldr	r3, [r7, #0]
 80049ea:	1c59      	adds	r1, r3, #1
 80049ec:	7b7b      	ldrb	r3, [r7, #13]
 80049ee:	7bba      	ldrb	r2, [r7, #14]
 80049f0:	6878      	ldr	r0, [r7, #4]
 80049f2:	f7ff ff88 	bl	8004906 <ucg_com_SendCmdArg>
 80049f6:	7bbb      	ldrb	r3, [r7, #14]
 80049f8:	1c5a      	adds	r2, r3, #1
 80049fa:	7b7b      	ldrb	r3, [r7, #13]
 80049fc:	4413      	add	r3, r2
 80049fe:	461a      	mov	r2, r3
 8004a00:	683b      	ldr	r3, [r7, #0]
 8004a02:	4413      	add	r3, r2
 8004a04:	603b      	str	r3, [r7, #0]
 8004a06:	e0ef      	b.n	8004be8 <ucg_com_SendCmdSeq+0x26c>
 8004a08:	687b      	ldr	r3, [r7, #4]
 8004a0a:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8004a0e:	f003 0301 	and.w	r3, r3, #1
 8004a12:	b2db      	uxtb	r3, r3
 8004a14:	4619      	mov	r1, r3
 8004a16:	6878      	ldr	r0, [r7, #4]
 8004a18:	f7ff ff0c 	bl	8004834 <ucg_com_SetCDLineStatus>
 8004a1c:	7b7b      	ldrb	r3, [r7, #13]
 8004a1e:	b299      	uxth	r1, r3
 8004a20:	683b      	ldr	r3, [r7, #0]
 8004a22:	3301      	adds	r3, #1
 8004a24:	461a      	mov	r2, r3
 8004a26:	6878      	ldr	r0, [r7, #4]
 8004a28:	f7ff ff4d 	bl	80048c6 <ucg_com_SendStringP>
 8004a2c:	7b7b      	ldrb	r3, [r7, #13]
 8004a2e:	3301      	adds	r3, #1
 8004a30:	461a      	mov	r2, r3
 8004a32:	683b      	ldr	r3, [r7, #0]
 8004a34:	4413      	add	r3, r2
 8004a36:	603b      	str	r3, [r7, #0]
 8004a38:	e0d6      	b.n	8004be8 <ucg_com_SendCmdSeq+0x26c>
 8004a3a:	687b      	ldr	r3, [r7, #4]
 8004a3c:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8004a40:	085b      	lsrs	r3, r3, #1
 8004a42:	b2db      	uxtb	r3, r3
 8004a44:	f003 0301 	and.w	r3, r3, #1
 8004a48:	2b00      	cmp	r3, #0
 8004a4a:	bf0c      	ite	eq
 8004a4c:	2301      	moveq	r3, #1
 8004a4e:	2300      	movne	r3, #0
 8004a50:	b2db      	uxtb	r3, r3
 8004a52:	4619      	mov	r1, r3
 8004a54:	6878      	ldr	r0, [r7, #4]
 8004a56:	f7ff feed 	bl	8004834 <ucg_com_SetCDLineStatus>
 8004a5a:	7b7b      	ldrb	r3, [r7, #13]
 8004a5c:	2b00      	cmp	r3, #0
 8004a5e:	d007      	beq.n	8004a70 <ucg_com_SendCmdSeq+0xf4>
 8004a60:	7b7b      	ldrb	r3, [r7, #13]
 8004a62:	b299      	uxth	r1, r3
 8004a64:	683b      	ldr	r3, [r7, #0]
 8004a66:	3301      	adds	r3, #1
 8004a68:	461a      	mov	r2, r3
 8004a6a:	6878      	ldr	r0, [r7, #4]
 8004a6c:	f7ff ff2b 	bl	80048c6 <ucg_com_SendStringP>
 8004a70:	7b7b      	ldrb	r3, [r7, #13]
 8004a72:	3301      	adds	r3, #1
 8004a74:	461a      	mov	r2, r3
 8004a76:	683b      	ldr	r3, [r7, #0]
 8004a78:	4413      	add	r3, r2
 8004a7a:	603b      	str	r3, [r7, #0]
 8004a7c:	e0b4      	b.n	8004be8 <ucg_com_SendCmdSeq+0x26c>
 8004a7e:	683b      	ldr	r3, [r7, #0]
 8004a80:	3301      	adds	r3, #1
 8004a82:	603b      	str	r3, [r7, #0]
 8004a84:	683b      	ldr	r3, [r7, #0]
 8004a86:	781b      	ldrb	r3, [r3, #0]
 8004a88:	73fb      	strb	r3, [r7, #15]
 8004a8a:	7b7b      	ldrb	r3, [r7, #13]
 8004a8c:	b29b      	uxth	r3, r3
 8004a8e:	021b      	lsls	r3, r3, #8
 8004a90:	b29a      	uxth	r2, r3
 8004a92:	7bfb      	ldrb	r3, [r7, #15]
 8004a94:	b29b      	uxth	r3, r3
 8004a96:	4413      	add	r3, r2
 8004a98:	b29b      	uxth	r3, r3
 8004a9a:	4619      	mov	r1, r3
 8004a9c:	6878      	ldr	r0, [r7, #4]
 8004a9e:	f7ff feea 	bl	8004876 <ucg_com_DelayMilliseconds>
 8004aa2:	683b      	ldr	r3, [r7, #0]
 8004aa4:	3301      	adds	r3, #1
 8004aa6:	603b      	str	r3, [r7, #0]
 8004aa8:	e09e      	b.n	8004be8 <ucg_com_SendCmdSeq+0x26c>
 8004aaa:	683b      	ldr	r3, [r7, #0]
 8004aac:	3301      	adds	r3, #1
 8004aae:	603b      	str	r3, [r7, #0]
 8004ab0:	683b      	ldr	r3, [r7, #0]
 8004ab2:	781b      	ldrb	r3, [r3, #0]
 8004ab4:	73fb      	strb	r3, [r7, #15]
 8004ab6:	7b7b      	ldrb	r3, [r7, #13]
 8004ab8:	b29b      	uxth	r3, r3
 8004aba:	021b      	lsls	r3, r3, #8
 8004abc:	b29a      	uxth	r2, r3
 8004abe:	7bfb      	ldrb	r3, [r7, #15]
 8004ac0:	b29b      	uxth	r3, r3
 8004ac2:	4413      	add	r3, r2
 8004ac4:	b29b      	uxth	r3, r3
 8004ac6:	4619      	mov	r1, r3
 8004ac8:	6878      	ldr	r0, [r7, #4]
 8004aca:	f7ff fec3 	bl	8004854 <ucg_com_DelayMicroseconds>
 8004ace:	683b      	ldr	r3, [r7, #0]
 8004ad0:	3301      	adds	r3, #1
 8004ad2:	603b      	str	r3, [r7, #0]
 8004ad4:	e088      	b.n	8004be8 <ucg_com_SendCmdSeq+0x26c>
 8004ad6:	683b      	ldr	r3, [r7, #0]
 8004ad8:	3301      	adds	r3, #1
 8004ada:	603b      	str	r3, [r7, #0]
 8004adc:	683b      	ldr	r3, [r7, #0]
 8004ade:	781b      	ldrb	r3, [r3, #0]
 8004ae0:	73fb      	strb	r3, [r7, #15]
 8004ae2:	683b      	ldr	r3, [r7, #0]
 8004ae4:	3301      	adds	r3, #1
 8004ae6:	603b      	str	r3, [r7, #0]
 8004ae8:	683b      	ldr	r3, [r7, #0]
 8004aea:	781b      	ldrb	r3, [r3, #0]
 8004aec:	733b      	strb	r3, [r7, #12]
 8004aee:	683b      	ldr	r3, [r7, #0]
 8004af0:	3301      	adds	r3, #1
 8004af2:	603b      	str	r3, [r7, #0]
 8004af4:	687b      	ldr	r3, [r7, #4]
 8004af6:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8004afa:	f003 0301 	and.w	r3, r3, #1
 8004afe:	b2db      	uxtb	r3, r3
 8004b00:	4619      	mov	r1, r3
 8004b02:	6878      	ldr	r0, [r7, #4]
 8004b04:	f7ff fe96 	bl	8004834 <ucg_com_SetCDLineStatus>
 8004b08:	687b      	ldr	r3, [r7, #4]
 8004b0a:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8004b0e:	461a      	mov	r2, r3
 8004b10:	687b      	ldr	r3, [r7, #4]
 8004b12:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
 8004b16:	441a      	add	r2, r3
 8004b18:	7b7b      	ldrb	r3, [r7, #13]
 8004b1a:	fa42 f303 	asr.w	r3, r2, r3
 8004b1e:	b2da      	uxtb	r2, r3
 8004b20:	7bfb      	ldrb	r3, [r7, #15]
 8004b22:	4013      	ands	r3, r2
 8004b24:	b2da      	uxtb	r2, r3
 8004b26:	7b3b      	ldrb	r3, [r7, #12]
 8004b28:	4313      	orrs	r3, r2
 8004b2a:	b2db      	uxtb	r3, r3
 8004b2c:	4619      	mov	r1, r3
 8004b2e:	6878      	ldr	r0, [r7, #4]
 8004b30:	f7ff feb7 	bl	80048a2 <ucg_com_SendByte>
 8004b34:	e058      	b.n	8004be8 <ucg_com_SendCmdSeq+0x26c>
 8004b36:	683b      	ldr	r3, [r7, #0]
 8004b38:	3301      	adds	r3, #1
 8004b3a:	603b      	str	r3, [r7, #0]
 8004b3c:	683b      	ldr	r3, [r7, #0]
 8004b3e:	781b      	ldrb	r3, [r3, #0]
 8004b40:	73fb      	strb	r3, [r7, #15]
 8004b42:	683b      	ldr	r3, [r7, #0]
 8004b44:	3301      	adds	r3, #1
 8004b46:	603b      	str	r3, [r7, #0]
 8004b48:	683b      	ldr	r3, [r7, #0]
 8004b4a:	781b      	ldrb	r3, [r3, #0]
 8004b4c:	733b      	strb	r3, [r7, #12]
 8004b4e:	683b      	ldr	r3, [r7, #0]
 8004b50:	3301      	adds	r3, #1
 8004b52:	603b      	str	r3, [r7, #0]
 8004b54:	687b      	ldr	r3, [r7, #4]
 8004b56:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8004b5a:	f003 0301 	and.w	r3, r3, #1
 8004b5e:	b2db      	uxtb	r3, r3
 8004b60:	4619      	mov	r1, r3
 8004b62:	6878      	ldr	r0, [r7, #4]
 8004b64:	f7ff fe66 	bl	8004834 <ucg_com_SetCDLineStatus>
 8004b68:	687b      	ldr	r3, [r7, #4]
 8004b6a:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8004b6e:	461a      	mov	r2, r3
 8004b70:	687b      	ldr	r3, [r7, #4]
 8004b72:	f9b3 3022 	ldrsh.w	r3, [r3, #34]	; 0x22
 8004b76:	441a      	add	r2, r3
 8004b78:	7b7b      	ldrb	r3, [r7, #13]
 8004b7a:	fa42 f303 	asr.w	r3, r2, r3
 8004b7e:	b2da      	uxtb	r2, r3
 8004b80:	7bfb      	ldrb	r3, [r7, #15]
 8004b82:	4013      	ands	r3, r2
 8004b84:	b2da      	uxtb	r2, r3
 8004b86:	7b3b      	ldrb	r3, [r7, #12]
 8004b88:	4313      	orrs	r3, r2
 8004b8a:	b2db      	uxtb	r3, r3
 8004b8c:	4619      	mov	r1, r3
 8004b8e:	6878      	ldr	r0, [r7, #4]
 8004b90:	f7ff fe87 	bl	80048a2 <ucg_com_SendByte>
 8004b94:	e028      	b.n	8004be8 <ucg_com_SendCmdSeq+0x26c>
 8004b96:	7b7b      	ldrb	r3, [r7, #13]
 8004b98:	089b      	lsrs	r3, r3, #2
 8004b9a:	73bb      	strb	r3, [r7, #14]
 8004b9c:	7b7b      	ldrb	r3, [r7, #13]
 8004b9e:	f003 0303 	and.w	r3, r3, #3
 8004ba2:	737b      	strb	r3, [r7, #13]
 8004ba4:	7bbb      	ldrb	r3, [r7, #14]
 8004ba6:	2b01      	cmp	r3, #1
 8004ba8:	d00c      	beq.n	8004bc4 <ucg_com_SendCmdSeq+0x248>
 8004baa:	2b03      	cmp	r3, #3
 8004bac:	d013      	beq.n	8004bd6 <ucg_com_SendCmdSeq+0x25a>
 8004bae:	2b00      	cmp	r3, #0
 8004bb0:	d116      	bne.n	8004be0 <ucg_com_SendCmdSeq+0x264>
 8004bb2:	7b7b      	ldrb	r3, [r7, #13]
 8004bb4:	f003 0301 	and.w	r3, r3, #1
 8004bb8:	b2db      	uxtb	r3, r3
 8004bba:	4619      	mov	r1, r3
 8004bbc:	6878      	ldr	r0, [r7, #4]
 8004bbe:	f7ff fe19 	bl	80047f4 <ucg_com_SetResetLineStatus>
 8004bc2:	e00d      	b.n	8004be0 <ucg_com_SendCmdSeq+0x264>
 8004bc4:	7b7b      	ldrb	r3, [r7, #13]
 8004bc6:	f003 0301 	and.w	r3, r3, #1
 8004bca:	b2db      	uxtb	r3, r3
 8004bcc:	4619      	mov	r1, r3
 8004bce:	6878      	ldr	r0, [r7, #4]
 8004bd0:	f7ff fe20 	bl	8004814 <ucg_com_SetCSLineStatus>
 8004bd4:	e004      	b.n	8004be0 <ucg_com_SendCmdSeq+0x264>
 8004bd6:	687b      	ldr	r3, [r7, #4]
 8004bd8:	7b7a      	ldrb	r2, [r7, #13]
 8004bda:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 8004bde:	bf00      	nop
 8004be0:	683b      	ldr	r3, [r7, #0]
 8004be2:	3301      	adds	r3, #1
 8004be4:	603b      	str	r3, [r7, #0]
 8004be6:	bf00      	nop
 8004be8:	e6cd      	b.n	8004986 <ucg_com_SendCmdSeq+0xa>
 8004bea:	bf00      	nop
 8004bec:	3710      	adds	r7, #16
 8004bee:	46bd      	mov	sp, r7
 8004bf0:	bd80      	pop	{r7, pc}
 8004bf2:	bf00      	nop

08004bf4 <malloc>:
 8004bf4:	4b02      	ldr	r3, [pc, #8]	; (8004c00 <malloc+0xc>)
 8004bf6:	4601      	mov	r1, r0
 8004bf8:	6818      	ldr	r0, [r3, #0]
 8004bfa:	f000 b823 	b.w	8004c44 <_malloc_r>
 8004bfe:	bf00      	nop
 8004c00:	200000a8 	.word	0x200000a8

08004c04 <sbrk_aligned>:
 8004c04:	b570      	push	{r4, r5, r6, lr}
 8004c06:	4e0e      	ldr	r6, [pc, #56]	; (8004c40 <sbrk_aligned+0x3c>)
 8004c08:	460c      	mov	r4, r1
 8004c0a:	6831      	ldr	r1, [r6, #0]
 8004c0c:	4605      	mov	r5, r0
 8004c0e:	b911      	cbnz	r1, 8004c16 <sbrk_aligned+0x12>
 8004c10:	f000 f8c4 	bl	8004d9c <_sbrk_r>
 8004c14:	6030      	str	r0, [r6, #0]
 8004c16:	4621      	mov	r1, r4
 8004c18:	4628      	mov	r0, r5
 8004c1a:	f000 f8bf 	bl	8004d9c <_sbrk_r>
 8004c1e:	1c43      	adds	r3, r0, #1
 8004c20:	d00a      	beq.n	8004c38 <sbrk_aligned+0x34>
 8004c22:	1cc4      	adds	r4, r0, #3
 8004c24:	f024 0403 	bic.w	r4, r4, #3
 8004c28:	42a0      	cmp	r0, r4
 8004c2a:	d007      	beq.n	8004c3c <sbrk_aligned+0x38>
 8004c2c:	1a21      	subs	r1, r4, r0
 8004c2e:	4628      	mov	r0, r5
 8004c30:	f000 f8b4 	bl	8004d9c <_sbrk_r>
 8004c34:	3001      	adds	r0, #1
 8004c36:	d101      	bne.n	8004c3c <sbrk_aligned+0x38>
 8004c38:	f04f 34ff 	mov.w	r4, #4294967295
 8004c3c:	4620      	mov	r0, r4
 8004c3e:	bd70      	pop	{r4, r5, r6, pc}
 8004c40:	2000159c 	.word	0x2000159c

08004c44 <_malloc_r>:
 8004c44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004c48:	1ccd      	adds	r5, r1, #3
 8004c4a:	f025 0503 	bic.w	r5, r5, #3
 8004c4e:	3508      	adds	r5, #8
 8004c50:	2d0c      	cmp	r5, #12
 8004c52:	bf38      	it	cc
 8004c54:	250c      	movcc	r5, #12
 8004c56:	2d00      	cmp	r5, #0
 8004c58:	4607      	mov	r7, r0
 8004c5a:	db01      	blt.n	8004c60 <_malloc_r+0x1c>
 8004c5c:	42a9      	cmp	r1, r5
 8004c5e:	d905      	bls.n	8004c6c <_malloc_r+0x28>
 8004c60:	230c      	movs	r3, #12
 8004c62:	603b      	str	r3, [r7, #0]
 8004c64:	2600      	movs	r6, #0
 8004c66:	4630      	mov	r0, r6
 8004c68:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004c6c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8004d40 <_malloc_r+0xfc>
 8004c70:	f000 f868 	bl	8004d44 <__malloc_lock>
 8004c74:	f8d8 3000 	ldr.w	r3, [r8]
 8004c78:	461c      	mov	r4, r3
 8004c7a:	bb5c      	cbnz	r4, 8004cd4 <_malloc_r+0x90>
 8004c7c:	4629      	mov	r1, r5
 8004c7e:	4638      	mov	r0, r7
 8004c80:	f7ff ffc0 	bl	8004c04 <sbrk_aligned>
 8004c84:	1c43      	adds	r3, r0, #1
 8004c86:	4604      	mov	r4, r0
 8004c88:	d155      	bne.n	8004d36 <_malloc_r+0xf2>
 8004c8a:	f8d8 4000 	ldr.w	r4, [r8]
 8004c8e:	4626      	mov	r6, r4
 8004c90:	2e00      	cmp	r6, #0
 8004c92:	d145      	bne.n	8004d20 <_malloc_r+0xdc>
 8004c94:	2c00      	cmp	r4, #0
 8004c96:	d048      	beq.n	8004d2a <_malloc_r+0xe6>
 8004c98:	6823      	ldr	r3, [r4, #0]
 8004c9a:	4631      	mov	r1, r6
 8004c9c:	4638      	mov	r0, r7
 8004c9e:	eb04 0903 	add.w	r9, r4, r3
 8004ca2:	f000 f87b 	bl	8004d9c <_sbrk_r>
 8004ca6:	4581      	cmp	r9, r0
 8004ca8:	d13f      	bne.n	8004d2a <_malloc_r+0xe6>
 8004caa:	6821      	ldr	r1, [r4, #0]
 8004cac:	1a6d      	subs	r5, r5, r1
 8004cae:	4629      	mov	r1, r5
 8004cb0:	4638      	mov	r0, r7
 8004cb2:	f7ff ffa7 	bl	8004c04 <sbrk_aligned>
 8004cb6:	3001      	adds	r0, #1
 8004cb8:	d037      	beq.n	8004d2a <_malloc_r+0xe6>
 8004cba:	6823      	ldr	r3, [r4, #0]
 8004cbc:	442b      	add	r3, r5
 8004cbe:	6023      	str	r3, [r4, #0]
 8004cc0:	f8d8 3000 	ldr.w	r3, [r8]
 8004cc4:	2b00      	cmp	r3, #0
 8004cc6:	d038      	beq.n	8004d3a <_malloc_r+0xf6>
 8004cc8:	685a      	ldr	r2, [r3, #4]
 8004cca:	42a2      	cmp	r2, r4
 8004ccc:	d12b      	bne.n	8004d26 <_malloc_r+0xe2>
 8004cce:	2200      	movs	r2, #0
 8004cd0:	605a      	str	r2, [r3, #4]
 8004cd2:	e00f      	b.n	8004cf4 <_malloc_r+0xb0>
 8004cd4:	6822      	ldr	r2, [r4, #0]
 8004cd6:	1b52      	subs	r2, r2, r5
 8004cd8:	d41f      	bmi.n	8004d1a <_malloc_r+0xd6>
 8004cda:	2a0b      	cmp	r2, #11
 8004cdc:	d917      	bls.n	8004d0e <_malloc_r+0xca>
 8004cde:	1961      	adds	r1, r4, r5
 8004ce0:	42a3      	cmp	r3, r4
 8004ce2:	6025      	str	r5, [r4, #0]
 8004ce4:	bf18      	it	ne
 8004ce6:	6059      	strne	r1, [r3, #4]
 8004ce8:	6863      	ldr	r3, [r4, #4]
 8004cea:	bf08      	it	eq
 8004cec:	f8c8 1000 	streq.w	r1, [r8]
 8004cf0:	5162      	str	r2, [r4, r5]
 8004cf2:	604b      	str	r3, [r1, #4]
 8004cf4:	4638      	mov	r0, r7
 8004cf6:	f104 060b 	add.w	r6, r4, #11
 8004cfa:	f000 f829 	bl	8004d50 <__malloc_unlock>
 8004cfe:	f026 0607 	bic.w	r6, r6, #7
 8004d02:	1d23      	adds	r3, r4, #4
 8004d04:	1af2      	subs	r2, r6, r3
 8004d06:	d0ae      	beq.n	8004c66 <_malloc_r+0x22>
 8004d08:	1b9b      	subs	r3, r3, r6
 8004d0a:	50a3      	str	r3, [r4, r2]
 8004d0c:	e7ab      	b.n	8004c66 <_malloc_r+0x22>
 8004d0e:	42a3      	cmp	r3, r4
 8004d10:	6862      	ldr	r2, [r4, #4]
 8004d12:	d1dd      	bne.n	8004cd0 <_malloc_r+0x8c>
 8004d14:	f8c8 2000 	str.w	r2, [r8]
 8004d18:	e7ec      	b.n	8004cf4 <_malloc_r+0xb0>
 8004d1a:	4623      	mov	r3, r4
 8004d1c:	6864      	ldr	r4, [r4, #4]
 8004d1e:	e7ac      	b.n	8004c7a <_malloc_r+0x36>
 8004d20:	4634      	mov	r4, r6
 8004d22:	6876      	ldr	r6, [r6, #4]
 8004d24:	e7b4      	b.n	8004c90 <_malloc_r+0x4c>
 8004d26:	4613      	mov	r3, r2
 8004d28:	e7cc      	b.n	8004cc4 <_malloc_r+0x80>
 8004d2a:	230c      	movs	r3, #12
 8004d2c:	603b      	str	r3, [r7, #0]
 8004d2e:	4638      	mov	r0, r7
 8004d30:	f000 f80e 	bl	8004d50 <__malloc_unlock>
 8004d34:	e797      	b.n	8004c66 <_malloc_r+0x22>
 8004d36:	6025      	str	r5, [r4, #0]
 8004d38:	e7dc      	b.n	8004cf4 <_malloc_r+0xb0>
 8004d3a:	605b      	str	r3, [r3, #4]
 8004d3c:	deff      	udf	#255	; 0xff
 8004d3e:	bf00      	nop
 8004d40:	20001598 	.word	0x20001598

08004d44 <__malloc_lock>:
 8004d44:	4801      	ldr	r0, [pc, #4]	; (8004d4c <__malloc_lock+0x8>)
 8004d46:	f000 b863 	b.w	8004e10 <__retarget_lock_acquire_recursive>
 8004d4a:	bf00      	nop
 8004d4c:	200016dc 	.word	0x200016dc

08004d50 <__malloc_unlock>:
 8004d50:	4801      	ldr	r0, [pc, #4]	; (8004d58 <__malloc_unlock+0x8>)
 8004d52:	f000 b85e 	b.w	8004e12 <__retarget_lock_release_recursive>
 8004d56:	bf00      	nop
 8004d58:	200016dc 	.word	0x200016dc

08004d5c <siprintf>:
 8004d5c:	b40e      	push	{r1, r2, r3}
 8004d5e:	b500      	push	{lr}
 8004d60:	b09c      	sub	sp, #112	; 0x70
 8004d62:	ab1d      	add	r3, sp, #116	; 0x74
 8004d64:	9002      	str	r0, [sp, #8]
 8004d66:	9006      	str	r0, [sp, #24]
 8004d68:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8004d6c:	4809      	ldr	r0, [pc, #36]	; (8004d94 <siprintf+0x38>)
 8004d6e:	9107      	str	r1, [sp, #28]
 8004d70:	9104      	str	r1, [sp, #16]
 8004d72:	4909      	ldr	r1, [pc, #36]	; (8004d98 <siprintf+0x3c>)
 8004d74:	f853 2b04 	ldr.w	r2, [r3], #4
 8004d78:	9105      	str	r1, [sp, #20]
 8004d7a:	6800      	ldr	r0, [r0, #0]
 8004d7c:	9301      	str	r3, [sp, #4]
 8004d7e:	a902      	add	r1, sp, #8
 8004d80:	f000 f8ee 	bl	8004f60 <_svfiprintf_r>
 8004d84:	9b02      	ldr	r3, [sp, #8]
 8004d86:	2200      	movs	r2, #0
 8004d88:	701a      	strb	r2, [r3, #0]
 8004d8a:	b01c      	add	sp, #112	; 0x70
 8004d8c:	f85d eb04 	ldr.w	lr, [sp], #4
 8004d90:	b003      	add	sp, #12
 8004d92:	4770      	bx	lr
 8004d94:	200000a8 	.word	0x200000a8
 8004d98:	ffff0208 	.word	0xffff0208

08004d9c <_sbrk_r>:
 8004d9c:	b538      	push	{r3, r4, r5, lr}
 8004d9e:	4d06      	ldr	r5, [pc, #24]	; (8004db8 <_sbrk_r+0x1c>)
 8004da0:	2300      	movs	r3, #0
 8004da2:	4604      	mov	r4, r0
 8004da4:	4608      	mov	r0, r1
 8004da6:	602b      	str	r3, [r5, #0]
 8004da8:	f7fc f99a 	bl	80010e0 <_sbrk>
 8004dac:	1c43      	adds	r3, r0, #1
 8004dae:	d102      	bne.n	8004db6 <_sbrk_r+0x1a>
 8004db0:	682b      	ldr	r3, [r5, #0]
 8004db2:	b103      	cbz	r3, 8004db6 <_sbrk_r+0x1a>
 8004db4:	6023      	str	r3, [r4, #0]
 8004db6:	bd38      	pop	{r3, r4, r5, pc}
 8004db8:	200016d8 	.word	0x200016d8

08004dbc <__errno>:
 8004dbc:	4b01      	ldr	r3, [pc, #4]	; (8004dc4 <__errno+0x8>)
 8004dbe:	6818      	ldr	r0, [r3, #0]
 8004dc0:	4770      	bx	lr
 8004dc2:	bf00      	nop
 8004dc4:	200000a8 	.word	0x200000a8

08004dc8 <__libc_init_array>:
 8004dc8:	b570      	push	{r4, r5, r6, lr}
 8004dca:	4d0d      	ldr	r5, [pc, #52]	; (8004e00 <__libc_init_array+0x38>)
 8004dcc:	4c0d      	ldr	r4, [pc, #52]	; (8004e04 <__libc_init_array+0x3c>)
 8004dce:	1b64      	subs	r4, r4, r5
 8004dd0:	10a4      	asrs	r4, r4, #2
 8004dd2:	2600      	movs	r6, #0
 8004dd4:	42a6      	cmp	r6, r4
 8004dd6:	d109      	bne.n	8004dec <__libc_init_array+0x24>
 8004dd8:	4d0b      	ldr	r5, [pc, #44]	; (8004e08 <__libc_init_array+0x40>)
 8004dda:	4c0c      	ldr	r4, [pc, #48]	; (8004e0c <__libc_init_array+0x44>)
 8004ddc:	f000 fbae 	bl	800553c <_init>
 8004de0:	1b64      	subs	r4, r4, r5
 8004de2:	10a4      	asrs	r4, r4, #2
 8004de4:	2600      	movs	r6, #0
 8004de6:	42a6      	cmp	r6, r4
 8004de8:	d105      	bne.n	8004df6 <__libc_init_array+0x2e>
 8004dea:	bd70      	pop	{r4, r5, r6, pc}
 8004dec:	f855 3b04 	ldr.w	r3, [r5], #4
 8004df0:	4798      	blx	r3
 8004df2:	3601      	adds	r6, #1
 8004df4:	e7ee      	b.n	8004dd4 <__libc_init_array+0xc>
 8004df6:	f855 3b04 	ldr.w	r3, [r5], #4
 8004dfa:	4798      	blx	r3
 8004dfc:	3601      	adds	r6, #1
 8004dfe:	e7f2      	b.n	8004de6 <__libc_init_array+0x1e>
 8004e00:	08005c38 	.word	0x08005c38
 8004e04:	08005c38 	.word	0x08005c38
 8004e08:	08005c38 	.word	0x08005c38
 8004e0c:	08005c3c 	.word	0x08005c3c

08004e10 <__retarget_lock_acquire_recursive>:
 8004e10:	4770      	bx	lr

08004e12 <__retarget_lock_release_recursive>:
 8004e12:	4770      	bx	lr

08004e14 <_free_r>:
 8004e14:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004e16:	2900      	cmp	r1, #0
 8004e18:	d044      	beq.n	8004ea4 <_free_r+0x90>
 8004e1a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004e1e:	9001      	str	r0, [sp, #4]
 8004e20:	2b00      	cmp	r3, #0
 8004e22:	f1a1 0404 	sub.w	r4, r1, #4
 8004e26:	bfb8      	it	lt
 8004e28:	18e4      	addlt	r4, r4, r3
 8004e2a:	f7ff ff8b 	bl	8004d44 <__malloc_lock>
 8004e2e:	4a1e      	ldr	r2, [pc, #120]	; (8004ea8 <_free_r+0x94>)
 8004e30:	9801      	ldr	r0, [sp, #4]
 8004e32:	6813      	ldr	r3, [r2, #0]
 8004e34:	b933      	cbnz	r3, 8004e44 <_free_r+0x30>
 8004e36:	6063      	str	r3, [r4, #4]
 8004e38:	6014      	str	r4, [r2, #0]
 8004e3a:	b003      	add	sp, #12
 8004e3c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8004e40:	f7ff bf86 	b.w	8004d50 <__malloc_unlock>
 8004e44:	42a3      	cmp	r3, r4
 8004e46:	d908      	bls.n	8004e5a <_free_r+0x46>
 8004e48:	6825      	ldr	r5, [r4, #0]
 8004e4a:	1961      	adds	r1, r4, r5
 8004e4c:	428b      	cmp	r3, r1
 8004e4e:	bf01      	itttt	eq
 8004e50:	6819      	ldreq	r1, [r3, #0]
 8004e52:	685b      	ldreq	r3, [r3, #4]
 8004e54:	1949      	addeq	r1, r1, r5
 8004e56:	6021      	streq	r1, [r4, #0]
 8004e58:	e7ed      	b.n	8004e36 <_free_r+0x22>
 8004e5a:	461a      	mov	r2, r3
 8004e5c:	685b      	ldr	r3, [r3, #4]
 8004e5e:	b10b      	cbz	r3, 8004e64 <_free_r+0x50>
 8004e60:	42a3      	cmp	r3, r4
 8004e62:	d9fa      	bls.n	8004e5a <_free_r+0x46>
 8004e64:	6811      	ldr	r1, [r2, #0]
 8004e66:	1855      	adds	r5, r2, r1
 8004e68:	42a5      	cmp	r5, r4
 8004e6a:	d10b      	bne.n	8004e84 <_free_r+0x70>
 8004e6c:	6824      	ldr	r4, [r4, #0]
 8004e6e:	4421      	add	r1, r4
 8004e70:	1854      	adds	r4, r2, r1
 8004e72:	42a3      	cmp	r3, r4
 8004e74:	6011      	str	r1, [r2, #0]
 8004e76:	d1e0      	bne.n	8004e3a <_free_r+0x26>
 8004e78:	681c      	ldr	r4, [r3, #0]
 8004e7a:	685b      	ldr	r3, [r3, #4]
 8004e7c:	6053      	str	r3, [r2, #4]
 8004e7e:	440c      	add	r4, r1
 8004e80:	6014      	str	r4, [r2, #0]
 8004e82:	e7da      	b.n	8004e3a <_free_r+0x26>
 8004e84:	d902      	bls.n	8004e8c <_free_r+0x78>
 8004e86:	230c      	movs	r3, #12
 8004e88:	6003      	str	r3, [r0, #0]
 8004e8a:	e7d6      	b.n	8004e3a <_free_r+0x26>
 8004e8c:	6825      	ldr	r5, [r4, #0]
 8004e8e:	1961      	adds	r1, r4, r5
 8004e90:	428b      	cmp	r3, r1
 8004e92:	bf04      	itt	eq
 8004e94:	6819      	ldreq	r1, [r3, #0]
 8004e96:	685b      	ldreq	r3, [r3, #4]
 8004e98:	6063      	str	r3, [r4, #4]
 8004e9a:	bf04      	itt	eq
 8004e9c:	1949      	addeq	r1, r1, r5
 8004e9e:	6021      	streq	r1, [r4, #0]
 8004ea0:	6054      	str	r4, [r2, #4]
 8004ea2:	e7ca      	b.n	8004e3a <_free_r+0x26>
 8004ea4:	b003      	add	sp, #12
 8004ea6:	bd30      	pop	{r4, r5, pc}
 8004ea8:	20001598 	.word	0x20001598

08004eac <__ssputs_r>:
 8004eac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004eb0:	688e      	ldr	r6, [r1, #8]
 8004eb2:	461f      	mov	r7, r3
 8004eb4:	42be      	cmp	r6, r7
 8004eb6:	680b      	ldr	r3, [r1, #0]
 8004eb8:	4682      	mov	sl, r0
 8004eba:	460c      	mov	r4, r1
 8004ebc:	4690      	mov	r8, r2
 8004ebe:	d82c      	bhi.n	8004f1a <__ssputs_r+0x6e>
 8004ec0:	898a      	ldrh	r2, [r1, #12]
 8004ec2:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8004ec6:	d026      	beq.n	8004f16 <__ssputs_r+0x6a>
 8004ec8:	6965      	ldr	r5, [r4, #20]
 8004eca:	6909      	ldr	r1, [r1, #16]
 8004ecc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004ed0:	eba3 0901 	sub.w	r9, r3, r1
 8004ed4:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8004ed8:	1c7b      	adds	r3, r7, #1
 8004eda:	444b      	add	r3, r9
 8004edc:	106d      	asrs	r5, r5, #1
 8004ede:	429d      	cmp	r5, r3
 8004ee0:	bf38      	it	cc
 8004ee2:	461d      	movcc	r5, r3
 8004ee4:	0553      	lsls	r3, r2, #21
 8004ee6:	d527      	bpl.n	8004f38 <__ssputs_r+0x8c>
 8004ee8:	4629      	mov	r1, r5
 8004eea:	f7ff feab 	bl	8004c44 <_malloc_r>
 8004eee:	4606      	mov	r6, r0
 8004ef0:	b360      	cbz	r0, 8004f4c <__ssputs_r+0xa0>
 8004ef2:	6921      	ldr	r1, [r4, #16]
 8004ef4:	464a      	mov	r2, r9
 8004ef6:	f000 fadb 	bl	80054b0 <memcpy>
 8004efa:	89a3      	ldrh	r3, [r4, #12]
 8004efc:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8004f00:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004f04:	81a3      	strh	r3, [r4, #12]
 8004f06:	6126      	str	r6, [r4, #16]
 8004f08:	6165      	str	r5, [r4, #20]
 8004f0a:	444e      	add	r6, r9
 8004f0c:	eba5 0509 	sub.w	r5, r5, r9
 8004f10:	6026      	str	r6, [r4, #0]
 8004f12:	60a5      	str	r5, [r4, #8]
 8004f14:	463e      	mov	r6, r7
 8004f16:	42be      	cmp	r6, r7
 8004f18:	d900      	bls.n	8004f1c <__ssputs_r+0x70>
 8004f1a:	463e      	mov	r6, r7
 8004f1c:	6820      	ldr	r0, [r4, #0]
 8004f1e:	4632      	mov	r2, r6
 8004f20:	4641      	mov	r1, r8
 8004f22:	f000 faab 	bl	800547c <memmove>
 8004f26:	68a3      	ldr	r3, [r4, #8]
 8004f28:	1b9b      	subs	r3, r3, r6
 8004f2a:	60a3      	str	r3, [r4, #8]
 8004f2c:	6823      	ldr	r3, [r4, #0]
 8004f2e:	4433      	add	r3, r6
 8004f30:	6023      	str	r3, [r4, #0]
 8004f32:	2000      	movs	r0, #0
 8004f34:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004f38:	462a      	mov	r2, r5
 8004f3a:	f000 fac7 	bl	80054cc <_realloc_r>
 8004f3e:	4606      	mov	r6, r0
 8004f40:	2800      	cmp	r0, #0
 8004f42:	d1e0      	bne.n	8004f06 <__ssputs_r+0x5a>
 8004f44:	6921      	ldr	r1, [r4, #16]
 8004f46:	4650      	mov	r0, sl
 8004f48:	f7ff ff64 	bl	8004e14 <_free_r>
 8004f4c:	230c      	movs	r3, #12
 8004f4e:	f8ca 3000 	str.w	r3, [sl]
 8004f52:	89a3      	ldrh	r3, [r4, #12]
 8004f54:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004f58:	81a3      	strh	r3, [r4, #12]
 8004f5a:	f04f 30ff 	mov.w	r0, #4294967295
 8004f5e:	e7e9      	b.n	8004f34 <__ssputs_r+0x88>

08004f60 <_svfiprintf_r>:
 8004f60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004f64:	4698      	mov	r8, r3
 8004f66:	898b      	ldrh	r3, [r1, #12]
 8004f68:	061b      	lsls	r3, r3, #24
 8004f6a:	b09d      	sub	sp, #116	; 0x74
 8004f6c:	4607      	mov	r7, r0
 8004f6e:	460d      	mov	r5, r1
 8004f70:	4614      	mov	r4, r2
 8004f72:	d50e      	bpl.n	8004f92 <_svfiprintf_r+0x32>
 8004f74:	690b      	ldr	r3, [r1, #16]
 8004f76:	b963      	cbnz	r3, 8004f92 <_svfiprintf_r+0x32>
 8004f78:	2140      	movs	r1, #64	; 0x40
 8004f7a:	f7ff fe63 	bl	8004c44 <_malloc_r>
 8004f7e:	6028      	str	r0, [r5, #0]
 8004f80:	6128      	str	r0, [r5, #16]
 8004f82:	b920      	cbnz	r0, 8004f8e <_svfiprintf_r+0x2e>
 8004f84:	230c      	movs	r3, #12
 8004f86:	603b      	str	r3, [r7, #0]
 8004f88:	f04f 30ff 	mov.w	r0, #4294967295
 8004f8c:	e0d0      	b.n	8005130 <_svfiprintf_r+0x1d0>
 8004f8e:	2340      	movs	r3, #64	; 0x40
 8004f90:	616b      	str	r3, [r5, #20]
 8004f92:	2300      	movs	r3, #0
 8004f94:	9309      	str	r3, [sp, #36]	; 0x24
 8004f96:	2320      	movs	r3, #32
 8004f98:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8004f9c:	f8cd 800c 	str.w	r8, [sp, #12]
 8004fa0:	2330      	movs	r3, #48	; 0x30
 8004fa2:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8005148 <_svfiprintf_r+0x1e8>
 8004fa6:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8004faa:	f04f 0901 	mov.w	r9, #1
 8004fae:	4623      	mov	r3, r4
 8004fb0:	469a      	mov	sl, r3
 8004fb2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004fb6:	b10a      	cbz	r2, 8004fbc <_svfiprintf_r+0x5c>
 8004fb8:	2a25      	cmp	r2, #37	; 0x25
 8004fba:	d1f9      	bne.n	8004fb0 <_svfiprintf_r+0x50>
 8004fbc:	ebba 0b04 	subs.w	fp, sl, r4
 8004fc0:	d00b      	beq.n	8004fda <_svfiprintf_r+0x7a>
 8004fc2:	465b      	mov	r3, fp
 8004fc4:	4622      	mov	r2, r4
 8004fc6:	4629      	mov	r1, r5
 8004fc8:	4638      	mov	r0, r7
 8004fca:	f7ff ff6f 	bl	8004eac <__ssputs_r>
 8004fce:	3001      	adds	r0, #1
 8004fd0:	f000 80a9 	beq.w	8005126 <_svfiprintf_r+0x1c6>
 8004fd4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004fd6:	445a      	add	r2, fp
 8004fd8:	9209      	str	r2, [sp, #36]	; 0x24
 8004fda:	f89a 3000 	ldrb.w	r3, [sl]
 8004fde:	2b00      	cmp	r3, #0
 8004fe0:	f000 80a1 	beq.w	8005126 <_svfiprintf_r+0x1c6>
 8004fe4:	2300      	movs	r3, #0
 8004fe6:	f04f 32ff 	mov.w	r2, #4294967295
 8004fea:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004fee:	f10a 0a01 	add.w	sl, sl, #1
 8004ff2:	9304      	str	r3, [sp, #16]
 8004ff4:	9307      	str	r3, [sp, #28]
 8004ff6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004ffa:	931a      	str	r3, [sp, #104]	; 0x68
 8004ffc:	4654      	mov	r4, sl
 8004ffe:	2205      	movs	r2, #5
 8005000:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005004:	4850      	ldr	r0, [pc, #320]	; (8005148 <_svfiprintf_r+0x1e8>)
 8005006:	f7fb f8eb 	bl	80001e0 <memchr>
 800500a:	9a04      	ldr	r2, [sp, #16]
 800500c:	b9d8      	cbnz	r0, 8005046 <_svfiprintf_r+0xe6>
 800500e:	06d0      	lsls	r0, r2, #27
 8005010:	bf44      	itt	mi
 8005012:	2320      	movmi	r3, #32
 8005014:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005018:	0711      	lsls	r1, r2, #28
 800501a:	bf44      	itt	mi
 800501c:	232b      	movmi	r3, #43	; 0x2b
 800501e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005022:	f89a 3000 	ldrb.w	r3, [sl]
 8005026:	2b2a      	cmp	r3, #42	; 0x2a
 8005028:	d015      	beq.n	8005056 <_svfiprintf_r+0xf6>
 800502a:	9a07      	ldr	r2, [sp, #28]
 800502c:	4654      	mov	r4, sl
 800502e:	2000      	movs	r0, #0
 8005030:	f04f 0c0a 	mov.w	ip, #10
 8005034:	4621      	mov	r1, r4
 8005036:	f811 3b01 	ldrb.w	r3, [r1], #1
 800503a:	3b30      	subs	r3, #48	; 0x30
 800503c:	2b09      	cmp	r3, #9
 800503e:	d94d      	bls.n	80050dc <_svfiprintf_r+0x17c>
 8005040:	b1b0      	cbz	r0, 8005070 <_svfiprintf_r+0x110>
 8005042:	9207      	str	r2, [sp, #28]
 8005044:	e014      	b.n	8005070 <_svfiprintf_r+0x110>
 8005046:	eba0 0308 	sub.w	r3, r0, r8
 800504a:	fa09 f303 	lsl.w	r3, r9, r3
 800504e:	4313      	orrs	r3, r2
 8005050:	9304      	str	r3, [sp, #16]
 8005052:	46a2      	mov	sl, r4
 8005054:	e7d2      	b.n	8004ffc <_svfiprintf_r+0x9c>
 8005056:	9b03      	ldr	r3, [sp, #12]
 8005058:	1d19      	adds	r1, r3, #4
 800505a:	681b      	ldr	r3, [r3, #0]
 800505c:	9103      	str	r1, [sp, #12]
 800505e:	2b00      	cmp	r3, #0
 8005060:	bfbb      	ittet	lt
 8005062:	425b      	neglt	r3, r3
 8005064:	f042 0202 	orrlt.w	r2, r2, #2
 8005068:	9307      	strge	r3, [sp, #28]
 800506a:	9307      	strlt	r3, [sp, #28]
 800506c:	bfb8      	it	lt
 800506e:	9204      	strlt	r2, [sp, #16]
 8005070:	7823      	ldrb	r3, [r4, #0]
 8005072:	2b2e      	cmp	r3, #46	; 0x2e
 8005074:	d10c      	bne.n	8005090 <_svfiprintf_r+0x130>
 8005076:	7863      	ldrb	r3, [r4, #1]
 8005078:	2b2a      	cmp	r3, #42	; 0x2a
 800507a:	d134      	bne.n	80050e6 <_svfiprintf_r+0x186>
 800507c:	9b03      	ldr	r3, [sp, #12]
 800507e:	1d1a      	adds	r2, r3, #4
 8005080:	681b      	ldr	r3, [r3, #0]
 8005082:	9203      	str	r2, [sp, #12]
 8005084:	2b00      	cmp	r3, #0
 8005086:	bfb8      	it	lt
 8005088:	f04f 33ff 	movlt.w	r3, #4294967295
 800508c:	3402      	adds	r4, #2
 800508e:	9305      	str	r3, [sp, #20]
 8005090:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8005158 <_svfiprintf_r+0x1f8>
 8005094:	7821      	ldrb	r1, [r4, #0]
 8005096:	2203      	movs	r2, #3
 8005098:	4650      	mov	r0, sl
 800509a:	f7fb f8a1 	bl	80001e0 <memchr>
 800509e:	b138      	cbz	r0, 80050b0 <_svfiprintf_r+0x150>
 80050a0:	9b04      	ldr	r3, [sp, #16]
 80050a2:	eba0 000a 	sub.w	r0, r0, sl
 80050a6:	2240      	movs	r2, #64	; 0x40
 80050a8:	4082      	lsls	r2, r0
 80050aa:	4313      	orrs	r3, r2
 80050ac:	3401      	adds	r4, #1
 80050ae:	9304      	str	r3, [sp, #16]
 80050b0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80050b4:	4825      	ldr	r0, [pc, #148]	; (800514c <_svfiprintf_r+0x1ec>)
 80050b6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80050ba:	2206      	movs	r2, #6
 80050bc:	f7fb f890 	bl	80001e0 <memchr>
 80050c0:	2800      	cmp	r0, #0
 80050c2:	d038      	beq.n	8005136 <_svfiprintf_r+0x1d6>
 80050c4:	4b22      	ldr	r3, [pc, #136]	; (8005150 <_svfiprintf_r+0x1f0>)
 80050c6:	bb1b      	cbnz	r3, 8005110 <_svfiprintf_r+0x1b0>
 80050c8:	9b03      	ldr	r3, [sp, #12]
 80050ca:	3307      	adds	r3, #7
 80050cc:	f023 0307 	bic.w	r3, r3, #7
 80050d0:	3308      	adds	r3, #8
 80050d2:	9303      	str	r3, [sp, #12]
 80050d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80050d6:	4433      	add	r3, r6
 80050d8:	9309      	str	r3, [sp, #36]	; 0x24
 80050da:	e768      	b.n	8004fae <_svfiprintf_r+0x4e>
 80050dc:	fb0c 3202 	mla	r2, ip, r2, r3
 80050e0:	460c      	mov	r4, r1
 80050e2:	2001      	movs	r0, #1
 80050e4:	e7a6      	b.n	8005034 <_svfiprintf_r+0xd4>
 80050e6:	2300      	movs	r3, #0
 80050e8:	3401      	adds	r4, #1
 80050ea:	9305      	str	r3, [sp, #20]
 80050ec:	4619      	mov	r1, r3
 80050ee:	f04f 0c0a 	mov.w	ip, #10
 80050f2:	4620      	mov	r0, r4
 80050f4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80050f8:	3a30      	subs	r2, #48	; 0x30
 80050fa:	2a09      	cmp	r2, #9
 80050fc:	d903      	bls.n	8005106 <_svfiprintf_r+0x1a6>
 80050fe:	2b00      	cmp	r3, #0
 8005100:	d0c6      	beq.n	8005090 <_svfiprintf_r+0x130>
 8005102:	9105      	str	r1, [sp, #20]
 8005104:	e7c4      	b.n	8005090 <_svfiprintf_r+0x130>
 8005106:	fb0c 2101 	mla	r1, ip, r1, r2
 800510a:	4604      	mov	r4, r0
 800510c:	2301      	movs	r3, #1
 800510e:	e7f0      	b.n	80050f2 <_svfiprintf_r+0x192>
 8005110:	ab03      	add	r3, sp, #12
 8005112:	9300      	str	r3, [sp, #0]
 8005114:	462a      	mov	r2, r5
 8005116:	4b0f      	ldr	r3, [pc, #60]	; (8005154 <_svfiprintf_r+0x1f4>)
 8005118:	a904      	add	r1, sp, #16
 800511a:	4638      	mov	r0, r7
 800511c:	f3af 8000 	nop.w
 8005120:	1c42      	adds	r2, r0, #1
 8005122:	4606      	mov	r6, r0
 8005124:	d1d6      	bne.n	80050d4 <_svfiprintf_r+0x174>
 8005126:	89ab      	ldrh	r3, [r5, #12]
 8005128:	065b      	lsls	r3, r3, #25
 800512a:	f53f af2d 	bmi.w	8004f88 <_svfiprintf_r+0x28>
 800512e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005130:	b01d      	add	sp, #116	; 0x74
 8005132:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005136:	ab03      	add	r3, sp, #12
 8005138:	9300      	str	r3, [sp, #0]
 800513a:	462a      	mov	r2, r5
 800513c:	4b05      	ldr	r3, [pc, #20]	; (8005154 <_svfiprintf_r+0x1f4>)
 800513e:	a904      	add	r1, sp, #16
 8005140:	4638      	mov	r0, r7
 8005142:	f000 f879 	bl	8005238 <_printf_i>
 8005146:	e7eb      	b.n	8005120 <_svfiprintf_r+0x1c0>
 8005148:	08005c05 	.word	0x08005c05
 800514c:	08005c0f 	.word	0x08005c0f
 8005150:	00000000 	.word	0x00000000
 8005154:	08004ead 	.word	0x08004ead
 8005158:	08005c0b 	.word	0x08005c0b

0800515c <_printf_common>:
 800515c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005160:	4616      	mov	r6, r2
 8005162:	4699      	mov	r9, r3
 8005164:	688a      	ldr	r2, [r1, #8]
 8005166:	690b      	ldr	r3, [r1, #16]
 8005168:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800516c:	4293      	cmp	r3, r2
 800516e:	bfb8      	it	lt
 8005170:	4613      	movlt	r3, r2
 8005172:	6033      	str	r3, [r6, #0]
 8005174:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8005178:	4607      	mov	r7, r0
 800517a:	460c      	mov	r4, r1
 800517c:	b10a      	cbz	r2, 8005182 <_printf_common+0x26>
 800517e:	3301      	adds	r3, #1
 8005180:	6033      	str	r3, [r6, #0]
 8005182:	6823      	ldr	r3, [r4, #0]
 8005184:	0699      	lsls	r1, r3, #26
 8005186:	bf42      	ittt	mi
 8005188:	6833      	ldrmi	r3, [r6, #0]
 800518a:	3302      	addmi	r3, #2
 800518c:	6033      	strmi	r3, [r6, #0]
 800518e:	6825      	ldr	r5, [r4, #0]
 8005190:	f015 0506 	ands.w	r5, r5, #6
 8005194:	d106      	bne.n	80051a4 <_printf_common+0x48>
 8005196:	f104 0a19 	add.w	sl, r4, #25
 800519a:	68e3      	ldr	r3, [r4, #12]
 800519c:	6832      	ldr	r2, [r6, #0]
 800519e:	1a9b      	subs	r3, r3, r2
 80051a0:	42ab      	cmp	r3, r5
 80051a2:	dc26      	bgt.n	80051f2 <_printf_common+0x96>
 80051a4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80051a8:	1e13      	subs	r3, r2, #0
 80051aa:	6822      	ldr	r2, [r4, #0]
 80051ac:	bf18      	it	ne
 80051ae:	2301      	movne	r3, #1
 80051b0:	0692      	lsls	r2, r2, #26
 80051b2:	d42b      	bmi.n	800520c <_printf_common+0xb0>
 80051b4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80051b8:	4649      	mov	r1, r9
 80051ba:	4638      	mov	r0, r7
 80051bc:	47c0      	blx	r8
 80051be:	3001      	adds	r0, #1
 80051c0:	d01e      	beq.n	8005200 <_printf_common+0xa4>
 80051c2:	6823      	ldr	r3, [r4, #0]
 80051c4:	6922      	ldr	r2, [r4, #16]
 80051c6:	f003 0306 	and.w	r3, r3, #6
 80051ca:	2b04      	cmp	r3, #4
 80051cc:	bf02      	ittt	eq
 80051ce:	68e5      	ldreq	r5, [r4, #12]
 80051d0:	6833      	ldreq	r3, [r6, #0]
 80051d2:	1aed      	subeq	r5, r5, r3
 80051d4:	68a3      	ldr	r3, [r4, #8]
 80051d6:	bf0c      	ite	eq
 80051d8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80051dc:	2500      	movne	r5, #0
 80051de:	4293      	cmp	r3, r2
 80051e0:	bfc4      	itt	gt
 80051e2:	1a9b      	subgt	r3, r3, r2
 80051e4:	18ed      	addgt	r5, r5, r3
 80051e6:	2600      	movs	r6, #0
 80051e8:	341a      	adds	r4, #26
 80051ea:	42b5      	cmp	r5, r6
 80051ec:	d11a      	bne.n	8005224 <_printf_common+0xc8>
 80051ee:	2000      	movs	r0, #0
 80051f0:	e008      	b.n	8005204 <_printf_common+0xa8>
 80051f2:	2301      	movs	r3, #1
 80051f4:	4652      	mov	r2, sl
 80051f6:	4649      	mov	r1, r9
 80051f8:	4638      	mov	r0, r7
 80051fa:	47c0      	blx	r8
 80051fc:	3001      	adds	r0, #1
 80051fe:	d103      	bne.n	8005208 <_printf_common+0xac>
 8005200:	f04f 30ff 	mov.w	r0, #4294967295
 8005204:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005208:	3501      	adds	r5, #1
 800520a:	e7c6      	b.n	800519a <_printf_common+0x3e>
 800520c:	18e1      	adds	r1, r4, r3
 800520e:	1c5a      	adds	r2, r3, #1
 8005210:	2030      	movs	r0, #48	; 0x30
 8005212:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8005216:	4422      	add	r2, r4
 8005218:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800521c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8005220:	3302      	adds	r3, #2
 8005222:	e7c7      	b.n	80051b4 <_printf_common+0x58>
 8005224:	2301      	movs	r3, #1
 8005226:	4622      	mov	r2, r4
 8005228:	4649      	mov	r1, r9
 800522a:	4638      	mov	r0, r7
 800522c:	47c0      	blx	r8
 800522e:	3001      	adds	r0, #1
 8005230:	d0e6      	beq.n	8005200 <_printf_common+0xa4>
 8005232:	3601      	adds	r6, #1
 8005234:	e7d9      	b.n	80051ea <_printf_common+0x8e>
	...

08005238 <_printf_i>:
 8005238:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800523c:	7e0f      	ldrb	r7, [r1, #24]
 800523e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8005240:	2f78      	cmp	r7, #120	; 0x78
 8005242:	4691      	mov	r9, r2
 8005244:	4680      	mov	r8, r0
 8005246:	460c      	mov	r4, r1
 8005248:	469a      	mov	sl, r3
 800524a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800524e:	d807      	bhi.n	8005260 <_printf_i+0x28>
 8005250:	2f62      	cmp	r7, #98	; 0x62
 8005252:	d80a      	bhi.n	800526a <_printf_i+0x32>
 8005254:	2f00      	cmp	r7, #0
 8005256:	f000 80d4 	beq.w	8005402 <_printf_i+0x1ca>
 800525a:	2f58      	cmp	r7, #88	; 0x58
 800525c:	f000 80c0 	beq.w	80053e0 <_printf_i+0x1a8>
 8005260:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005264:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8005268:	e03a      	b.n	80052e0 <_printf_i+0xa8>
 800526a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800526e:	2b15      	cmp	r3, #21
 8005270:	d8f6      	bhi.n	8005260 <_printf_i+0x28>
 8005272:	a101      	add	r1, pc, #4	; (adr r1, 8005278 <_printf_i+0x40>)
 8005274:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8005278:	080052d1 	.word	0x080052d1
 800527c:	080052e5 	.word	0x080052e5
 8005280:	08005261 	.word	0x08005261
 8005284:	08005261 	.word	0x08005261
 8005288:	08005261 	.word	0x08005261
 800528c:	08005261 	.word	0x08005261
 8005290:	080052e5 	.word	0x080052e5
 8005294:	08005261 	.word	0x08005261
 8005298:	08005261 	.word	0x08005261
 800529c:	08005261 	.word	0x08005261
 80052a0:	08005261 	.word	0x08005261
 80052a4:	080053e9 	.word	0x080053e9
 80052a8:	08005311 	.word	0x08005311
 80052ac:	080053a3 	.word	0x080053a3
 80052b0:	08005261 	.word	0x08005261
 80052b4:	08005261 	.word	0x08005261
 80052b8:	0800540b 	.word	0x0800540b
 80052bc:	08005261 	.word	0x08005261
 80052c0:	08005311 	.word	0x08005311
 80052c4:	08005261 	.word	0x08005261
 80052c8:	08005261 	.word	0x08005261
 80052cc:	080053ab 	.word	0x080053ab
 80052d0:	682b      	ldr	r3, [r5, #0]
 80052d2:	1d1a      	adds	r2, r3, #4
 80052d4:	681b      	ldr	r3, [r3, #0]
 80052d6:	602a      	str	r2, [r5, #0]
 80052d8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80052dc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80052e0:	2301      	movs	r3, #1
 80052e2:	e09f      	b.n	8005424 <_printf_i+0x1ec>
 80052e4:	6820      	ldr	r0, [r4, #0]
 80052e6:	682b      	ldr	r3, [r5, #0]
 80052e8:	0607      	lsls	r7, r0, #24
 80052ea:	f103 0104 	add.w	r1, r3, #4
 80052ee:	6029      	str	r1, [r5, #0]
 80052f0:	d501      	bpl.n	80052f6 <_printf_i+0xbe>
 80052f2:	681e      	ldr	r6, [r3, #0]
 80052f4:	e003      	b.n	80052fe <_printf_i+0xc6>
 80052f6:	0646      	lsls	r6, r0, #25
 80052f8:	d5fb      	bpl.n	80052f2 <_printf_i+0xba>
 80052fa:	f9b3 6000 	ldrsh.w	r6, [r3]
 80052fe:	2e00      	cmp	r6, #0
 8005300:	da03      	bge.n	800530a <_printf_i+0xd2>
 8005302:	232d      	movs	r3, #45	; 0x2d
 8005304:	4276      	negs	r6, r6
 8005306:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800530a:	485a      	ldr	r0, [pc, #360]	; (8005474 <_printf_i+0x23c>)
 800530c:	230a      	movs	r3, #10
 800530e:	e012      	b.n	8005336 <_printf_i+0xfe>
 8005310:	682b      	ldr	r3, [r5, #0]
 8005312:	6820      	ldr	r0, [r4, #0]
 8005314:	1d19      	adds	r1, r3, #4
 8005316:	6029      	str	r1, [r5, #0]
 8005318:	0605      	lsls	r5, r0, #24
 800531a:	d501      	bpl.n	8005320 <_printf_i+0xe8>
 800531c:	681e      	ldr	r6, [r3, #0]
 800531e:	e002      	b.n	8005326 <_printf_i+0xee>
 8005320:	0641      	lsls	r1, r0, #25
 8005322:	d5fb      	bpl.n	800531c <_printf_i+0xe4>
 8005324:	881e      	ldrh	r6, [r3, #0]
 8005326:	4853      	ldr	r0, [pc, #332]	; (8005474 <_printf_i+0x23c>)
 8005328:	2f6f      	cmp	r7, #111	; 0x6f
 800532a:	bf0c      	ite	eq
 800532c:	2308      	moveq	r3, #8
 800532e:	230a      	movne	r3, #10
 8005330:	2100      	movs	r1, #0
 8005332:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8005336:	6865      	ldr	r5, [r4, #4]
 8005338:	60a5      	str	r5, [r4, #8]
 800533a:	2d00      	cmp	r5, #0
 800533c:	bfa2      	ittt	ge
 800533e:	6821      	ldrge	r1, [r4, #0]
 8005340:	f021 0104 	bicge.w	r1, r1, #4
 8005344:	6021      	strge	r1, [r4, #0]
 8005346:	b90e      	cbnz	r6, 800534c <_printf_i+0x114>
 8005348:	2d00      	cmp	r5, #0
 800534a:	d04b      	beq.n	80053e4 <_printf_i+0x1ac>
 800534c:	4615      	mov	r5, r2
 800534e:	fbb6 f1f3 	udiv	r1, r6, r3
 8005352:	fb03 6711 	mls	r7, r3, r1, r6
 8005356:	5dc7      	ldrb	r7, [r0, r7]
 8005358:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800535c:	4637      	mov	r7, r6
 800535e:	42bb      	cmp	r3, r7
 8005360:	460e      	mov	r6, r1
 8005362:	d9f4      	bls.n	800534e <_printf_i+0x116>
 8005364:	2b08      	cmp	r3, #8
 8005366:	d10b      	bne.n	8005380 <_printf_i+0x148>
 8005368:	6823      	ldr	r3, [r4, #0]
 800536a:	07de      	lsls	r6, r3, #31
 800536c:	d508      	bpl.n	8005380 <_printf_i+0x148>
 800536e:	6923      	ldr	r3, [r4, #16]
 8005370:	6861      	ldr	r1, [r4, #4]
 8005372:	4299      	cmp	r1, r3
 8005374:	bfde      	ittt	le
 8005376:	2330      	movle	r3, #48	; 0x30
 8005378:	f805 3c01 	strble.w	r3, [r5, #-1]
 800537c:	f105 35ff 	addle.w	r5, r5, #4294967295
 8005380:	1b52      	subs	r2, r2, r5
 8005382:	6122      	str	r2, [r4, #16]
 8005384:	f8cd a000 	str.w	sl, [sp]
 8005388:	464b      	mov	r3, r9
 800538a:	aa03      	add	r2, sp, #12
 800538c:	4621      	mov	r1, r4
 800538e:	4640      	mov	r0, r8
 8005390:	f7ff fee4 	bl	800515c <_printf_common>
 8005394:	3001      	adds	r0, #1
 8005396:	d14a      	bne.n	800542e <_printf_i+0x1f6>
 8005398:	f04f 30ff 	mov.w	r0, #4294967295
 800539c:	b004      	add	sp, #16
 800539e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80053a2:	6823      	ldr	r3, [r4, #0]
 80053a4:	f043 0320 	orr.w	r3, r3, #32
 80053a8:	6023      	str	r3, [r4, #0]
 80053aa:	4833      	ldr	r0, [pc, #204]	; (8005478 <_printf_i+0x240>)
 80053ac:	2778      	movs	r7, #120	; 0x78
 80053ae:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80053b2:	6823      	ldr	r3, [r4, #0]
 80053b4:	6829      	ldr	r1, [r5, #0]
 80053b6:	061f      	lsls	r7, r3, #24
 80053b8:	f851 6b04 	ldr.w	r6, [r1], #4
 80053bc:	d402      	bmi.n	80053c4 <_printf_i+0x18c>
 80053be:	065f      	lsls	r7, r3, #25
 80053c0:	bf48      	it	mi
 80053c2:	b2b6      	uxthmi	r6, r6
 80053c4:	07df      	lsls	r7, r3, #31
 80053c6:	bf48      	it	mi
 80053c8:	f043 0320 	orrmi.w	r3, r3, #32
 80053cc:	6029      	str	r1, [r5, #0]
 80053ce:	bf48      	it	mi
 80053d0:	6023      	strmi	r3, [r4, #0]
 80053d2:	b91e      	cbnz	r6, 80053dc <_printf_i+0x1a4>
 80053d4:	6823      	ldr	r3, [r4, #0]
 80053d6:	f023 0320 	bic.w	r3, r3, #32
 80053da:	6023      	str	r3, [r4, #0]
 80053dc:	2310      	movs	r3, #16
 80053de:	e7a7      	b.n	8005330 <_printf_i+0xf8>
 80053e0:	4824      	ldr	r0, [pc, #144]	; (8005474 <_printf_i+0x23c>)
 80053e2:	e7e4      	b.n	80053ae <_printf_i+0x176>
 80053e4:	4615      	mov	r5, r2
 80053e6:	e7bd      	b.n	8005364 <_printf_i+0x12c>
 80053e8:	682b      	ldr	r3, [r5, #0]
 80053ea:	6826      	ldr	r6, [r4, #0]
 80053ec:	6961      	ldr	r1, [r4, #20]
 80053ee:	1d18      	adds	r0, r3, #4
 80053f0:	6028      	str	r0, [r5, #0]
 80053f2:	0635      	lsls	r5, r6, #24
 80053f4:	681b      	ldr	r3, [r3, #0]
 80053f6:	d501      	bpl.n	80053fc <_printf_i+0x1c4>
 80053f8:	6019      	str	r1, [r3, #0]
 80053fa:	e002      	b.n	8005402 <_printf_i+0x1ca>
 80053fc:	0670      	lsls	r0, r6, #25
 80053fe:	d5fb      	bpl.n	80053f8 <_printf_i+0x1c0>
 8005400:	8019      	strh	r1, [r3, #0]
 8005402:	2300      	movs	r3, #0
 8005404:	6123      	str	r3, [r4, #16]
 8005406:	4615      	mov	r5, r2
 8005408:	e7bc      	b.n	8005384 <_printf_i+0x14c>
 800540a:	682b      	ldr	r3, [r5, #0]
 800540c:	1d1a      	adds	r2, r3, #4
 800540e:	602a      	str	r2, [r5, #0]
 8005410:	681d      	ldr	r5, [r3, #0]
 8005412:	6862      	ldr	r2, [r4, #4]
 8005414:	2100      	movs	r1, #0
 8005416:	4628      	mov	r0, r5
 8005418:	f7fa fee2 	bl	80001e0 <memchr>
 800541c:	b108      	cbz	r0, 8005422 <_printf_i+0x1ea>
 800541e:	1b40      	subs	r0, r0, r5
 8005420:	6060      	str	r0, [r4, #4]
 8005422:	6863      	ldr	r3, [r4, #4]
 8005424:	6123      	str	r3, [r4, #16]
 8005426:	2300      	movs	r3, #0
 8005428:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800542c:	e7aa      	b.n	8005384 <_printf_i+0x14c>
 800542e:	6923      	ldr	r3, [r4, #16]
 8005430:	462a      	mov	r2, r5
 8005432:	4649      	mov	r1, r9
 8005434:	4640      	mov	r0, r8
 8005436:	47d0      	blx	sl
 8005438:	3001      	adds	r0, #1
 800543a:	d0ad      	beq.n	8005398 <_printf_i+0x160>
 800543c:	6823      	ldr	r3, [r4, #0]
 800543e:	079b      	lsls	r3, r3, #30
 8005440:	d413      	bmi.n	800546a <_printf_i+0x232>
 8005442:	68e0      	ldr	r0, [r4, #12]
 8005444:	9b03      	ldr	r3, [sp, #12]
 8005446:	4298      	cmp	r0, r3
 8005448:	bfb8      	it	lt
 800544a:	4618      	movlt	r0, r3
 800544c:	e7a6      	b.n	800539c <_printf_i+0x164>
 800544e:	2301      	movs	r3, #1
 8005450:	4632      	mov	r2, r6
 8005452:	4649      	mov	r1, r9
 8005454:	4640      	mov	r0, r8
 8005456:	47d0      	blx	sl
 8005458:	3001      	adds	r0, #1
 800545a:	d09d      	beq.n	8005398 <_printf_i+0x160>
 800545c:	3501      	adds	r5, #1
 800545e:	68e3      	ldr	r3, [r4, #12]
 8005460:	9903      	ldr	r1, [sp, #12]
 8005462:	1a5b      	subs	r3, r3, r1
 8005464:	42ab      	cmp	r3, r5
 8005466:	dcf2      	bgt.n	800544e <_printf_i+0x216>
 8005468:	e7eb      	b.n	8005442 <_printf_i+0x20a>
 800546a:	2500      	movs	r5, #0
 800546c:	f104 0619 	add.w	r6, r4, #25
 8005470:	e7f5      	b.n	800545e <_printf_i+0x226>
 8005472:	bf00      	nop
 8005474:	08005c16 	.word	0x08005c16
 8005478:	08005c27 	.word	0x08005c27

0800547c <memmove>:
 800547c:	4288      	cmp	r0, r1
 800547e:	b510      	push	{r4, lr}
 8005480:	eb01 0402 	add.w	r4, r1, r2
 8005484:	d902      	bls.n	800548c <memmove+0x10>
 8005486:	4284      	cmp	r4, r0
 8005488:	4623      	mov	r3, r4
 800548a:	d807      	bhi.n	800549c <memmove+0x20>
 800548c:	1e43      	subs	r3, r0, #1
 800548e:	42a1      	cmp	r1, r4
 8005490:	d008      	beq.n	80054a4 <memmove+0x28>
 8005492:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005496:	f803 2f01 	strb.w	r2, [r3, #1]!
 800549a:	e7f8      	b.n	800548e <memmove+0x12>
 800549c:	4402      	add	r2, r0
 800549e:	4601      	mov	r1, r0
 80054a0:	428a      	cmp	r2, r1
 80054a2:	d100      	bne.n	80054a6 <memmove+0x2a>
 80054a4:	bd10      	pop	{r4, pc}
 80054a6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80054aa:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80054ae:	e7f7      	b.n	80054a0 <memmove+0x24>

080054b0 <memcpy>:
 80054b0:	440a      	add	r2, r1
 80054b2:	4291      	cmp	r1, r2
 80054b4:	f100 33ff 	add.w	r3, r0, #4294967295
 80054b8:	d100      	bne.n	80054bc <memcpy+0xc>
 80054ba:	4770      	bx	lr
 80054bc:	b510      	push	{r4, lr}
 80054be:	f811 4b01 	ldrb.w	r4, [r1], #1
 80054c2:	f803 4f01 	strb.w	r4, [r3, #1]!
 80054c6:	4291      	cmp	r1, r2
 80054c8:	d1f9      	bne.n	80054be <memcpy+0xe>
 80054ca:	bd10      	pop	{r4, pc}

080054cc <_realloc_r>:
 80054cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80054d0:	4680      	mov	r8, r0
 80054d2:	4614      	mov	r4, r2
 80054d4:	460e      	mov	r6, r1
 80054d6:	b921      	cbnz	r1, 80054e2 <_realloc_r+0x16>
 80054d8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80054dc:	4611      	mov	r1, r2
 80054de:	f7ff bbb1 	b.w	8004c44 <_malloc_r>
 80054e2:	b92a      	cbnz	r2, 80054f0 <_realloc_r+0x24>
 80054e4:	f7ff fc96 	bl	8004e14 <_free_r>
 80054e8:	4625      	mov	r5, r4
 80054ea:	4628      	mov	r0, r5
 80054ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80054f0:	f000 f81b 	bl	800552a <_malloc_usable_size_r>
 80054f4:	4284      	cmp	r4, r0
 80054f6:	4607      	mov	r7, r0
 80054f8:	d802      	bhi.n	8005500 <_realloc_r+0x34>
 80054fa:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80054fe:	d812      	bhi.n	8005526 <_realloc_r+0x5a>
 8005500:	4621      	mov	r1, r4
 8005502:	4640      	mov	r0, r8
 8005504:	f7ff fb9e 	bl	8004c44 <_malloc_r>
 8005508:	4605      	mov	r5, r0
 800550a:	2800      	cmp	r0, #0
 800550c:	d0ed      	beq.n	80054ea <_realloc_r+0x1e>
 800550e:	42bc      	cmp	r4, r7
 8005510:	4622      	mov	r2, r4
 8005512:	4631      	mov	r1, r6
 8005514:	bf28      	it	cs
 8005516:	463a      	movcs	r2, r7
 8005518:	f7ff ffca 	bl	80054b0 <memcpy>
 800551c:	4631      	mov	r1, r6
 800551e:	4640      	mov	r0, r8
 8005520:	f7ff fc78 	bl	8004e14 <_free_r>
 8005524:	e7e1      	b.n	80054ea <_realloc_r+0x1e>
 8005526:	4635      	mov	r5, r6
 8005528:	e7df      	b.n	80054ea <_realloc_r+0x1e>

0800552a <_malloc_usable_size_r>:
 800552a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800552e:	1f18      	subs	r0, r3, #4
 8005530:	2b00      	cmp	r3, #0
 8005532:	bfbc      	itt	lt
 8005534:	580b      	ldrlt	r3, [r1, r0]
 8005536:	18c0      	addlt	r0, r0, r3
 8005538:	4770      	bx	lr
	...

0800553c <_init>:
 800553c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800553e:	bf00      	nop
 8005540:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005542:	bc08      	pop	{r3}
 8005544:	469e      	mov	lr, r3
 8005546:	4770      	bx	lr

08005548 <_fini>:
 8005548:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800554a:	bf00      	nop
 800554c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800554e:	bc08      	pop	{r3}
 8005550:	469e      	mov	lr, r3
 8005552:	4770      	bx	lr
